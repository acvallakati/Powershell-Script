{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 1,
      "content": {
        "json": "## Cost Optimization Dashboard\r\n"
      },
      "name": "text - Title"
    },
    {
      "type": 1,
      "content": {
        "json": "![alt text](https://github.com/chinmay278/dashboard/blob/main/dashboard_header.png?raw=true)"
      },
      "customWidth": "100",
      "name": "text - 102"
    },
    {
      "type": 11,
      "content": {
        "version": "LinkItem/1.0",
        "style": "paragraph",
        "links": [
          {
            "id": "f321b3dd-4d96-4aa7-ac57-5ad8ce236a48",
            "cellValue": "selectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Overview",
            "subTarget": "overview",
            "style": "primary"
          },
          {
            "id": "71159353-42dc-4cf2-b280-2596226eb221",
            "cellValue": "selectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Orphaned Resources",
            "subTarget": "op",
            "style": "primary"
          },
          {
            "id": "d07b7216-1de3-4d3c-a822-ad82db53155f",
            "cellValue": "selectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Hybrid Benefits",
            "subTarget": "hybenef",
            "style": "primary"
          },
          {
            "id": "bb4d6fe1-a53f-4f1a-9f03-e67e83f0dbf3",
            "cellValue": "selectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Under Utilized VM",
            "subTarget": "uuvm",
            "style": "primary"
          },
          {
            "id": "000ccd2e-e3ef-4d12-b253-5e22c4be8863",
            "cellValue": "selectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Stop VM Details",
            "subTarget": "svmd",
            "style": "primary"
          },
          {
            "id": "d868623d-cd79-4b10-bbaf-0460dd3aeb0f",
            "cellValue": "selectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Reservation",
            "subTarget": "res",
            "style": "primary"
          },
          {
            "id": "5ba2f93c-7268-4329-b8e5-3d20f5566707",
            "cellValue": "selectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Retention",
            "subTarget": "ret",
            "style": "primary"
          },
          {
            "id": "283efc9f-2370-49d0-b80f-fe5a77ccccb8",
            "cellValue": "selectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Compute",
            "subTarget": "srt",
            "style": "primary"
          },
          {
            "id": "ddffddcc-203f-492c-a0b4-39c991f3c63d",
            "cellValue": "selectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Backup",
            "subTarget": "bkp",
            "style": "primary"
          },
          {
            "id": "5440b7fc-c488-4ee5-964f-0559d16e1671",
            "cellValue": "selectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Sandbox",
            "subTarget": "bil",
            "style": "primary"
          },
          {
            "id": "60a3a3db-bdfd-4cc8-b1d2-9560776095f0",
            "cellValue": "selectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Cost Advisory",
            "subTarget": "ca",
            "style": "primary"
          },
          {
            "id": "dc96b41b-6062-4836-b801-5912fa0777ae",
            "cellValue": "selectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Tagging & Security Score",
            "subTarget": "tag",
            "style": "primary"
          }
        ]
      },
      "name": "links - Tabs",
      "styleSettings": {
        "margin": "0"
      }
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "a36f0b3d-8826-4bec-95a9-70ec6cb77713",
            "version": "KqlParameterItem/1.0",
            "name": "Subscriptions",
            "type": 6,
            "isRequired": true,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "typeSettings": {
              "additionalResourceOptions": [
                "value::1",
                "value::all"
              ],
              "includeAll": true,
              "showDefault": false
            },
            "defaultValue": "value::all"
          }
        ],
        "style": "pills",
        "doNotRunWhenHidden": true,
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces"
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "overview"
      },
      "name": "parameters - Filter by Subscription"
    },
    {
      "type": 1,
      "content": {
        "json": "## NoShow - Begin Overview"
      },
      "conditionalVisibility": {
        "parameterName": "noshow",
        "comparison": "isEqualTo",
        "value": "noshow"
      },
      "name": "text - NoShow Overview"
    },
    {
      "type": 1,
      "content": {
        "json": "# Overview Azure Orphan Resources"
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "overview"
      },
      "name": "text - Overview Azure Orphan Resources"
    },
    {
      "type": 1,
      "content": {
        "json": "In certain situations, you must pay for the resources even though they are orphans, while in others, they are free but might lead to operational complexity and misconfiguration.",
        "style": "info"
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "overview"
      },
      "name": "text - 156"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "Resources\r\n| where type has \"microsoft.compute/disks\"\r\n| extend diskState = tostring(properties.diskState)\r\n| where managedBy == \"\"\r\n| where not(name endswith \"-ASRReplica\" or name startswith \"ms-asr-\")\r\n| summarize count(type)",
        "size": 4,
        "title": "Disks üí≤",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscriptions}"
        ],
        "visualization": "tiles",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "$gen_group",
              "formatter": 13,
              "formatOptions": {
                "linkTarget": "Resource",
                "showIcon": true
              }
            },
            {
              "columnMatch": "id",
              "formatter": 5
            },
            {
              "columnMatch": "subscriptionId",
              "formatter": 5
            },
            {
              "columnMatch": "Details",
              "formatter": 7,
              "formatOptions": {
                "linkTarget": "CellDetails",
                "linkLabel": "üîç View Details",
                "linkIsContextBlade": true
              }
            }
          ],
          "rowLimit": 1000,
          "hierarchySettings": {
            "treeType": 1,
            "groupBy": [
              "subscriptionId"
            ],
            "expandTopLevel": true,
            "finalBy": "id"
          }
        },
        "sortBy": [],
        "tileSettings": {
          "titleContent": {
            "columnMatch": "count_type",
            "formatter": 12,
            "formatOptions": {
              "palette": "auto"
            }
          },
          "showBorder": true,
          "sortOrderField": 2,
          "size": "auto"
        },
        "graphSettings": {
          "type": 0,
          "topContent": {
            "columnMatch": "vmSize",
            "formatter": 1
          },
          "centerContent": {
            "columnMatch": "Count",
            "formatter": 1,
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          }
        },
        "textSettings": {
          "style": "bignumber"
        }
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "overview"
      },
      "customWidth": "15",
      "name": "query - Orphan Disks Count"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "Resources\r\n| where type has \"microsoft.network/networkinterfaces\"\r\n| where isnull(properties.privateEndpoint)\r\n| where isnull(properties.privateLinkService)\r\n| where properties.hostedWorkloads == \"[]\"\r\n| where properties !has 'virtualmachine'\r\n| summarize count(type)",
        "size": 4,
        "title": "Network Interfaces",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscriptions}"
        ],
        "visualization": "tiles",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "$gen_group",
              "formatter": 13,
              "formatOptions": {
                "linkTarget": "Resource",
                "showIcon": true
              }
            },
            {
              "columnMatch": "id",
              "formatter": 5
            },
            {
              "columnMatch": "subscriptionId",
              "formatter": 5
            },
            {
              "columnMatch": "Details",
              "formatter": 7,
              "formatOptions": {
                "linkTarget": "CellDetails",
                "linkLabel": "üîç View Details",
                "linkIsContextBlade": true
              }
            }
          ],
          "rowLimit": 1000,
          "hierarchySettings": {
            "treeType": 1,
            "groupBy": [
              "subscriptionId"
            ],
            "expandTopLevel": true,
            "finalBy": "id"
          }
        },
        "sortBy": [],
        "tileSettings": {
          "titleContent": {
            "columnMatch": "count_type",
            "formatter": 12,
            "formatOptions": {
              "palette": "auto"
            }
          },
          "showBorder": true,
          "sortOrderField": 2,
          "size": "auto"
        },
        "graphSettings": {
          "type": 0,
          "topContent": {
            "columnMatch": "vmSize",
            "formatter": 1
          },
          "centerContent": {
            "columnMatch": "Count",
            "formatter": 1,
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          }
        },
        "textSettings": {
          "style": "bignumber"
        }
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "overview"
      },
      "customWidth": "15",
      "name": "query - Orphan Network Interfaces Count"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "Resources\r\n| where type == \"microsoft.network/publicipaddresses\"\r\n| where properties.ipConfiguration == \"\" and properties.natGateway == \"\"\r\n| summarize count(type)",
        "size": 4,
        "title": "Public IPs  üí≤",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscriptions}"
        ],
        "visualization": "tiles",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "$gen_group",
              "formatter": 13,
              "formatOptions": {
                "linkTarget": "Resource",
                "showIcon": true
              }
            },
            {
              "columnMatch": "id",
              "formatter": 5
            },
            {
              "columnMatch": "subscriptionId",
              "formatter": 5
            },
            {
              "columnMatch": "Details",
              "formatter": 7,
              "formatOptions": {
                "linkTarget": "CellDetails",
                "linkLabel": "üîç View Details",
                "linkIsContextBlade": true
              }
            }
          ],
          "rowLimit": 1000,
          "hierarchySettings": {
            "treeType": 1,
            "groupBy": [
              "subscriptionId"
            ],
            "expandTopLevel": true,
            "finalBy": "id"
          }
        },
        "sortBy": [],
        "tileSettings": {
          "titleContent": {
            "columnMatch": "count_type",
            "formatter": 12,
            "formatOptions": {
              "palette": "auto"
            }
          },
          "showBorder": true,
          "sortOrderField": 2,
          "size": "auto"
        },
        "graphSettings": {
          "type": 0,
          "topContent": {
            "columnMatch": "vmSize",
            "formatter": 1
          },
          "centerContent": {
            "columnMatch": "Count",
            "formatter": 1,
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          }
        },
        "textSettings": {
          "style": "bignumber"
        }
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "overview"
      },
      "customWidth": "15",
      "name": "query - Orphan Public IPs Count"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "ResourceContainers\r\n| where type == \"microsoft.resources/subscriptions/resourcegroups\"\r\n| extend rgAndSub = strcat(resourceGroup, \"--\", subscriptionId)\r\n| join kind=leftouter (\r\n    Resources\r\n    | extend rgAndSub = strcat(resourceGroup, \"--\", subscriptionId)\r\n    | summarize count() by rgAndSub\r\n) on rgAndSub\r\n| where isnull(count_)\r\n| summarize count(type)",
        "size": 4,
        "title": "Resource Groups",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscriptions}"
        ],
        "visualization": "tiles",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "$gen_group",
              "formatter": 13,
              "formatOptions": {
                "linkTarget": "Resource",
                "showIcon": true
              }
            },
            {
              "columnMatch": "id",
              "formatter": 5
            },
            {
              "columnMatch": "subscriptionId",
              "formatter": 5
            },
            {
              "columnMatch": "Details",
              "formatter": 7,
              "formatOptions": {
                "linkTarget": "CellDetails",
                "linkLabel": "üîç View Details",
                "linkIsContextBlade": true
              }
            }
          ],
          "rowLimit": 1000,
          "hierarchySettings": {
            "treeType": 1,
            "groupBy": [
              "subscriptionId"
            ],
            "expandTopLevel": true,
            "finalBy": "id"
          }
        },
        "sortBy": [],
        "tileSettings": {
          "titleContent": {
            "columnMatch": "count_type",
            "formatter": 12,
            "formatOptions": {
              "palette": "auto"
            }
          },
          "showBorder": true,
          "sortOrderField": 2,
          "size": "auto"
        },
        "graphSettings": {
          "type": 0,
          "topContent": {
            "columnMatch": "vmSize",
            "formatter": 1
          },
          "centerContent": {
            "columnMatch": "Count",
            "formatter": 1,
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          }
        },
        "textSettings": {
          "style": "bignumber"
        }
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "overview"
      },
      "customWidth": "15",
      "name": "query - Orphan Resource Groups Count"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "Resources\r\n| where type == \"microsoft.network/networksecuritygroups\" and isnull(properties.networkInterfaces) and isnull(properties.subnets)\r\n| summarize count(type)",
        "size": 4,
        "title": "Network Security Groups",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscriptions}"
        ],
        "visualization": "tiles",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "$gen_group",
              "formatter": 13,
              "formatOptions": {
                "linkTarget": "Resource",
                "showIcon": true
              }
            },
            {
              "columnMatch": "id",
              "formatter": 5
            },
            {
              "columnMatch": "subscriptionId",
              "formatter": 5
            },
            {
              "columnMatch": "Details",
              "formatter": 7,
              "formatOptions": {
                "linkTarget": "CellDetails",
                "linkLabel": "üîç View Details",
                "linkIsContextBlade": true
              }
            }
          ],
          "rowLimit": 1000,
          "hierarchySettings": {
            "treeType": 1,
            "groupBy": [
              "subscriptionId"
            ],
            "expandTopLevel": true,
            "finalBy": "id"
          }
        },
        "sortBy": [],
        "tileSettings": {
          "titleContent": {
            "columnMatch": "count_type",
            "formatter": 12,
            "formatOptions": {
              "palette": "auto"
            }
          },
          "showBorder": true,
          "sortOrderField": 2,
          "size": "auto"
        },
        "graphSettings": {
          "type": 0,
          "topContent": {
            "columnMatch": "vmSize",
            "formatter": 1
          },
          "centerContent": {
            "columnMatch": "Count",
            "formatter": 1,
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          }
        },
        "textSettings": {
          "style": "bignumber"
        }
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "overview"
      },
      "customWidth": "15",
      "name": "query - Orphan Network Security Groups Count"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "Resources\r\n| where type =~ 'Microsoft.Compute/availabilitySets'\r\n| where properties.virtualMachines == \"[]\"\r\n| summarize count(type)",
        "size": 4,
        "title": "Availability Sets",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscriptions}"
        ],
        "visualization": "tiles",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "$gen_group",
              "formatter": 13,
              "formatOptions": {
                "linkTarget": "Resource",
                "showIcon": true
              }
            },
            {
              "columnMatch": "id",
              "formatter": 5
            },
            {
              "columnMatch": "subscriptionId",
              "formatter": 5
            },
            {
              "columnMatch": "Details",
              "formatter": 7,
              "formatOptions": {
                "linkTarget": "CellDetails",
                "linkLabel": "üîç View Details",
                "linkIsContextBlade": true
              }
            }
          ],
          "rowLimit": 1000,
          "hierarchySettings": {
            "treeType": 1,
            "groupBy": [
              "subscriptionId"
            ],
            "expandTopLevel": true,
            "finalBy": "id"
          }
        },
        "sortBy": [],
        "tileSettings": {
          "titleContent": {
            "columnMatch": "count_type",
            "formatter": 12,
            "formatOptions": {
              "palette": "auto"
            }
          },
          "showBorder": true,
          "sortOrderField": 2,
          "size": "auto"
        },
        "graphSettings": {
          "type": 0,
          "topContent": {
            "columnMatch": "vmSize",
            "formatter": 1
          },
          "centerContent": {
            "columnMatch": "Count",
            "formatter": 1,
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          }
        },
        "textSettings": {
          "style": "bignumber"
        }
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "overview"
      },
      "customWidth": "15",
      "name": "query - Orphan Availability Sets Count"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "resources\r\n| where type == \"microsoft.network/routetables\"\r\n| where isnull(properties.subnets)\r\n| summarize count(type)",
        "size": 4,
        "title": "Route Tables",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscriptions}"
        ],
        "visualization": "tiles",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "$gen_group",
              "formatter": 13,
              "formatOptions": {
                "linkTarget": "Resource",
                "showIcon": true
              }
            },
            {
              "columnMatch": "id",
              "formatter": 5
            },
            {
              "columnMatch": "subscriptionId",
              "formatter": 5
            },
            {
              "columnMatch": "Details",
              "formatter": 7,
              "formatOptions": {
                "linkTarget": "CellDetails",
                "linkLabel": "üîç View Details",
                "linkIsContextBlade": true
              }
            }
          ],
          "rowLimit": 1000,
          "hierarchySettings": {
            "treeType": 1,
            "groupBy": [
              "subscriptionId"
            ],
            "expandTopLevel": true,
            "finalBy": "id"
          }
        },
        "sortBy": [],
        "tileSettings": {
          "titleContent": {
            "columnMatch": "count_type",
            "formatter": 12,
            "formatOptions": {
              "palette": "auto"
            }
          },
          "showBorder": true,
          "sortOrderField": 2,
          "size": "auto"
        },
        "graphSettings": {
          "type": 0,
          "topContent": {
            "columnMatch": "vmSize",
            "formatter": 1
          },
          "centerContent": {
            "columnMatch": "Count",
            "formatter": 1,
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          }
        },
        "textSettings": {
          "style": "bignumber"
        }
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "overview"
      },
      "customWidth": "15",
      "name": "query - Orphan Route Tables Count"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "resources\r\n| where type == \"microsoft.network/loadbalancers\"\r\n| where properties.backendAddressPools == \"[]\"\r\n| summarize count(type)",
        "size": 4,
        "title": "Load Balancers  üí≤",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscriptions}"
        ],
        "visualization": "tiles",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "$gen_group",
              "formatter": 13,
              "formatOptions": {
                "linkTarget": "Resource",
                "showIcon": true
              }
            },
            {
              "columnMatch": "id",
              "formatter": 5
            },
            {
              "columnMatch": "subscriptionId",
              "formatter": 5
            },
            {
              "columnMatch": "Details",
              "formatter": 7,
              "formatOptions": {
                "linkTarget": "CellDetails",
                "linkLabel": "üîç View Details",
                "linkIsContextBlade": true
              }
            }
          ],
          "rowLimit": 1000,
          "hierarchySettings": {
            "treeType": 1,
            "groupBy": [
              "subscriptionId"
            ],
            "expandTopLevel": true,
            "finalBy": "id"
          }
        },
        "sortBy": [],
        "tileSettings": {
          "titleContent": {
            "columnMatch": "count_type",
            "formatter": 12,
            "formatOptions": {
              "palette": "auto"
            }
          },
          "showBorder": true,
          "sortOrderField": 2,
          "size": "auto"
        },
        "graphSettings": {
          "type": 0,
          "topContent": {
            "columnMatch": "vmSize",
            "formatter": 1
          },
          "centerContent": {
            "columnMatch": "Count",
            "formatter": 1,
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          }
        },
        "textSettings": {
          "style": "bignumber"
        }
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "overview"
      },
      "customWidth": "15",
      "name": "query - Orphan Load Balancers Count"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "resources\r\n| where type =~ \"microsoft.web/serverfarms\"\r\n| where properties.numberOfSites == 0\r\n| summarize count(type)",
        "size": 4,
        "title": "App Service Plans",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscriptions}"
        ],
        "visualization": "tiles",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "$gen_group",
              "formatter": 13,
              "formatOptions": {
                "linkTarget": "Resource",
                "showIcon": true
              }
            },
            {
              "columnMatch": "id",
              "formatter": 5
            },
            {
              "columnMatch": "subscriptionId",
              "formatter": 5
            },
            {
              "columnMatch": "Details",
              "formatter": 7,
              "formatOptions": {
                "linkTarget": "CellDetails",
                "linkLabel": "üîç View Details",
                "linkIsContextBlade": true
              }
            }
          ],
          "rowLimit": 1000,
          "hierarchySettings": {
            "treeType": 1,
            "groupBy": [
              "subscriptionId"
            ],
            "expandTopLevel": true,
            "finalBy": "id"
          }
        },
        "sortBy": [],
        "tileSettings": {
          "titleContent": {
            "columnMatch": "count_type",
            "formatter": 12,
            "formatOptions": {
              "palette": "auto"
            }
          },
          "showBorder": true,
          "sortOrderField": 2,
          "size": "auto"
        },
        "graphSettings": {
          "type": 0,
          "topContent": {
            "columnMatch": "vmSize",
            "formatter": 1
          },
          "centerContent": {
            "columnMatch": "Count",
            "formatter": 1,
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          }
        },
        "textSettings": {
          "style": "bignumber"
        }
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "overview"
      },
      "customWidth": "15",
      "name": "query - Orphan App Service Plans Count"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "resources\r\n| where type =~ \"microsoft.network/frontdoorwebapplicationfirewallpolicies\"\r\n| where properties.frontendEndpointLinks== \"[]\" and properties.securityPolicyLinks == \"[]\"\r\n| summarize count(type)",
        "size": 4,
        "title": "Front Door WAF Policy",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscriptions}"
        ],
        "visualization": "tiles",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "$gen_group",
              "formatter": 13,
              "formatOptions": {
                "linkTarget": "Resource",
                "showIcon": true
              }
            },
            {
              "columnMatch": "id",
              "formatter": 5
            },
            {
              "columnMatch": "subscriptionId",
              "formatter": 5
            },
            {
              "columnMatch": "Details",
              "formatter": 7,
              "formatOptions": {
                "linkTarget": "CellDetails",
                "linkLabel": "üîç View Details",
                "linkIsContextBlade": true
              }
            }
          ],
          "rowLimit": 1000,
          "hierarchySettings": {
            "treeType": 1,
            "groupBy": [
              "subscriptionId"
            ],
            "expandTopLevel": true,
            "finalBy": "id"
          }
        },
        "sortBy": [],
        "tileSettings": {
          "titleContent": {
            "columnMatch": "count_type",
            "formatter": 12,
            "formatOptions": {
              "palette": "auto"
            }
          },
          "showBorder": true,
          "sortOrderField": 2,
          "size": "auto"
        },
        "graphSettings": {
          "type": 0,
          "topContent": {
            "columnMatch": "vmSize",
            "formatter": 1
          },
          "centerContent": {
            "columnMatch": "Count",
            "formatter": 1,
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          }
        },
        "textSettings": {
          "style": "bignumber"
        }
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "overview"
      },
      "customWidth": "15",
      "name": "query - Orphan Front Door WAF Policy Count"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "resources\r\n| where type =~ \"microsoft.network/trafficmanagerprofiles\"\r\n| where properties.endpoints == \"[]\"\r\n| summarize count(type)",
        "size": 4,
        "title": "Traffic Manager Profiles",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscriptions}"
        ],
        "visualization": "tiles",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "$gen_group",
              "formatter": 13,
              "formatOptions": {
                "linkTarget": "Resource",
                "showIcon": true
              }
            },
            {
              "columnMatch": "id",
              "formatter": 5
            },
            {
              "columnMatch": "subscriptionId",
              "formatter": 5
            },
            {
              "columnMatch": "Details",
              "formatter": 7,
              "formatOptions": {
                "linkTarget": "CellDetails",
                "linkLabel": "üîç View Details",
                "linkIsContextBlade": true
              }
            }
          ],
          "rowLimit": 1000,
          "hierarchySettings": {
            "treeType": 1,
            "groupBy": [
              "subscriptionId"
            ],
            "expandTopLevel": true,
            "finalBy": "id"
          }
        },
        "sortBy": [],
        "tileSettings": {
          "titleContent": {
            "columnMatch": "count_type",
            "formatter": 12,
            "formatOptions": {
              "palette": "auto"
            }
          },
          "showBorder": true,
          "sortOrderField": 2,
          "size": "auto"
        },
        "graphSettings": {
          "type": 0,
          "topContent": {
            "columnMatch": "vmSize",
            "formatter": 1
          },
          "centerContent": {
            "columnMatch": "Count",
            "formatter": 1,
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          }
        },
        "textSettings": {
          "style": "bignumber"
        }
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "overview"
      },
      "customWidth": "15",
      "name": "query - Orphan Traffic Manager Profiles Count"
    },
    {
      "type": 1,
      "content": {
        "json": "## NoShow - End Overview\r\n\r\n\r\n## NoShow - Begin Disks"
      },
      "conditionalVisibility": {
        "parameterName": "noshow",
        "comparison": "isEqualTo",
        "value": "noshow"
      },
      "name": "text - NoShow Begin Disks"
    },
    {
      "type": 11,
      "content": {
        "version": "LinkItem/1.0",
        "style": "paragraph",
        "links": [
          {
            "id": "4349d301-de5a-4d19-ba61-79651d3ffaa8",
            "cellValue": "selectedTab2",
            "linkTarget": "parameter",
            "linkLabel": "Disks",
            "subTarget": "od",
            "style": "secondary"
          },
          {
            "id": "5a14294d-da29-4bfc-8bb6-9433bd596aef",
            "cellValue": "selectedTab2",
            "linkTarget": "parameter",
            "linkLabel": "NIC",
            "subTarget": "onic",
            "style": "secondary"
          },
          {
            "id": "6c4296a4-c914-4ea2-ba0d-6f9c45fe7276",
            "cellValue": "selectedTab2",
            "linkTarget": "parameter",
            "linkLabel": "Public IP",
            "subTarget": "opip",
            "style": "secondary"
          },
          {
            "id": "cefc7ea5-2982-4ee9-970b-0316a26b5ace",
            "cellValue": "selectedTab2",
            "linkTarget": "parameter",
            "linkLabel": "NSG",
            "subTarget": "onsg",
            "style": "secondary"
          },
          {
            "id": "c8ea6d64-9177-4c06-9b5d-546ad3c2cb04",
            "cellValue": "selectedTab2",
            "linkTarget": "parameter",
            "linkLabel": "Load Balancer",
            "subTarget": "olb",
            "style": "secondary"
          },
          {
            "id": "5179a5d9-ea5d-46da-bd81-eea35595ee38",
            "cellValue": "selectedTab2",
            "linkTarget": "parameter",
            "linkLabel": "Resource Groups",
            "subTarget": "org",
            "style": "secondary"
          },
          {
            "id": "4f65e72b-ca60-41c0-b634-deabd8f89912",
            "cellValue": "selectedTab2",
            "linkTarget": "parameter",
            "linkLabel": "Availability Set",
            "subTarget": "oas",
            "style": "secondary"
          },
          {
            "id": "a558ee64-262e-4a8a-8535-3e26fc5813b1",
            "cellValue": "selectedTab2",
            "linkTarget": "parameter",
            "linkLabel": "Route Tables",
            "subTarget": "ort",
            "style": "secondary"
          },
          {
            "id": "57fd6f65-c73a-4b32-9620-e952f58c244d",
            "cellValue": "selectedTab2",
            "linkTarget": "parameter",
            "linkLabel": "App Service Plans",
            "subTarget": "oasp",
            "style": "secondary"
          },
          {
            "id": "fc7e298e-8b6e-4b58-bc19-905594f93a5a",
            "cellValue": "selectedTab2",
            "linkTarget": "parameter",
            "linkLabel": "Front Door WAF Policy",
            "subTarget": "ofd",
            "style": "secondary"
          },
          {
            "id": "89ca9300-a252-4195-9276-8d5067749496",
            "cellValue": "selectedTab2",
            "linkTarget": "parameter",
            "linkLabel": "Traffic Manager Profiles",
            "subTarget": "otm",
            "style": "secondary"
          },
          {
            "id": "6232dc51-1dc3-4f1c-b92d-abdf95342fc8",
            "cellValue": "selectedTab2",
            "linkTarget": "parameter",
            "linkLabel": "API Connections",
            "subTarget": "oapi",
            "style": "secondary"
          },
          {
            "id": "707fe141-a190-40b4-b28a-91b44dd21bbf",
            "cellValue": "selectedTab2",
            "linkTarget": "parameter",
            "linkLabel": "Unused Web API connection & Gateways¬†",
            "subTarget": "ouwebapi",
            "style": "secondary"
          },
          {
            "id": "b6d7f858-2433-4cf0-8b08-66833df949d7",
            "cellValue": "selectedTab2",
            "linkTarget": "parameter",
            "linkLabel": "Old Snapshot",
            "subTarget": "osnap",
            "style": "secondary"
          },
          {
            "id": "4ce0fc45-ce4a-4d0d-b9c1-29815c00dc8c",
            "cellValue": "selectedTab2",
            "linkTarget": "parameter",
            "linkLabel": "Azure App Service",
            "subTarget": "aps",
            "style": "secondary"
          },
          {
            "id": "e5d56b61-ffb6-4d72-aa73-1d0a46998e3d",
            "cellValue": "selectedTab2",
            "linkTarget": "parameter",
            "linkLabel": "Azure Kubernetes Service",
            "subTarget": "aks",
            "style": "secondary"
          },
          {
            "id": "f7a60963-d4dc-4f09-b9a1-223330e7c404",
            "cellValue": "selectedTab2",
            "linkTarget": "parameter",
            "linkLabel": "Azure Firewall",
            "subTarget": "af",
            "style": "secondary"
          },
          {
            "id": "2feb588d-f248-4a1a-aa6c-5b762685080e",
            "cellValue": "selectedTab2",
            "linkTarget": "parameter",
            "linkLabel": "Azure VPN",
            "subTarget": "avpn",
            "style": "secondary"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "op"
      },
      "name": "links - 96",
      "styleSettings": {
        "padding": "0"
      }
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "b0b6b192-ff63-46fd-aafd-09d36086eb12",
            "version": "KqlParameterItem/1.0",
            "name": "Subscriptions",
            "type": 6,
            "isRequired": true,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "includeAll": true,
              "showDefault": false
            },
            "timeContext": {
              "durationMs": 86400000
            },
            "defaultValue": "value::all"
          }
        ],
        "style": "pills",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces"
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "op"
      },
      "name": "parameters - 181"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "{\"version\":\"ARMEndpoint/1.0\",\"data\":\"{\\r\\n\\t\\\"type\\\": \\\"Usage\\\",\\r\\n\\t\\\"timeframe\\\": \\\"TheLastBillingMonth\\\",\\r\\n\\t\\\"dataset\\\": {\\r\\n\\t\\t\\\"granularity\\\": \\\"None\\\",\\r\\n\\t\\t\\\"filter\\\": {\\r\\n\\t\\t\\t\\t\\t\\\"dimensions\\\": {\\r\\n\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"resourceType\\\",\\r\\n\\t\\t\\t\\t\\t\\t\\\"operator\\\": \\\"In\\\",\\r\\n\\t\\t\\t\\t\\t\\t\\\"values\\\": [\\r\\n\\t\\t\\t\\t\\t\\t\\t\\\"microsoft.compute/disks\\\",\\r\\n\\t\\t\\t\\t\\t\\t\\t\\\"microsoft.network/applicationgateways\\\",\\r\\n\\t\\t\\t\\t\\t\\t\\t\\\"microsoft.network/loadbalancers\\\",\\r\\n\\t\\t\\t\\t\\t\\t\\t\\\"microsoft.network/publicIPAddresses\\\",\\r\\n\\t\\t\\t\\t\\t\\t\\t\\\"microsoft.network/networkinterfaces\\\",\\r\\n\\t\\t\\t\\t\\t\\t\\t\\\"microsoft.network/loadbalancers\\\",\\r\\n\\t\\t\\t\\t\\t\\t\\t\\\"microsoft.security/advancedthreatprotection\\\",\\r\\n\\t\\t\\t\\t\\t\\t\\t\\\"microsoft.Compute/VirtualMachines\\\",\\r\\n\\t\\t\\t\\t\\t\\t\\t\\\"microsoft.security/advancedthreatprotection\\\",\\r\\n\\t\\t\\t\\t\\t\\t\\t\\\"microsoft.network/applicationgateways\\\",\\r\\n\\t\\t\\t\\t\\t\\t\\t\\\"microsoft.automation/automationaccounts\\\",\\r\\n\\t\\t\\t\\t\\t\\t\\t\\\"microsoft.web/sites\\\",\\r\\n\\t\\t\\t\\t\\t\\t\\t\\\"microsoft.network/bastionhosts\\\",\\r\\n\\t\\t\\t\\t\\t\\t\\t\\\"microsoft.network/ddosprotectionplans\\\",\\r\\n\\t\\t\\t\\t\\t\\t\\t\\\"microsoft.network/dnszones\\\",\\r\\n\\t\\t\\t\\t\\t\\t\\t\\\"microsoft.insights/components\\\",\\r\\n\\t\\t\\t\\t\\t\\t\\t\\\"microsoft.recoveryservices/vaults\\\",\\r\\n\\t\\t\\t\\t\\t\\t\\t\\\"Microsoft.Compute/snapshots\\\",\\r\\n\\t\\t\\t\\t\\t\\t\\t\\\"microsoft.containerservice/managedclusters\\\"\\r\\n\\t\\t\\t\\t\\t\\t]\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t},\\r\\n\\t\\t\\\"aggregation\\\": {\\r\\n\\t\\t\\t\\\"totalCost\\\": {\\r\\n\\t\\t\\t\\t\\\"name\\\": \\\"PreTaxCost\\\",\\r\\n\\t\\t\\t\\t\\\"function\\\": \\\"Sum\\\"\\r\\n\\t\\t\\t}\\r\\n\\t\\t},\\r\\n\\t\\t\\\"grouping\\\": [\\r\\n\\t\\t\\t{\\r\\n\\t\\t\\t\\t\\\"type\\\": \\\"Dimension\\\",\\r\\n\\t\\t\\t\\t\\\"name\\\": \\\"ResourceId\\\"\\r\\n\\t\\t\\t}\\r\\n\\t\\t]\\r\\n\\t}\\r\\n}\",\"headers\":[],\"method\":\"POST\",\"path\":\"/subscriptions/{Subscriptions:id}/providers/Microsoft.CostManagement/query?\",\"urlParams\":[{\"key\":\"api-version\",\"value\":\"2019-11-01\"}],\"batchDisabled\":false,\"transformers\":[{\"type\":\"jsonpath\",\"settings\":{\"tablePath\":\"$.properties\",\"columns\":[]}}]}",
        "size": 0,
        "title": "Get Cost Idle Resources",
        "queryType": 12,
        "gridSettings": {
          "rowLimit": 10000
        }
      },
      "conditionalVisibility": {
        "parameterName": "isVisible",
        "comparison": "isEqualTo",
        "value": "True"
      },
      "name": "query - 180"
    },
    {
      "type": 1,
      "content": {
        "json": "# Orphan Disks"
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "op"
        },
        {
          "parameterName": "selectedTab2",
          "comparison": "isEqualTo",
          "value": "od"
        }
      ],
      "name": "text - Title Orphan Disks"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "Resources\r\n| where type has \"microsoft.compute/disks\"\r\n| extend diskState = tostring(properties.diskState)\r\n| where managedBy == \"\"\r\n| where not(name endswith \"-ASRReplica\" or name startswith \"ms-asr-\")\r\n| summarize count(type)",
        "size": 4,
        "title": "Total",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscriptions}"
        ],
        "visualization": "tiles",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "$gen_group",
              "formatter": 13,
              "formatOptions": {
                "linkTarget": "Resource",
                "showIcon": true
              }
            },
            {
              "columnMatch": "id",
              "formatter": 5
            },
            {
              "columnMatch": "subscriptionId",
              "formatter": 5
            },
            {
              "columnMatch": "Details",
              "formatter": 7,
              "formatOptions": {
                "linkTarget": "CellDetails",
                "linkLabel": "üîç View Details",
                "linkIsContextBlade": true
              }
            }
          ],
          "rowLimit": 1000,
          "hierarchySettings": {
            "treeType": 1,
            "groupBy": [
              "subscriptionId"
            ],
            "expandTopLevel": true,
            "finalBy": "id"
          }
        },
        "sortBy": [],
        "tileSettings": {
          "titleContent": {
            "columnMatch": "count_type",
            "formatter": 12,
            "formatOptions": {
              "palette": "auto"
            }
          },
          "showBorder": true,
          "sortOrderField": 2,
          "size": "auto"
        },
        "graphSettings": {
          "type": 0,
          "topContent": {
            "columnMatch": "vmSize",
            "formatter": 1
          },
          "centerContent": {
            "columnMatch": "Count",
            "formatter": 1,
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          }
        },
        "textSettings": {
          "style": "bignumber"
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "op"
        },
        {
          "parameterName": "selectedTab2",
          "comparison": "isEqualTo",
          "value": "od"
        }
      ],
      "customWidth": "15",
      "name": "query - Orphan Disks Count"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "Resources\r\n| where type has \"microsoft.compute/disks\"\r\n| extend diskState = tostring(properties.diskState)\r\n| where managedBy == \"\"\r\n| where not(name endswith \"-ASRReplica\" or name startswith \"ms-asr-\")\r\n| extend SizeGB = tolong(properties.diskSizeGB)\r\n| summarize ['Total Disk Size (GB)']=sum(SizeGB)",
        "size": 4,
        "title": "Disks Size (GB)",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscriptions}"
        ],
        "visualization": "tiles",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "$gen_group",
              "formatter": 13,
              "formatOptions": {
                "linkTarget": "Resource",
                "showIcon": true
              }
            },
            {
              "columnMatch": "id",
              "formatter": 5
            },
            {
              "columnMatch": "subscriptionId",
              "formatter": 5
            },
            {
              "columnMatch": "Details",
              "formatter": 7,
              "formatOptions": {
                "linkTarget": "CellDetails",
                "linkLabel": "üîç View Details",
                "linkIsContextBlade": true
              }
            }
          ],
          "rowLimit": 1000,
          "hierarchySettings": {
            "treeType": 1,
            "groupBy": [
              "subscriptionId"
            ],
            "expandTopLevel": true,
            "finalBy": "id"
          }
        },
        "sortBy": [],
        "tileSettings": {
          "titleContent": {
            "columnMatch": "Total Disk Size (GB)",
            "formatter": 12,
            "formatOptions": {
              "palette": "auto",
              "compositeBarSettings": {
                "labelText": "",
                "columnSettings": []
              }
            }
          },
          "showBorder": true,
          "sortOrderField": 2,
          "size": "auto"
        },
        "graphSettings": {
          "type": 0,
          "topContent": {
            "columnMatch": "vmSize",
            "formatter": 1
          },
          "centerContent": {
            "columnMatch": "Count",
            "formatter": 1,
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          }
        },
        "textSettings": {
          "style": "bignumber"
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "op"
        },
        {
          "parameterName": "selectedTab2",
          "comparison": "isEqualTo",
          "value": "od"
        }
      ],
      "customWidth": "15",
      "name": "query - Total Orphan Disk Size (GB)"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "Resources\r\n| where type has \"microsoft.compute/disks\"\r\n| extend diskState = tostring(properties.diskState)\r\n| where managedBy == \"\"\r\n| where not(name endswith \"-ASRReplica\" or name startswith \"ms-asr-\")\r\n| summarize Count=count(type) by DiskType=tostring(sku.name)",
        "size": 4,
        "title": "Count by Disk Type",
        "noDataMessage": "No oprhan disks found",
        "noDataMessageStyle": 3,
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscriptions}"
        ],
        "visualization": "piechart",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "$gen_group",
              "formatter": 13,
              "formatOptions": {
                "linkTarget": "Resource",
                "showIcon": true
              }
            },
            {
              "columnMatch": "id",
              "formatter": 5
            },
            {
              "columnMatch": "subscriptionId",
              "formatter": 5
            },
            {
              "columnMatch": "Details",
              "formatter": 7,
              "formatOptions": {
                "linkTarget": "CellDetails",
                "linkLabel": "üîç View Details",
                "linkIsContextBlade": true
              }
            }
          ],
          "rowLimit": 1000,
          "hierarchySettings": {
            "treeType": 1,
            "groupBy": [
              "subscriptionId"
            ],
            "expandTopLevel": true,
            "finalBy": "id"
          }
        },
        "sortBy": [],
        "tileSettings": {
          "titleContent": {
            "columnMatch": "DiskType",
            "formatter": 1
          },
          "leftContent": {
            "columnMatch": "Count",
            "formatter": 12,
            "formatOptions": {
              "palette": "auto"
            },
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          },
          "showBorder": true
        },
        "graphSettings": {
          "type": 0,
          "topContent": {
            "columnMatch": "vmSize",
            "formatter": 1
          },
          "centerContent": {
            "columnMatch": "Count",
            "formatter": 1,
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          }
        },
        "chartSettings": {
          "showMetrics": false,
          "showLegend": true
        },
        "mapSettings": {
          "locInfo": "LatLong",
          "sizeSettings": "Count",
          "sizeAggregation": "Sum",
          "legendMetric": "Count",
          "legendAggregation": "Sum",
          "itemColorSettings": {
            "type": "heatmap",
            "colorAggregation": "Sum",
            "nodeColorField": "Count",
            "heatmapPalette": "greenRed"
          }
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "op"
        },
        {
          "parameterName": "selectedTab2",
          "comparison": "isEqualTo",
          "value": "od"
        }
      ],
      "customWidth": "30",
      "name": "query - Orphan Disks by DiskType"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "Resources\r\n| where type has \"microsoft.compute/disks\"\r\n| extend diskState = tostring(properties.diskState)\r\n| where managedBy == \"\"\r\n| where not(name endswith \"-ASRReplica\" or name startswith \"ms-asr-\")\r\n| summarize Count=count(type) by location",
        "size": 4,
        "title": "Count by Location",
        "noDataMessage": "No oprhan disks found",
        "noDataMessageStyle": 3,
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscriptions}"
        ],
        "visualization": "piechart",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "$gen_group",
              "formatter": 13,
              "formatOptions": {
                "linkTarget": "Resource",
                "showIcon": true
              }
            },
            {
              "columnMatch": "id",
              "formatter": 5
            },
            {
              "columnMatch": "subscriptionId",
              "formatter": 5
            },
            {
              "columnMatch": "Details",
              "formatter": 7,
              "formatOptions": {
                "linkTarget": "CellDetails",
                "linkLabel": "üîç View Details",
                "linkIsContextBlade": true
              }
            }
          ],
          "rowLimit": 1000,
          "hierarchySettings": {
            "treeType": 1,
            "groupBy": [
              "subscriptionId"
            ],
            "expandTopLevel": true,
            "finalBy": "id"
          }
        },
        "sortBy": [],
        "tileSettings": {
          "titleContent": {
            "columnMatch": "DiskType",
            "formatter": 1
          },
          "leftContent": {
            "columnMatch": "Count",
            "formatter": 12,
            "formatOptions": {
              "palette": "auto"
            },
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          },
          "showBorder": true
        },
        "graphSettings": {
          "type": 0,
          "topContent": {
            "columnMatch": "vmSize",
            "formatter": 1
          },
          "centerContent": {
            "columnMatch": "Count",
            "formatter": 1,
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          }
        },
        "chartSettings": {
          "showMetrics": false,
          "showLegend": true
        },
        "mapSettings": {
          "locInfo": "LatLong",
          "sizeSettings": "Count",
          "sizeAggregation": "Sum",
          "legendMetric": "Count",
          "legendAggregation": "Sum",
          "itemColorSettings": {
            "type": "heatmap",
            "colorAggregation": "Sum",
            "nodeColorField": "Count",
            "heatmapPalette": "greenRed"
          }
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "op"
        },
        {
          "parameterName": "selectedTab2",
          "comparison": "isEqualTo",
          "value": "od"
        }
      ],
      "customWidth": "30",
      "name": "query - Orphan Disks by Location"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "Resources\r\n| where type has \"microsoft.compute/disks\"\r\n| extend diskState = tostring(properties.diskState)\r\n| where managedBy == \"\" or diskState == 'Unattached'\r\n| where name !has \"-ASRReplica\"\r\n| where not(name endswith \"-ASRReplica\" or name startswith \"asr\")\r\n| extend Details = pack_all()\r\n| project id, resourceGroup, diskState, sku.name, properties.diskSizeGB, location, tags, subscriptionId, Details\r\n",
        "size": 3,
        "title": "Orphan Disks",
        "noDataMessage": "No oprhan disks found",
        "noDataMessageStyle": 3,
        "showExportToExcel": true,
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscriptions}"
        ],
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "$gen_group",
              "formatter": 13,
              "formatOptions": {
                "linkTarget": "Resource",
                "showIcon": true
              }
            },
            {
              "columnMatch": "id",
              "formatter": 5
            },
            {
              "columnMatch": "subscriptionId",
              "formatter": 5
            },
            {
              "columnMatch": "Details",
              "formatter": 7,
              "formatOptions": {
                "linkTarget": "CellDetails",
                "linkLabel": "üîç View Details",
                "linkIsContextBlade": true
              }
            }
          ],
          "rowLimit": 1000,
          "filter": true,
          "hierarchySettings": {
            "treeType": 1,
            "groupBy": [
              "subscriptionId"
            ],
            "expandTopLevel": true,
            "finalBy": "id"
          },
          "sortBy": [
            {
              "itemKey": "$gen_link_sku_name_4",
              "sortOrder": 1
            }
          ],
          "labelSettings": [
            {
              "columnId": "resourceGroup",
              "label": "Resource Group"
            },
            {
              "columnId": "diskState",
              "label": "Disk State"
            },
            {
              "columnId": "sku_name",
              "label": "Disk Type"
            },
            {
              "columnId": "properties_diskSizeGB",
              "label": "Disk Size (GB)"
            },
            {
              "columnId": "location",
              "label": "Location"
            },
            {
              "columnId": "tags",
              "label": "Tags"
            },
            {
              "columnId": "subscriptionId",
              "label": "Subscription"
            }
          ]
        },
        "sortBy": [
          {
            "itemKey": "$gen_link_sku_name_4",
            "sortOrder": 1
          }
        ],
        "tileSettings": {
          "titleContent": {
            "columnMatch": "vmSize",
            "formatter": 1,
            "formatOptions": {
              "showIcon": true
            }
          },
          "leftContent": {
            "columnMatch": "Count",
            "formatter": 12,
            "formatOptions": {
              "palette": "auto",
              "showIcon": true
            },
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          },
          "showBorder": true
        },
        "graphSettings": {
          "type": 0,
          "topContent": {
            "columnMatch": "vmSize",
            "formatter": 1
          },
          "centerContent": {
            "columnMatch": "Count",
            "formatter": 1,
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          }
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "op"
        },
        {
          "parameterName": "selectedTab2",
          "comparison": "isEqualTo",
          "value": "od"
        }
      ],
      "name": "query - Orphan Disks"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "{\"version\":\"Merge/1.0\",\"merges\":[{\"id\":\"b9b3085b-3bf5-4fc6-a0ce-bb6f78fb2200\",\"mergeType\":\"innerunique\",\"leftTable\":\"query - 180\",\"rightTable\":\"query - Orphan Disks\",\"leftColumn\":\"ResourceId\",\"rightColumn\":\"id\"}],\"projectRename\":[{\"originalName\":\"[query - 180].PreTaxCost\",\"mergedName\":\"PreTaxCost\",\"fromId\":\"b9b3085b-3bf5-4fc6-a0ce-bb6f78fb2200\"},{\"originalName\":\"[query - 180].ResourceId\",\"mergedName\":\"ResourceId\",\"fromId\":\"b9b3085b-3bf5-4fc6-a0ce-bb6f78fb2200\"},{\"originalName\":\"[query - 180].Currency\",\"mergedName\":\"Currency\",\"fromId\":\"b9b3085b-3bf5-4fc6-a0ce-bb6f78fb2200\"},{\"originalName\":\"[query - Orphan Disks].id\",\"mergedName\":\"id\",\"fromId\":\"b9b3085b-3bf5-4fc6-a0ce-bb6f78fb2200\"},{\"originalName\":\"[query - Orphan Disks].resourceGroup\",\"mergedName\":\"Resource Group\",\"fromId\":\"b9b3085b-3bf5-4fc6-a0ce-bb6f78fb2200\"},{\"originalName\":\"[query - Orphan Disks].diskState\",\"mergedName\":\"Disk State\",\"fromId\":\"b9b3085b-3bf5-4fc6-a0ce-bb6f78fb2200\"},{\"originalName\":\"[query - Orphan Disks].sku_name\",\"mergedName\":\"Disk Type\",\"fromId\":\"b9b3085b-3bf5-4fc6-a0ce-bb6f78fb2200\"},{\"originalName\":\"[query - Orphan Disks].properties_diskSizeGB\",\"mergedName\":\"Disk Size (GB)\",\"fromId\":\"b9b3085b-3bf5-4fc6-a0ce-bb6f78fb2200\"},{\"originalName\":\"[query - Orphan Disks].location\",\"mergedName\":\"Location\",\"fromId\":\"b9b3085b-3bf5-4fc6-a0ce-bb6f78fb2200\"},{\"originalName\":\"[query - Orphan Disks].tags\",\"mergedName\":\"Tags\",\"fromId\":\"b9b3085b-3bf5-4fc6-a0ce-bb6f78fb2200\"},{\"originalName\":\"[query - Orphan Disks].subscriptionId\",\"mergedName\":\"Subscription\",\"fromId\":\"b9b3085b-3bf5-4fc6-a0ce-bb6f78fb2200\"},{\"originalName\":\"[query - Orphan Disks].Details\",\"mergedName\":\"Details\",\"fromId\":\"b9b3085b-3bf5-4fc6-a0ce-bb6f78fb2200\"}]}",
        "size": 0,
        "title": "Orphan Disks Cost",
        "noDataMessage": "Do not have any Orphan Disk",
        "noDataMessageStyle": 3,
        "showExportToExcel": true,
        "queryType": 7,
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "ResourceId",
              "formatter": 5
            },
            {
              "columnMatch": "Resource Group",
              "formatter": 5
            },
            {
              "columnMatch": "Subscription",
              "formatter": 15,
              "formatOptions": {
                "linkTarget": null,
                "showIcon": true
              }
            },
            {
              "columnMatch": "Details",
              "formatter": 5
            }
          ],
          "hierarchySettings": {
            "treeType": 1,
            "groupBy": [
              "Resource Group"
            ]
          }
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "op"
        },
        {
          "parameterName": "selectedTab2",
          "comparison": "isEqualTo",
          "value": "od"
        }
      ],
      "name": "query - Orphan Disks Cost"
    },
    {
      "type": 1,
      "content": {
        "json": "## NoShow - End Disks\r\n\r\n\r\n## NoShow - Begin Network Interfaces"
      },
      "conditionalVisibility": {
        "parameterName": "noshow",
        "comparison": "isEqualTo",
        "value": "noshow"
      },
      "name": "text - NoShow Begin Netowork Interfaces"
    },
    {
      "type": 1,
      "content": {
        "json": "# Orphan Network Interfaces"
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "op"
        },
        {
          "parameterName": "selectedTab2",
          "comparison": "isEqualTo",
          "value": "onic"
        }
      ],
      "name": "text - Title Network interfaces"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "Resources\r\n| where type has \"microsoft.network/networkinterfaces\"\r\n| where isnull(properties.privateEndpoint)\r\n| where isnull(properties.privateLinkService)\r\n| where properties.hostedWorkloads == \"[]\"\r\n| where properties !has 'virtualmachine'\r\n| summarize count(type)",
        "size": 4,
        "title": "Total",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscriptions}"
        ],
        "visualization": "tiles",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "$gen_group",
              "formatter": 13,
              "formatOptions": {
                "linkTarget": "Resource",
                "showIcon": true
              }
            },
            {
              "columnMatch": "id",
              "formatter": 5
            },
            {
              "columnMatch": "subscriptionId",
              "formatter": 5
            },
            {
              "columnMatch": "Details",
              "formatter": 7,
              "formatOptions": {
                "linkTarget": "CellDetails",
                "linkLabel": "üîç View Details",
                "linkIsContextBlade": true
              }
            }
          ],
          "rowLimit": 1000,
          "hierarchySettings": {
            "treeType": 1,
            "groupBy": [
              "subscriptionId"
            ],
            "expandTopLevel": true,
            "finalBy": "id"
          }
        },
        "sortBy": [],
        "tileSettings": {
          "titleContent": {
            "columnMatch": "count_type",
            "formatter": 12,
            "formatOptions": {
              "palette": "auto"
            }
          },
          "showBorder": true,
          "sortOrderField": 2,
          "size": "auto"
        },
        "graphSettings": {
          "type": 0,
          "topContent": {
            "columnMatch": "vmSize",
            "formatter": 1
          },
          "centerContent": {
            "columnMatch": "Count",
            "formatter": 1,
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          }
        },
        "textSettings": {
          "style": "bignumber"
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "op"
        },
        {
          "parameterName": "selectedTab2",
          "comparison": "isEqualTo",
          "value": "onic"
        }
      ],
      "customWidth": "15",
      "name": "query - Orphan Network Interfaces Count"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "Resources\r\n| where type has \"microsoft.network/networkinterfaces\"\r\n| where isnull(properties.privateEndpoint)\r\n| where isnull(properties.privateLinkService)\r\n| where properties.hostedWorkloads == \"[]\"\r\n| where properties !has 'virtualmachine'\r\n| summarize count(type) by location",
        "size": 4,
        "title": "Count by Location",
        "noDataMessage": "No oprhan Network Interfaces found",
        "noDataMessageStyle": 3,
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscriptions}"
        ],
        "visualization": "piechart",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "$gen_group",
              "formatter": 13,
              "formatOptions": {
                "linkTarget": "Resource",
                "showIcon": true
              }
            },
            {
              "columnMatch": "id",
              "formatter": 5
            },
            {
              "columnMatch": "subscriptionId",
              "formatter": 5
            },
            {
              "columnMatch": "Details",
              "formatter": 7,
              "formatOptions": {
                "linkTarget": "CellDetails",
                "linkLabel": "üîç View Details",
                "linkIsContextBlade": true
              }
            }
          ],
          "rowLimit": 1000,
          "hierarchySettings": {
            "treeType": 1,
            "groupBy": [
              "subscriptionId"
            ],
            "expandTopLevel": true,
            "finalBy": "id"
          }
        },
        "sortBy": [],
        "tileSettings": {
          "titleContent": {
            "columnMatch": "DiskType",
            "formatter": 1
          },
          "leftContent": {
            "columnMatch": "Count",
            "formatter": 12,
            "formatOptions": {
              "palette": "auto"
            },
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          },
          "showBorder": true
        },
        "graphSettings": {
          "type": 0,
          "topContent": {
            "columnMatch": "vmSize",
            "formatter": 1
          },
          "centerContent": {
            "columnMatch": "Count",
            "formatter": 1,
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          }
        },
        "chartSettings": {
          "showMetrics": false,
          "showLegend": true
        },
        "mapSettings": {
          "locInfo": "LatLong",
          "sizeSettings": "Count",
          "sizeAggregation": "Sum",
          "legendMetric": "Count",
          "legendAggregation": "Sum",
          "itemColorSettings": {
            "type": "heatmap",
            "colorAggregation": "Sum",
            "nodeColorField": "Count",
            "heatmapPalette": "greenRed"
          }
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "op"
        },
        {
          "parameterName": "selectedTab2",
          "comparison": "isEqualTo",
          "value": "onic"
        }
      ],
      "customWidth": "30",
      "name": "query - Orphan Network Interfaces by Location"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "Resources\r\n| where type has \"microsoft.network/networkinterfaces\"\r\n| where isnull(properties.privateEndpoint)\r\n| where isnull(properties.privateLinkService)\r\n| where properties.hostedWorkloads == \"[]\"\r\n| where properties !has 'virtualmachine'\r\n| extend Details = pack_all()\r\n| project Resource=id, resourceGroup, location, tags, subscriptionId, Details",
        "size": 3,
        "title": "Orphan Network Interfaces",
        "noDataMessage": "No oprhan Network Interfaces found",
        "noDataMessageStyle": 3,
        "showExportToExcel": true,
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscriptions}"
        ],
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "$gen_group",
              "formatter": 13,
              "formatOptions": {
                "linkTarget": "Resource",
                "linkIsContextBlade": true,
                "showIcon": true
              }
            },
            {
              "columnMatch": "Resource",
              "formatter": 5
            },
            {
              "columnMatch": "subscriptionId",
              "formatter": 5
            },
            {
              "columnMatch": "Details",
              "formatter": 7,
              "formatOptions": {
                "linkTarget": "CellDetails",
                "linkLabel": "üîç View Details",
                "linkIsContextBlade": true
              }
            }
          ],
          "rowLimit": 1000,
          "filter": true,
          "hierarchySettings": {
            "treeType": 1,
            "groupBy": [
              "subscriptionId"
            ],
            "expandTopLevel": true,
            "finalBy": "Resource"
          },
          "sortBy": [
            {
              "itemKey": "resourceGroup",
              "sortOrder": 2
            }
          ],
          "labelSettings": [
            {
              "columnId": "resourceGroup",
              "label": "Resource Group"
            },
            {
              "columnId": "location",
              "label": "Location"
            },
            {
              "columnId": "tags",
              "label": "Tags"
            },
            {
              "columnId": "subscriptionId",
              "label": "Subscription"
            }
          ]
        },
        "sortBy": [
          {
            "itemKey": "resourceGroup",
            "sortOrder": 2
          }
        ],
        "tileSettings": {
          "titleContent": {
            "columnMatch": "vmSize",
            "formatter": 1,
            "formatOptions": {
              "showIcon": true
            }
          },
          "leftContent": {
            "columnMatch": "Count",
            "formatter": 12,
            "formatOptions": {
              "palette": "auto",
              "showIcon": true
            },
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          },
          "showBorder": true
        },
        "graphSettings": {
          "type": 0,
          "topContent": {
            "columnMatch": "vmSize",
            "formatter": 1
          },
          "centerContent": {
            "columnMatch": "Count",
            "formatter": 1,
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          }
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "op"
        },
        {
          "parameterName": "selectedTab2",
          "comparison": "isEqualTo",
          "value": "onic"
        }
      ],
      "name": "query - Orphan Network Interfaces"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "{\"version\":\"Merge/1.0\",\"merges\":[{\"id\":\"b9b3085b-3bf5-4fc6-a0ce-bb6f78fb222c\",\"mergeType\":\"innerunique\",\"leftTable\":\"query - 180\",\"rightTable\":\"query - Orphan Network Interfaces\",\"leftColumn\":\"ResourceId\",\"rightColumn\":\"Resource\"}],\"projectRename\":[{\"originalName\":\"[query - 180].PreTaxCost\",\"mergedName\":\"PreTaxCost\",\"fromId\":\"b9b3085b-3bf5-4fc6-a0ce-bb6f78fb222c\"},{\"originalName\":\"[query - 180].ResourceId\",\"mergedName\":\"ResourceId\",\"fromId\":\"b9b3085b-3bf5-4fc6-a0ce-bb6f78fb222c\"},{\"originalName\":\"[query - 180].Currency\",\"mergedName\":\"Currency\",\"fromId\":\"b9b3085b-3bf5-4fc6-a0ce-bb6f78fb222c\"},{\"originalName\":\"[query - Orphan Network Interfaces].Resource\",\"mergedName\":\"Resource\",\"fromId\":\"b9b3085b-3bf5-4fc6-a0ce-bb6f78fb222c\"},{\"originalName\":\"[query - Orphan Network Interfaces].resourceGroup\",\"mergedName\":\"Resource Group\",\"fromId\":\"b9b3085b-3bf5-4fc6-a0ce-bb6f78fb222c\"},{\"originalName\":\"[query - Orphan Network Interfaces].location\",\"mergedName\":\"Location\",\"fromId\":\"b9b3085b-3bf5-4fc6-a0ce-bb6f78fb222c\"},{\"originalName\":\"[query - Orphan Network Interfaces].tags\",\"mergedName\":\"Tags\",\"fromId\":\"b9b3085b-3bf5-4fc6-a0ce-bb6f78fb222c\"},{\"originalName\":\"[query - Orphan Network Interfaces].subscriptionId\",\"mergedName\":\"Subscription\",\"fromId\":\"b9b3085b-3bf5-4fc6-a0ce-bb6f78fb222c\"},{\"originalName\":\"[query - Orphan Network Interfaces].Details\",\"mergedName\":\"Details\",\"fromId\":\"b9b3085b-3bf5-4fc6-a0ce-bb6f78fb222c\"}]}",
        "size": 0,
        "title": "Orphan Network Interfaces Cost",
        "noDataMessage": "No Orphan Network Interfaces found",
        "noDataMessageStyle": 3,
        "showExportToExcel": true,
        "queryType": 7
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "op"
        },
        {
          "parameterName": "selectedTab2",
          "comparison": "isEqualTo",
          "value": "onic"
        }
      ],
      "name": "query - Orphan Network Interfaces Cost"
    },
    {
      "type": 1,
      "content": {
        "json": "## NoShow - End Network Interfaces\r\n\r\n\r\n## NoShow - Begin Public IPs"
      },
      "conditionalVisibility": {
        "parameterName": "noshow",
        "comparison": "isEqualTo",
        "value": "noshow"
      },
      "name": "text - NoShow Begin Public IPs"
    },
    {
      "type": 1,
      "content": {
        "json": "# Orphan Public IPs"
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "op"
        },
        {
          "parameterName": "selectedTab2",
          "comparison": "isEqualTo",
          "value": "opip"
        }
      ],
      "name": "text - Title Orphan Public IPs"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "Resources\r\n| where type == \"microsoft.network/publicipaddresses\"\r\n| where properties.ipConfiguration == \"\" and properties.natGateway == \"\"\r\n| summarize count(type)",
        "size": 4,
        "title": "Total",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscriptions}"
        ],
        "visualization": "tiles",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "$gen_group",
              "formatter": 13,
              "formatOptions": {
                "linkTarget": "Resource",
                "showIcon": true
              }
            },
            {
              "columnMatch": "id",
              "formatter": 5
            },
            {
              "columnMatch": "subscriptionId",
              "formatter": 5
            },
            {
              "columnMatch": "Details",
              "formatter": 7,
              "formatOptions": {
                "linkTarget": "CellDetails",
                "linkLabel": "üîç View Details",
                "linkIsContextBlade": true
              }
            }
          ],
          "rowLimit": 1000,
          "hierarchySettings": {
            "treeType": 1,
            "groupBy": [
              "subscriptionId"
            ],
            "expandTopLevel": true,
            "finalBy": "id"
          }
        },
        "sortBy": [],
        "tileSettings": {
          "titleContent": {
            "columnMatch": "count_type",
            "formatter": 12,
            "formatOptions": {
              "palette": "auto"
            }
          },
          "showBorder": true,
          "sortOrderField": 2,
          "size": "auto"
        },
        "graphSettings": {
          "type": 0,
          "topContent": {
            "columnMatch": "vmSize",
            "formatter": 1
          },
          "centerContent": {
            "columnMatch": "Count",
            "formatter": 1,
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          }
        },
        "textSettings": {
          "style": "bignumber"
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "op"
        },
        {
          "parameterName": "selectedTab2",
          "comparison": "isEqualTo",
          "value": "opip"
        }
      ],
      "customWidth": "15",
      "name": "query - Orphan Public IPs Count"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "Resources\r\n| where type == \"microsoft.network/publicipaddresses\"\r\n| where properties.ipConfiguration == \"\" and properties.natGateway == \"\"\r\n| summarize count(type) by tostring(sku.name)",
        "size": 4,
        "title": "Count by Type",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscriptions}"
        ],
        "visualization": "piechart",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "$gen_group",
              "formatter": 13,
              "formatOptions": {
                "linkTarget": "Resource",
                "showIcon": true
              }
            },
            {
              "columnMatch": "id",
              "formatter": 5
            },
            {
              "columnMatch": "subscriptionId",
              "formatter": 5
            },
            {
              "columnMatch": "Details",
              "formatter": 7,
              "formatOptions": {
                "linkTarget": "CellDetails",
                "linkLabel": "üîç View Details",
                "linkIsContextBlade": true
              }
            }
          ],
          "rowLimit": 1000,
          "hierarchySettings": {
            "treeType": 1,
            "groupBy": [
              "subscriptionId"
            ],
            "expandTopLevel": true,
            "finalBy": "id"
          }
        },
        "sortBy": [],
        "tileSettings": {
          "titleContent": {
            "columnMatch": "DiskType",
            "formatter": 1
          },
          "leftContent": {
            "columnMatch": "Count",
            "formatter": 12,
            "formatOptions": {
              "palette": "auto"
            },
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          },
          "showBorder": true
        },
        "graphSettings": {
          "type": 0,
          "topContent": {
            "columnMatch": "vmSize",
            "formatter": 1
          },
          "centerContent": {
            "columnMatch": "Count",
            "formatter": 1,
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          }
        },
        "chartSettings": {
          "showMetrics": false,
          "showLegend": true
        },
        "mapSettings": {
          "locInfo": "LatLong",
          "sizeSettings": "Count",
          "sizeAggregation": "Sum",
          "legendMetric": "Count",
          "legendAggregation": "Sum",
          "itemColorSettings": {
            "type": "heatmap",
            "colorAggregation": "Sum",
            "nodeColorField": "Count",
            "heatmapPalette": "greenRed"
          }
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "op"
        },
        {
          "parameterName": "selectedTab2",
          "comparison": "isEqualTo",
          "value": "opip"
        }
      ],
      "customWidth": "25",
      "name": "query - Orphan Public IPs by Type"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "Resources\r\n| where type == \"microsoft.network/publicipaddresses\"\r\n| where properties.ipConfiguration == \"\" and properties.natGateway == \"\"\r\n| summarize count(type) by AllocationMethod=tostring(properties.publicIPAllocationMethod)",
        "size": 4,
        "title": "Count by Allocation Method",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscriptions}"
        ],
        "visualization": "piechart",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "$gen_group",
              "formatter": 13,
              "formatOptions": {
                "linkTarget": "Resource",
                "showIcon": true
              }
            },
            {
              "columnMatch": "id",
              "formatter": 5
            },
            {
              "columnMatch": "subscriptionId",
              "formatter": 5
            },
            {
              "columnMatch": "Details",
              "formatter": 7,
              "formatOptions": {
                "linkTarget": "CellDetails",
                "linkLabel": "üîç View Details",
                "linkIsContextBlade": true
              }
            }
          ],
          "rowLimit": 1000,
          "hierarchySettings": {
            "treeType": 1,
            "groupBy": [
              "subscriptionId"
            ],
            "expandTopLevel": true,
            "finalBy": "id"
          }
        },
        "sortBy": [],
        "tileSettings": {
          "titleContent": {
            "columnMatch": "DiskType",
            "formatter": 1
          },
          "leftContent": {
            "columnMatch": "Count",
            "formatter": 12,
            "formatOptions": {
              "palette": "auto"
            },
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          },
          "showBorder": true
        },
        "graphSettings": {
          "type": 0,
          "topContent": {
            "columnMatch": "vmSize",
            "formatter": 1
          },
          "centerContent": {
            "columnMatch": "Count",
            "formatter": 1,
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          }
        },
        "chartSettings": {
          "showMetrics": false,
          "showLegend": true
        },
        "mapSettings": {
          "locInfo": "LatLong",
          "sizeSettings": "Count",
          "sizeAggregation": "Sum",
          "legendMetric": "Count",
          "legendAggregation": "Sum",
          "itemColorSettings": {
            "type": "heatmap",
            "colorAggregation": "Sum",
            "nodeColorField": "Count",
            "heatmapPalette": "greenRed"
          }
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "op"
        },
        {
          "parameterName": "selectedTab2",
          "comparison": "isEqualTo",
          "value": "opip"
        }
      ],
      "customWidth": "25",
      "name": "query - Orphan Public IPs by Allocation Method"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "Resources\r\n| where type == \"microsoft.network/publicipaddresses\"\r\n| where properties.ipConfiguration == \"\" and properties.natGateway == \"\"\r\n| summarize count(type) by location",
        "size": 4,
        "title": "Count by Location",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscriptions}"
        ],
        "visualization": "piechart",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "$gen_group",
              "formatter": 13,
              "formatOptions": {
                "linkTarget": "Resource",
                "showIcon": true
              }
            },
            {
              "columnMatch": "id",
              "formatter": 5
            },
            {
              "columnMatch": "subscriptionId",
              "formatter": 5
            },
            {
              "columnMatch": "Details",
              "formatter": 7,
              "formatOptions": {
                "linkTarget": "CellDetails",
                "linkLabel": "üîç View Details",
                "linkIsContextBlade": true
              }
            }
          ],
          "rowLimit": 1000,
          "hierarchySettings": {
            "treeType": 1,
            "groupBy": [
              "subscriptionId"
            ],
            "expandTopLevel": true,
            "finalBy": "id"
          }
        },
        "sortBy": [],
        "tileSettings": {
          "titleContent": {
            "columnMatch": "DiskType",
            "formatter": 1
          },
          "leftContent": {
            "columnMatch": "Count",
            "formatter": 12,
            "formatOptions": {
              "palette": "auto"
            },
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          },
          "showBorder": true
        },
        "graphSettings": {
          "type": 0,
          "topContent": {
            "columnMatch": "vmSize",
            "formatter": 1
          },
          "centerContent": {
            "columnMatch": "Count",
            "formatter": 1,
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          }
        },
        "chartSettings": {
          "showMetrics": false,
          "showLegend": true
        },
        "mapSettings": {
          "locInfo": "LatLong",
          "sizeSettings": "Count",
          "sizeAggregation": "Sum",
          "legendMetric": "Count",
          "legendAggregation": "Sum",
          "itemColorSettings": {
            "type": "heatmap",
            "colorAggregation": "Sum",
            "nodeColorField": "Count",
            "heatmapPalette": "greenRed"
          }
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "op"
        },
        {
          "parameterName": "selectedTab2",
          "comparison": "isEqualTo",
          "value": "opip"
        }
      ],
      "customWidth": "25",
      "name": "query - Orphan Public IPs by Location"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "Resources\r\n| where type == \"microsoft.network/publicipaddresses\"\r\n| where properties.ipConfiguration == \"\" and properties.natGateway == \"\"\r\n| extend Details = pack_all()\r\n| project Resource=id, resourceGroup, location, subscriptionId, tostring(sku.name), AllocationMethod=tostring(properties.publicIPAllocationMethod), tags, Details",
        "size": 3,
        "title": "Orphan Public IPs",
        "noDataMessage": "No oprhan Public IPs found",
        "noDataMessageStyle": 3,
        "showExportToExcel": true,
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscriptions}"
        ],
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "$gen_group",
              "formatter": 13,
              "formatOptions": {
                "linkTarget": "Resource",
                "linkIsContextBlade": true,
                "showIcon": true
              }
            },
            {
              "columnMatch": "Resource",
              "formatter": 5
            },
            {
              "columnMatch": "subscriptionId",
              "formatter": 5
            },
            {
              "columnMatch": "Details",
              "formatter": 7,
              "formatOptions": {
                "linkTarget": "CellDetails",
                "linkLabel": "üîç View Details",
                "linkIsContextBlade": true
              }
            }
          ],
          "rowLimit": 1000,
          "filter": true,
          "hierarchySettings": {
            "treeType": 1,
            "groupBy": [
              "subscriptionId"
            ],
            "expandTopLevel": true,
            "finalBy": "Resource"
          },
          "sortBy": [
            {
              "itemKey": "resourceGroup",
              "sortOrder": 2
            }
          ],
          "labelSettings": [
            {
              "columnId": "Resource",
              "label": "Public IP Name"
            },
            {
              "columnId": "resourceGroup",
              "label": "Resource Group"
            },
            {
              "columnId": "location",
              "label": "Location"
            },
            {
              "columnId": "subscriptionId",
              "label": "Subscription"
            },
            {
              "columnId": "sku_name",
              "label": "Type"
            },
            {
              "columnId": "tags",
              "label": "Tags"
            }
          ]
        },
        "sortBy": [
          {
            "itemKey": "resourceGroup",
            "sortOrder": 2
          }
        ],
        "tileSettings": {
          "titleContent": {
            "columnMatch": "vmSize",
            "formatter": 1,
            "formatOptions": {
              "showIcon": true
            }
          },
          "leftContent": {
            "columnMatch": "Count",
            "formatter": 12,
            "formatOptions": {
              "palette": "auto",
              "showIcon": true
            },
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          },
          "showBorder": true
        },
        "graphSettings": {
          "type": 0,
          "topContent": {
            "columnMatch": "vmSize",
            "formatter": 1
          },
          "centerContent": {
            "columnMatch": "Count",
            "formatter": 1,
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          }
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "op"
        },
        {
          "parameterName": "selectedTab2",
          "comparison": "isEqualTo",
          "value": "opip"
        }
      ],
      "name": "query - Orphan Public IPs"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "{\"version\":\"Merge/1.0\",\"merges\":[{\"id\":\"b9b3085b-3bf5-4fc6-a0ce-bb6f78fb2269\",\"mergeType\":\"innerunique\",\"leftTable\":\"query - 180\",\"rightTable\":\"query - Orphan Public IPs\",\"leftColumn\":\"ResourceId\",\"rightColumn\":\"location\"}],\"projectRename\":[{\"originalName\":\"[query - 180].PreTaxCost\",\"mergedName\":\"PreTaxCost\",\"fromId\":\"b9b3085b-3bf5-4fc6-a0ce-bb6f78fb2269\"},{\"originalName\":\"[query - 180].ResourceId\",\"mergedName\":\"ResourceId\",\"fromId\":\"b9b3085b-3bf5-4fc6-a0ce-bb6f78fb2269\"},{\"originalName\":\"[query - 180].Currency\",\"mergedName\":\"Currency\",\"fromId\":\"b9b3085b-3bf5-4fc6-a0ce-bb6f78fb2269\"},{\"originalName\":\"[query - Orphan Public IPs].Resource\",\"mergedName\":\"Public IP Name\",\"fromId\":\"b9b3085b-3bf5-4fc6-a0ce-bb6f78fb2269\"},{\"originalName\":\"[query - Orphan Public IPs].resourceGroup\",\"mergedName\":\"Resource Group\",\"fromId\":\"b9b3085b-3bf5-4fc6-a0ce-bb6f78fb2269\"},{\"originalName\":\"[query - Orphan Public IPs].location\",\"mergedName\":\"Location\",\"fromId\":\"b9b3085b-3bf5-4fc6-a0ce-bb6f78fb2269\"},{\"originalName\":\"[query - Orphan Public IPs].subscriptionId\",\"mergedName\":\"Subscription\",\"fromId\":\"b9b3085b-3bf5-4fc6-a0ce-bb6f78fb2269\"},{\"originalName\":\"[query - Orphan Public IPs].sku_name\",\"mergedName\":\"Type\",\"fromId\":\"b9b3085b-3bf5-4fc6-a0ce-bb6f78fb2269\"},{\"originalName\":\"[query - Orphan Public IPs].AllocationMethod\",\"mergedName\":\"AllocationMethod\",\"fromId\":\"b9b3085b-3bf5-4fc6-a0ce-bb6f78fb2269\"},{\"originalName\":\"[query - Orphan Public IPs].tags\",\"mergedName\":\"Tags\",\"fromId\":\"b9b3085b-3bf5-4fc6-a0ce-bb6f78fb2269\"},{\"originalName\":\"[query - Orphan Public IPs].Details\",\"mergedName\":\"Details\",\"fromId\":\"b9b3085b-3bf5-4fc6-a0ce-bb6f78fb2269\"}]}",
        "size": 0,
        "title": "Orphan Public IP Cost",
        "noDataMessage": "No Orphan Public IP found",
        "noDataMessageStyle": 3,
        "showExportToExcel": true,
        "queryType": 7
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "op"
        },
        {
          "parameterName": "selectedTab2",
          "comparison": "isEqualTo",
          "value": "opip"
        }
      ],
      "name": "query - Orphan Public IP Cost"
    },
    {
      "type": 1,
      "content": {
        "json": "## NoShow - End Public IPs\r\n\r\n## NoShow - Begin Resource Groups"
      },
      "conditionalVisibility": {
        "parameterName": "noshow",
        "comparison": "isEqualTo",
        "value": "noshow"
      },
      "name": "text - NoShow Begin Resource Groups"
    },
    {
      "type": 1,
      "content": {
        "json": "# Orphan Reource Groups"
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "op"
        },
        {
          "parameterName": "selectedTab2",
          "comparison": "isEqualTo",
          "value": "org"
        }
      ],
      "name": "text - Title Orphan Resource Groups"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "ResourceContainers\r\n | where type == \"microsoft.resources/subscriptions/resourcegroups\"\r\n | extend rgAndSub = strcat(resourceGroup, \"--\", subscriptionId)\r\n | join kind=leftouter (\r\n     Resources\r\n     | extend rgAndSub = strcat(resourceGroup, \"--\", subscriptionId)\r\n     | summarize count() by rgAndSub\r\n ) on rgAndSub\r\n | where isnull(count_)\r\n | summarize count(type)",
        "size": 4,
        "title": "Total",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscriptions}"
        ],
        "visualization": "tiles",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "$gen_group",
              "formatter": 13,
              "formatOptions": {
                "linkTarget": "Resource",
                "showIcon": true
              }
            },
            {
              "columnMatch": "id",
              "formatter": 5
            },
            {
              "columnMatch": "subscriptionId",
              "formatter": 5
            },
            {
              "columnMatch": "Details",
              "formatter": 7,
              "formatOptions": {
                "linkTarget": "CellDetails",
                "linkLabel": "üîç View Details",
                "linkIsContextBlade": true
              }
            }
          ],
          "rowLimit": 1000,
          "hierarchySettings": {
            "treeType": 1,
            "groupBy": [
              "subscriptionId"
            ],
            "expandTopLevel": true,
            "finalBy": "id"
          }
        },
        "sortBy": [],
        "tileSettings": {
          "titleContent": {
            "columnMatch": "count_type",
            "formatter": 12,
            "formatOptions": {
              "palette": "auto"
            }
          },
          "showBorder": true,
          "sortOrderField": 2,
          "size": "auto"
        },
        "graphSettings": {
          "type": 0,
          "topContent": {
            "columnMatch": "vmSize",
            "formatter": 1
          },
          "centerContent": {
            "columnMatch": "Count",
            "formatter": 1,
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          }
        },
        "textSettings": {
          "style": "bignumber"
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "op"
        },
        {
          "parameterName": "selectedTab2",
          "comparison": "isEqualTo",
          "value": "org"
        }
      ],
      "customWidth": "15",
      "name": "query - Orphan Resource Groups Count"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "ResourceContainers\r\n | where type == \"microsoft.resources/subscriptions/resourcegroups\"\r\n | extend rgAndSub = strcat(resourceGroup, \"--\", subscriptionId)\r\n | join kind=leftouter (\r\n     Resources\r\n     | extend rgAndSub = strcat(resourceGroup, \"--\", subscriptionId)\r\n     | summarize count() by rgAndSub\r\n ) on rgAndSub\r\n | where isnull(count_)\r\n| summarize count(type) by location",
        "size": 4,
        "title": "Count by Location",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscriptions}"
        ],
        "visualization": "piechart",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "$gen_group",
              "formatter": 13,
              "formatOptions": {
                "linkTarget": "Resource",
                "showIcon": true
              }
            },
            {
              "columnMatch": "id",
              "formatter": 5
            },
            {
              "columnMatch": "subscriptionId",
              "formatter": 5
            },
            {
              "columnMatch": "Details",
              "formatter": 7,
              "formatOptions": {
                "linkTarget": "CellDetails",
                "linkLabel": "üîç View Details",
                "linkIsContextBlade": true
              }
            }
          ],
          "rowLimit": 1000,
          "hierarchySettings": {
            "treeType": 1,
            "groupBy": [
              "subscriptionId"
            ],
            "expandTopLevel": true,
            "finalBy": "id"
          }
        },
        "sortBy": [],
        "tileSettings": {
          "titleContent": {
            "columnMatch": "DiskType",
            "formatter": 1
          },
          "leftContent": {
            "columnMatch": "Count",
            "formatter": 12,
            "formatOptions": {
              "palette": "auto"
            },
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          },
          "showBorder": true
        },
        "graphSettings": {
          "type": 0,
          "topContent": {
            "columnMatch": "vmSize",
            "formatter": 1
          },
          "centerContent": {
            "columnMatch": "Count",
            "formatter": 1,
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          }
        },
        "chartSettings": {
          "showMetrics": false,
          "showLegend": true
        },
        "mapSettings": {
          "locInfo": "LatLong",
          "sizeSettings": "Count",
          "sizeAggregation": "Sum",
          "legendMetric": "Count",
          "legendAggregation": "Sum",
          "itemColorSettings": {
            "type": "heatmap",
            "colorAggregation": "Sum",
            "nodeColorField": "Count",
            "heatmapPalette": "greenRed"
          }
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "op"
        },
        {
          "parameterName": "selectedTab2",
          "comparison": "isEqualTo",
          "value": "org"
        }
      ],
      "customWidth": "30",
      "name": "query - Orphan Resource Groups by Location"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "ResourceContainers\r\n | where type == \"microsoft.resources/subscriptions/resourcegroups\"\r\n | extend rgAndSub = strcat(resourceGroup, \"--\", subscriptionId)\r\n | join kind=leftouter (\r\n     Resources\r\n     | extend rgAndSub = strcat(resourceGroup, \"--\", subscriptionId)\r\n     | summarize count() by rgAndSub\r\n ) on rgAndSub\r\n | where isnull(count_)\r\n | extend Details = pack_all()\r\n | project subscriptionId, Resource=id, location, tags ,Details",
        "size": 3,
        "title": "Orphan Resource Groups",
        "noDataMessage": "No oprhan Resource Groups found",
        "showExportToExcel": true,
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscriptions}"
        ],
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "$gen_group",
              "formatter": 13,
              "formatOptions": {
                "linkTarget": "Resource",
                "linkIsContextBlade": true,
                "showIcon": true
              }
            },
            {
              "columnMatch": "subscriptionId",
              "formatter": 5
            },
            {
              "columnMatch": "Resource",
              "formatter": 5
            },
            {
              "columnMatch": "Details",
              "formatter": 7,
              "formatOptions": {
                "linkTarget": "CellDetails",
                "linkLabel": "üîç View Details",
                "linkIsContextBlade": true
              }
            }
          ],
          "rowLimit": 1000,
          "filter": true,
          "hierarchySettings": {
            "treeType": 1,
            "groupBy": [
              "subscriptionId"
            ],
            "expandTopLevel": true,
            "finalBy": "Resource"
          },
          "labelSettings": [
            {
              "columnId": "subscriptionId",
              "label": "Subscription"
            },
            {
              "columnId": "Resource",
              "label": "Resource Group Name"
            },
            {
              "columnId": "location",
              "label": "Location"
            },
            {
              "columnId": "tags",
              "label": "Tags"
            }
          ]
        },
        "sortBy": [],
        "tileSettings": {
          "titleContent": {
            "columnMatch": "vmSize",
            "formatter": 1,
            "formatOptions": {
              "showIcon": true
            }
          },
          "leftContent": {
            "columnMatch": "Count",
            "formatter": 12,
            "formatOptions": {
              "palette": "auto",
              "showIcon": true
            },
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          },
          "showBorder": true
        },
        "graphSettings": {
          "type": 0,
          "topContent": {
            "columnMatch": "vmSize",
            "formatter": 1
          },
          "centerContent": {
            "columnMatch": "Count",
            "formatter": 1,
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          }
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "op"
        },
        {
          "parameterName": "selectedTab2",
          "comparison": "isEqualTo",
          "value": "org"
        }
      ],
      "name": "query - Orphan Resource Groups"
    },
    {
      "type": 1,
      "content": {
        "json": "## NoShow - End Resource Groups\r\n\r\n## NoShow - Begin Network Security Groups"
      },
      "conditionalVisibility": {
        "parameterName": "noshow",
        "comparison": "isEqualTo",
        "value": "noshow"
      },
      "name": "text - NoShow Begin NSGs"
    },
    {
      "type": 1,
      "content": {
        "json": "# Orphan Network Security Groups"
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "op"
        },
        {
          "parameterName": "selectedTab2",
          "comparison": "isEqualTo",
          "value": "onsg"
        }
      ],
      "name": "text - Title Orphan Network Security Groups"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "Resources\r\n| where type == \"microsoft.network/networksecuritygroups\" and isnull(properties.networkInterfaces) and isnull(properties.subnets)\r\n| summarize count(type)",
        "size": 4,
        "title": "Total",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscriptions}"
        ],
        "visualization": "tiles",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "$gen_group",
              "formatter": 13,
              "formatOptions": {
                "linkTarget": "Resource",
                "showIcon": true
              }
            },
            {
              "columnMatch": "id",
              "formatter": 5
            },
            {
              "columnMatch": "subscriptionId",
              "formatter": 5
            },
            {
              "columnMatch": "Details",
              "formatter": 7,
              "formatOptions": {
                "linkTarget": "CellDetails",
                "linkLabel": "üîç View Details",
                "linkIsContextBlade": true
              }
            }
          ],
          "rowLimit": 1000,
          "hierarchySettings": {
            "treeType": 1,
            "groupBy": [
              "subscriptionId"
            ],
            "expandTopLevel": true,
            "finalBy": "id"
          }
        },
        "sortBy": [],
        "tileSettings": {
          "titleContent": {
            "columnMatch": "count_type",
            "formatter": 12,
            "formatOptions": {
              "palette": "auto"
            }
          },
          "showBorder": true,
          "sortOrderField": 2,
          "size": "auto"
        },
        "graphSettings": {
          "type": 0,
          "topContent": {
            "columnMatch": "vmSize",
            "formatter": 1
          },
          "centerContent": {
            "columnMatch": "Count",
            "formatter": 1,
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          }
        },
        "textSettings": {
          "style": "bignumber"
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "op"
        },
        {
          "parameterName": "selectedTab2",
          "comparison": "isEqualTo",
          "value": "onsg"
        }
      ],
      "customWidth": "15",
      "name": "query - Orphan NSGs Count"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "Resources\r\n| where type == \"microsoft.network/networksecuritygroups\" and isnull(properties.networkInterfaces) and isnull(properties.subnets)\r\n| summarize count(type) by location",
        "size": 4,
        "title": "Count by Location",
        "noDataMessage": "No Orphan NSG by location",
        "noDataMessageStyle": 3,
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscriptions}"
        ],
        "visualization": "piechart",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "$gen_group",
              "formatter": 13,
              "formatOptions": {
                "linkTarget": "Resource",
                "showIcon": true
              }
            },
            {
              "columnMatch": "id",
              "formatter": 5
            },
            {
              "columnMatch": "subscriptionId",
              "formatter": 5
            },
            {
              "columnMatch": "Details",
              "formatter": 7,
              "formatOptions": {
                "linkTarget": "CellDetails",
                "linkLabel": "üîç View Details",
                "linkIsContextBlade": true
              }
            }
          ],
          "rowLimit": 1000,
          "hierarchySettings": {
            "treeType": 1,
            "groupBy": [
              "subscriptionId"
            ],
            "expandTopLevel": true,
            "finalBy": "id"
          }
        },
        "sortBy": [],
        "tileSettings": {
          "titleContent": {
            "columnMatch": "DiskType",
            "formatter": 1
          },
          "leftContent": {
            "columnMatch": "Count",
            "formatter": 12,
            "formatOptions": {
              "palette": "auto"
            },
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          },
          "showBorder": true
        },
        "graphSettings": {
          "type": 0,
          "topContent": {
            "columnMatch": "vmSize",
            "formatter": 1
          },
          "centerContent": {
            "columnMatch": "Count",
            "formatter": 1,
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          }
        },
        "chartSettings": {
          "showMetrics": false,
          "showLegend": true
        },
        "mapSettings": {
          "locInfo": "LatLong",
          "sizeSettings": "Count",
          "sizeAggregation": "Sum",
          "legendMetric": "Count",
          "legendAggregation": "Sum",
          "itemColorSettings": {
            "type": "heatmap",
            "colorAggregation": "Sum",
            "nodeColorField": "Count",
            "heatmapPalette": "greenRed"
          }
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "op"
        },
        {
          "parameterName": "selectedTab2",
          "comparison": "isEqualTo",
          "value": "onsg"
        }
      ],
      "customWidth": "30",
      "name": "query - Orphan NSGs by Location"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "Resources\r\n| where type == \"microsoft.network/networksecuritygroups\" and isnull(properties.networkInterfaces) and isnull(properties.subnets)\r\n| extend Details = pack_all()\r\n| project subscriptionId, Resource=id, resourceGroup, location, tags, Details",
        "size": 3,
        "title": "Orphan Network Security Group",
        "noDataMessage": "No oprhan NSGs found",
        "showExportToExcel": true,
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscriptions}"
        ],
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "$gen_group",
              "formatter": 13,
              "formatOptions": {
                "linkTarget": "Resource",
                "linkIsContextBlade": true,
                "showIcon": true
              }
            },
            {
              "columnMatch": "subscriptionId",
              "formatter": 5
            },
            {
              "columnMatch": "Resource",
              "formatter": 5
            },
            {
              "columnMatch": "Details",
              "formatter": 7,
              "formatOptions": {
                "linkTarget": "CellDetails",
                "linkLabel": "üîç View Details",
                "linkIsContextBlade": true
              }
            }
          ],
          "rowLimit": 1000,
          "filter": true,
          "hierarchySettings": {
            "treeType": 1,
            "groupBy": [
              "subscriptionId"
            ],
            "expandTopLevel": true,
            "finalBy": "Resource"
          },
          "labelSettings": [
            {
              "columnId": "subscriptionId",
              "label": "Subscription"
            },
            {
              "columnId": "Resource",
              "label": "Resource Name"
            },
            {
              "columnId": "resourceGroup",
              "label": "Resource Group"
            },
            {
              "columnId": "location",
              "label": "Location"
            }
          ]
        },
        "sortBy": [],
        "tileSettings": {
          "titleContent": {
            "columnMatch": "vmSize",
            "formatter": 1,
            "formatOptions": {
              "showIcon": true
            }
          },
          "leftContent": {
            "columnMatch": "Count",
            "formatter": 12,
            "formatOptions": {
              "palette": "auto",
              "showIcon": true
            },
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          },
          "showBorder": true
        },
        "graphSettings": {
          "type": 0,
          "topContent": {
            "columnMatch": "vmSize",
            "formatter": 1
          },
          "centerContent": {
            "columnMatch": "Count",
            "formatter": 1,
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          }
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "op"
        },
        {
          "parameterName": "selectedTab2",
          "comparison": "isEqualTo",
          "value": "onsg"
        }
      ],
      "name": "query - Orphan NSGs"
    },
    {
      "type": 1,
      "content": {
        "json": "## NoShow - End Network Security Groups\r\n\r\n## NoShow - Begin Availability Set"
      },
      "conditionalVisibility": {
        "parameterName": "noshow",
        "comparison": "isEqualTo",
        "value": "noshow"
      },
      "name": "text - NoShow Begin Availability Set"
    },
    {
      "type": 1,
      "content": {
        "json": "# Orphan Availability Set"
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "op"
        },
        {
          "parameterName": "selectedTab2",
          "comparison": "isEqualTo",
          "value": "oas"
        }
      ],
      "name": "text - Title Orphan Availability Set"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "Resources\r\n| where type =~ 'Microsoft.Compute/availabilitySets'\r\n| where properties.virtualMachines == \"[]\"\r\n| summarize count(type)\r\n",
        "size": 4,
        "title": "Total",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscriptions}"
        ],
        "visualization": "tiles",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "$gen_group",
              "formatter": 13,
              "formatOptions": {
                "linkTarget": "Resource",
                "showIcon": true
              }
            },
            {
              "columnMatch": "id",
              "formatter": 5
            },
            {
              "columnMatch": "subscriptionId",
              "formatter": 5
            },
            {
              "columnMatch": "Details",
              "formatter": 7,
              "formatOptions": {
                "linkTarget": "CellDetails",
                "linkLabel": "üîç View Details",
                "linkIsContextBlade": true
              }
            }
          ],
          "rowLimit": 1000,
          "hierarchySettings": {
            "treeType": 1,
            "groupBy": [
              "subscriptionId"
            ],
            "expandTopLevel": true,
            "finalBy": "id"
          }
        },
        "sortBy": [],
        "tileSettings": {
          "titleContent": {
            "columnMatch": "count_type",
            "formatter": 12,
            "formatOptions": {
              "palette": "auto"
            }
          },
          "showBorder": true,
          "sortOrderField": 2,
          "size": "auto"
        },
        "graphSettings": {
          "type": 0,
          "topContent": {
            "columnMatch": "vmSize",
            "formatter": 1
          },
          "centerContent": {
            "columnMatch": "Count",
            "formatter": 1,
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          }
        },
        "textSettings": {
          "style": "bignumber"
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "op"
        },
        {
          "parameterName": "selectedTab2",
          "comparison": "isEqualTo",
          "value": "oas"
        }
      ],
      "customWidth": "15",
      "name": "query - Orphan Availability Set Count"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "Resources\r\n| where type =~ 'Microsoft.Compute/availabilitySets'\r\n| where properties.virtualMachines == \"[]\"\r\n| summarize count(type) by location",
        "size": 4,
        "title": "Count by Location",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscriptions}"
        ],
        "visualization": "piechart",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "$gen_group",
              "formatter": 13,
              "formatOptions": {
                "linkTarget": "Resource",
                "showIcon": true
              }
            },
            {
              "columnMatch": "id",
              "formatter": 5
            },
            {
              "columnMatch": "subscriptionId",
              "formatter": 5
            },
            {
              "columnMatch": "Details",
              "formatter": 7,
              "formatOptions": {
                "linkTarget": "CellDetails",
                "linkLabel": "üîç View Details",
                "linkIsContextBlade": true
              }
            }
          ],
          "rowLimit": 1000,
          "hierarchySettings": {
            "treeType": 1,
            "groupBy": [
              "subscriptionId"
            ],
            "expandTopLevel": true,
            "finalBy": "id"
          }
        },
        "sortBy": [],
        "tileSettings": {
          "titleContent": {
            "columnMatch": "DiskType",
            "formatter": 1
          },
          "leftContent": {
            "columnMatch": "Count",
            "formatter": 12,
            "formatOptions": {
              "palette": "auto"
            },
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          },
          "showBorder": true
        },
        "graphSettings": {
          "type": 0,
          "topContent": {
            "columnMatch": "vmSize",
            "formatter": 1
          },
          "centerContent": {
            "columnMatch": "Count",
            "formatter": 1,
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          }
        },
        "chartSettings": {
          "showMetrics": false,
          "showLegend": true
        },
        "mapSettings": {
          "locInfo": "LatLong",
          "sizeSettings": "Count",
          "sizeAggregation": "Sum",
          "legendMetric": "Count",
          "legendAggregation": "Sum",
          "itemColorSettings": {
            "type": "heatmap",
            "colorAggregation": "Sum",
            "nodeColorField": "Count",
            "heatmapPalette": "greenRed"
          }
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "op"
        },
        {
          "parameterName": "selectedTab2",
          "comparison": "isEqualTo",
          "value": "oas"
        }
      ],
      "customWidth": "30",
      "name": "query - Orphan Availability Set by Location"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "Resources\r\n| where type =~ 'Microsoft.Compute/availabilitySets'\r\n| where properties.virtualMachines == \"[]\"\r\n| extend Details = pack_all()\r\n| project subscriptionId, Resource=id, resourceGroup, location, tags, Details",
        "size": 3,
        "title": "Orphan Availability Set",
        "noDataMessage": "No oprhan Availability Set found",
        "noDataMessageStyle": 3,
        "showExportToExcel": true,
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscriptions}"
        ],
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "$gen_group",
              "formatter": 13,
              "formatOptions": {
                "linkTarget": "Resource",
                "linkIsContextBlade": true,
                "showIcon": true
              }
            },
            {
              "columnMatch": "subscriptionId",
              "formatter": 5
            },
            {
              "columnMatch": "Resource",
              "formatter": 5
            },
            {
              "columnMatch": "Details",
              "formatter": 7,
              "formatOptions": {
                "linkTarget": "CellDetails",
                "linkLabel": "üîç View Details",
                "linkIsContextBlade": true
              }
            }
          ],
          "rowLimit": 1000,
          "filter": true,
          "hierarchySettings": {
            "treeType": 1,
            "groupBy": [
              "subscriptionId"
            ],
            "expandTopLevel": true,
            "finalBy": "Resource"
          },
          "labelSettings": [
            {
              "columnId": "subscriptionId",
              "label": "Subscription"
            },
            {
              "columnId": "Resource",
              "label": "Resource Name"
            },
            {
              "columnId": "resourceGroup",
              "label": "Resource Group"
            },
            {
              "columnId": "location",
              "label": "Location"
            },
            {
              "columnId": "tags",
              "label": "Tags"
            }
          ]
        },
        "sortBy": [],
        "tileSettings": {
          "titleContent": {
            "columnMatch": "vmSize",
            "formatter": 1,
            "formatOptions": {
              "showIcon": true
            }
          },
          "leftContent": {
            "columnMatch": "Count",
            "formatter": 12,
            "formatOptions": {
              "palette": "auto",
              "showIcon": true
            },
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          },
          "showBorder": true
        },
        "graphSettings": {
          "type": 0,
          "topContent": {
            "columnMatch": "vmSize",
            "formatter": 1
          },
          "centerContent": {
            "columnMatch": "Count",
            "formatter": 1,
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          }
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "op"
        },
        {
          "parameterName": "selectedTab2",
          "comparison": "isEqualTo",
          "value": "oas"
        }
      ],
      "name": "query - Orphan Availability Set"
    },
    {
      "type": 1,
      "content": {
        "json": "## NoShow - End Availability Set\r\n\r\n## NoShow - Begin Route Tables"
      },
      "conditionalVisibility": {
        "parameterName": "noshow",
        "comparison": "isEqualTo",
        "value": "noshow"
      },
      "name": "text - NoShow Route Tables"
    },
    {
      "type": 1,
      "content": {
        "json": "# Orphan Route Tables"
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "op"
        },
        {
          "parameterName": "selectedTab2",
          "comparison": "isEqualTo",
          "value": "ort"
        }
      ],
      "name": "text - Title Orphan Route Tables"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "resources\r\n| where type == \"microsoft.network/routetables\"\r\n| where isnull(properties.subnets)\r\n| summarize count(type)\r\n",
        "size": 4,
        "title": "Total",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscriptions}"
        ],
        "visualization": "tiles",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "$gen_group",
              "formatter": 13,
              "formatOptions": {
                "linkTarget": "Resource",
                "showIcon": true
              }
            },
            {
              "columnMatch": "id",
              "formatter": 5
            },
            {
              "columnMatch": "subscriptionId",
              "formatter": 5
            },
            {
              "columnMatch": "Details",
              "formatter": 7,
              "formatOptions": {
                "linkTarget": "CellDetails",
                "linkLabel": "üîç View Details",
                "linkIsContextBlade": true
              }
            }
          ],
          "rowLimit": 1000,
          "hierarchySettings": {
            "treeType": 1,
            "groupBy": [
              "subscriptionId"
            ],
            "expandTopLevel": true,
            "finalBy": "id"
          }
        },
        "sortBy": [],
        "tileSettings": {
          "titleContent": {
            "columnMatch": "count_type",
            "formatter": 12,
            "formatOptions": {
              "palette": "auto"
            }
          },
          "showBorder": true,
          "sortOrderField": 2,
          "size": "auto"
        },
        "graphSettings": {
          "type": 0,
          "topContent": {
            "columnMatch": "vmSize",
            "formatter": 1
          },
          "centerContent": {
            "columnMatch": "Count",
            "formatter": 1,
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          }
        },
        "textSettings": {
          "style": "bignumber"
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "op"
        },
        {
          "parameterName": "selectedTab2",
          "comparison": "isEqualTo",
          "value": "ort"
        }
      ],
      "customWidth": "15",
      "name": "query - Orphan Route Tables Count"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "resources\r\n| where type == \"microsoft.network/routetables\"\r\n| where isnull(properties.subnets)\r\n| summarize count(type) by location",
        "size": 4,
        "title": "Count by Location",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscriptions}"
        ],
        "visualization": "piechart",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "$gen_group",
              "formatter": 13,
              "formatOptions": {
                "linkTarget": "Resource",
                "showIcon": true
              }
            },
            {
              "columnMatch": "id",
              "formatter": 5
            },
            {
              "columnMatch": "subscriptionId",
              "formatter": 5
            },
            {
              "columnMatch": "Details",
              "formatter": 7,
              "formatOptions": {
                "linkTarget": "CellDetails",
                "linkLabel": "üîç View Details",
                "linkIsContextBlade": true
              }
            }
          ],
          "rowLimit": 1000,
          "hierarchySettings": {
            "treeType": 1,
            "groupBy": [
              "subscriptionId"
            ],
            "expandTopLevel": true,
            "finalBy": "id"
          },
          "labelSettings": [
            {
              "columnId": "subscriptionId",
              "label": "Subscription"
            },
            {
              "columnId": "Resource",
              "label": "Resource Name"
            },
            {
              "columnId": "resourceGroup",
              "label": "Resource Group"
            },
            {
              "columnId": "location",
              "label": "Location"
            },
            {
              "columnId": "tags",
              "label": "Tags"
            }
          ]
        },
        "sortBy": [],
        "tileSettings": {
          "titleContent": {
            "columnMatch": "DiskType",
            "formatter": 1
          },
          "leftContent": {
            "columnMatch": "Count",
            "formatter": 12,
            "formatOptions": {
              "palette": "auto"
            },
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          },
          "showBorder": true
        },
        "graphSettings": {
          "type": 0,
          "topContent": {
            "columnMatch": "vmSize",
            "formatter": 1
          },
          "centerContent": {
            "columnMatch": "Count",
            "formatter": 1,
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          }
        },
        "chartSettings": {
          "showMetrics": false,
          "showLegend": true
        },
        "mapSettings": {
          "locInfo": "LatLong",
          "sizeSettings": "Count",
          "sizeAggregation": "Sum",
          "legendMetric": "Count",
          "legendAggregation": "Sum",
          "itemColorSettings": {
            "type": "heatmap",
            "colorAggregation": "Sum",
            "nodeColorField": "Count",
            "heatmapPalette": "greenRed"
          }
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "op"
        },
        {
          "parameterName": "selectedTab2",
          "comparison": "isEqualTo",
          "value": "ort"
        }
      ],
      "customWidth": "30",
      "name": "query - Orphan Route Tables by Location"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "resources\r\n| where type == \"microsoft.network/routetables\"\r\n| where isnull(properties.subnets)\r\n| extend Details = pack_all()\r\n| project subscriptionId, Resource=id, resourceGroup, location, tags, Details",
        "size": 3,
        "title": "Orphan Route Tables",
        "noDataMessage": "No oprhan Route Tables found",
        "showExportToExcel": true,
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscriptions}"
        ],
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "$gen_group",
              "formatter": 13,
              "formatOptions": {
                "linkTarget": "Resource",
                "linkIsContextBlade": true,
                "showIcon": true
              }
            },
            {
              "columnMatch": "subscriptionId",
              "formatter": 5
            },
            {
              "columnMatch": "Resource",
              "formatter": 5
            },
            {
              "columnMatch": "Details",
              "formatter": 7,
              "formatOptions": {
                "linkTarget": "CellDetails",
                "linkLabel": "üîç View Details",
                "linkIsContextBlade": true
              }
            }
          ],
          "rowLimit": 1000,
          "filter": true,
          "hierarchySettings": {
            "treeType": 1,
            "groupBy": [
              "subscriptionId"
            ],
            "expandTopLevel": true,
            "finalBy": "Resource"
          },
          "labelSettings": [
            {
              "columnId": "subscriptionId",
              "label": "Subscription"
            },
            {
              "columnId": "Resource",
              "label": "Resource Name"
            },
            {
              "columnId": "resourceGroup",
              "label": "Resource Group"
            },
            {
              "columnId": "location",
              "label": "Location"
            },
            {
              "columnId": "tags",
              "label": "Tags"
            }
          ]
        },
        "sortBy": [],
        "tileSettings": {
          "titleContent": {
            "columnMatch": "vmSize",
            "formatter": 1,
            "formatOptions": {
              "showIcon": true
            }
          },
          "leftContent": {
            "columnMatch": "Count",
            "formatter": 12,
            "formatOptions": {
              "palette": "auto",
              "showIcon": true
            },
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          },
          "showBorder": true
        },
        "graphSettings": {
          "type": 0,
          "topContent": {
            "columnMatch": "vmSize",
            "formatter": 1
          },
          "centerContent": {
            "columnMatch": "Count",
            "formatter": 1,
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          }
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "op"
        },
        {
          "parameterName": "selectedTab2",
          "comparison": "isEqualTo",
          "value": "ort"
        }
      ],
      "name": "query - Orphan Route Tables"
    },
    {
      "type": 1,
      "content": {
        "json": "## NoShow - End Route Tables\r\n\r\n## NoShow - Begin Load Balancers"
      },
      "conditionalVisibility": {
        "parameterName": "noshow",
        "comparison": "isEqualTo",
        "value": "noshow"
      },
      "name": "text - NoShow begin Load Balancers"
    },
    {
      "type": 1,
      "content": {
        "json": "# Orphan Load Balancers"
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "op"
        },
        {
          "parameterName": "selectedTab2",
          "comparison": "isEqualTo",
          "value": "olb"
        }
      ],
      "name": "text - Title Orphan Load Balancers"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "resources\r\n| where type == \"microsoft.network/loadbalancers\"\r\n| where properties.backendAddressPools == \"[]\"\r\n| summarize count(type)",
        "size": 4,
        "title": "Total",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscriptions}"
        ],
        "visualization": "tiles",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "$gen_group",
              "formatter": 13,
              "formatOptions": {
                "linkTarget": "Resource",
                "showIcon": true
              }
            },
            {
              "columnMatch": "id",
              "formatter": 5
            },
            {
              "columnMatch": "subscriptionId",
              "formatter": 5
            },
            {
              "columnMatch": "Details",
              "formatter": 7,
              "formatOptions": {
                "linkTarget": "CellDetails",
                "linkLabel": "üîç View Details",
                "linkIsContextBlade": true
              }
            }
          ],
          "rowLimit": 1000,
          "hierarchySettings": {
            "treeType": 1,
            "groupBy": [
              "subscriptionId"
            ],
            "expandTopLevel": true,
            "finalBy": "id"
          }
        },
        "sortBy": [],
        "tileSettings": {
          "titleContent": {
            "columnMatch": "count_type",
            "formatter": 12,
            "formatOptions": {
              "palette": "auto"
            }
          },
          "showBorder": true,
          "sortOrderField": 2,
          "size": "auto"
        },
        "graphSettings": {
          "type": 0,
          "topContent": {
            "columnMatch": "vmSize",
            "formatter": 1
          },
          "centerContent": {
            "columnMatch": "Count",
            "formatter": 1,
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          }
        },
        "textSettings": {
          "style": "bignumber"
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "op"
        },
        {
          "parameterName": "selectedTab2",
          "comparison": "isEqualTo",
          "value": "olb"
        }
      ],
      "customWidth": "15",
      "name": "query - Orphan Load Balancers count"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "resources\r\n| where type == \"microsoft.network/loadbalancers\"\r\n| where properties.backendAddressPools == \"[]\"\r\n| summarize count(type) by tostring(sku.name)",
        "size": 4,
        "title": "Count by Type",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscriptions}"
        ],
        "visualization": "piechart",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "$gen_group",
              "formatter": 13,
              "formatOptions": {
                "linkTarget": "Resource",
                "showIcon": true
              }
            },
            {
              "columnMatch": "id",
              "formatter": 5
            },
            {
              "columnMatch": "subscriptionId",
              "formatter": 5
            },
            {
              "columnMatch": "Details",
              "formatter": 7,
              "formatOptions": {
                "linkTarget": "CellDetails",
                "linkLabel": "üîç View Details",
                "linkIsContextBlade": true
              }
            }
          ],
          "rowLimit": 1000,
          "hierarchySettings": {
            "treeType": 1,
            "groupBy": [
              "subscriptionId"
            ],
            "expandTopLevel": true,
            "finalBy": "id"
          },
          "labelSettings": [
            {
              "columnId": "subscriptionId",
              "label": "Subscription"
            },
            {
              "columnId": "Resource",
              "label": "Resource Name"
            },
            {
              "columnId": "resourceGroup",
              "label": "Resource Group"
            },
            {
              "columnId": "location",
              "label": "Location"
            },
            {
              "columnId": "tags",
              "label": "Tags"
            }
          ]
        },
        "sortBy": [],
        "tileSettings": {
          "titleContent": {
            "columnMatch": "DiskType",
            "formatter": 1
          },
          "leftContent": {
            "columnMatch": "Count",
            "formatter": 12,
            "formatOptions": {
              "palette": "auto"
            },
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          },
          "showBorder": true
        },
        "graphSettings": {
          "type": 0,
          "topContent": {
            "columnMatch": "vmSize",
            "formatter": 1
          },
          "centerContent": {
            "columnMatch": "Count",
            "formatter": 1,
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          }
        },
        "chartSettings": {
          "showMetrics": false,
          "showLegend": true
        },
        "mapSettings": {
          "locInfo": "LatLong",
          "sizeSettings": "Count",
          "sizeAggregation": "Sum",
          "legendMetric": "Count",
          "legendAggregation": "Sum",
          "itemColorSettings": {
            "type": "heatmap",
            "colorAggregation": "Sum",
            "nodeColorField": "Count",
            "heatmapPalette": "greenRed"
          }
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "op"
        },
        {
          "parameterName": "selectedTab2",
          "comparison": "isEqualTo",
          "value": "olb"
        }
      ],
      "customWidth": "30",
      "name": "query - Orphan Load Balancers by Type"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "resources\r\n| where type == \"microsoft.network/loadbalancers\"\r\n| where properties.backendAddressPools == \"[]\"\r\n| summarize count(type) by location",
        "size": 4,
        "title": "Count by Location",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscriptions}"
        ],
        "visualization": "piechart",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "$gen_group",
              "formatter": 13,
              "formatOptions": {
                "linkTarget": "Resource",
                "showIcon": true
              }
            },
            {
              "columnMatch": "id",
              "formatter": 5
            },
            {
              "columnMatch": "subscriptionId",
              "formatter": 5
            },
            {
              "columnMatch": "Details",
              "formatter": 7,
              "formatOptions": {
                "linkTarget": "CellDetails",
                "linkLabel": "üîç View Details",
                "linkIsContextBlade": true
              }
            }
          ],
          "rowLimit": 1000,
          "hierarchySettings": {
            "treeType": 1,
            "groupBy": [
              "subscriptionId"
            ],
            "expandTopLevel": true,
            "finalBy": "id"
          },
          "labelSettings": [
            {
              "columnId": "subscriptionId",
              "label": "Subscription"
            },
            {
              "columnId": "Resource",
              "label": "Resource Name"
            },
            {
              "columnId": "resourceGroup",
              "label": "Resource Group"
            },
            {
              "columnId": "location",
              "label": "Location"
            },
            {
              "columnId": "tags",
              "label": "Tags"
            }
          ]
        },
        "sortBy": [],
        "tileSettings": {
          "titleContent": {
            "columnMatch": "DiskType",
            "formatter": 1
          },
          "leftContent": {
            "columnMatch": "Count",
            "formatter": 12,
            "formatOptions": {
              "palette": "auto"
            },
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          },
          "showBorder": true
        },
        "graphSettings": {
          "type": 0,
          "topContent": {
            "columnMatch": "vmSize",
            "formatter": 1
          },
          "centerContent": {
            "columnMatch": "Count",
            "formatter": 1,
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          }
        },
        "chartSettings": {
          "showMetrics": false,
          "showLegend": true
        },
        "mapSettings": {
          "locInfo": "LatLong",
          "sizeSettings": "Count",
          "sizeAggregation": "Sum",
          "legendMetric": "Count",
          "legendAggregation": "Sum",
          "itemColorSettings": {
            "type": "heatmap",
            "colorAggregation": "Sum",
            "nodeColorField": "Count",
            "heatmapPalette": "greenRed"
          }
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "op"
        },
        {
          "parameterName": "selectedTab2",
          "comparison": "isEqualTo",
          "value": "olb"
        }
      ],
      "customWidth": "30",
      "name": "query - Orphan Load Balancers by Location"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "resources\r\n| where type == \"microsoft.network/loadbalancers\"\r\n| where properties.backendAddressPools == \"[]\"\r\n| extend Details = pack_all()\r\n| project subscriptionId, Resource=id, resourceGroup, location, tostring(sku.name), tags, Details",
        "size": 3,
        "title": "Orphan Load Balancers",
        "noDataMessage": "No oprhan Load Balancers found!",
        "noDataMessageStyle": 3,
        "showExportToExcel": true,
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscriptions}"
        ],
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "$gen_group",
              "formatter": 13,
              "formatOptions": {
                "linkTarget": "Resource",
                "linkIsContextBlade": true,
                "showIcon": true
              }
            },
            {
              "columnMatch": "subscriptionId",
              "formatter": 5
            },
            {
              "columnMatch": "Resource",
              "formatter": 5
            },
            {
              "columnMatch": "Details",
              "formatter": 7,
              "formatOptions": {
                "linkTarget": "CellDetails",
                "linkLabel": "üîç View Details",
                "linkIsContextBlade": true
              }
            }
          ],
          "rowLimit": 1000,
          "filter": true,
          "hierarchySettings": {
            "treeType": 1,
            "groupBy": [
              "subscriptionId"
            ],
            "expandTopLevel": true,
            "finalBy": "Resource"
          },
          "labelSettings": [
            {
              "columnId": "subscriptionId",
              "label": "Subscription"
            },
            {
              "columnId": "Resource",
              "label": "Resource Name"
            },
            {
              "columnId": "resourceGroup",
              "label": "Resource Group"
            },
            {
              "columnId": "location",
              "label": "Location"
            },
            {
              "columnId": "sku_name",
              "label": "Type"
            },
            {
              "columnId": "tags",
              "label": "Tags"
            }
          ]
        },
        "sortBy": [],
        "tileSettings": {
          "titleContent": {
            "columnMatch": "vmSize",
            "formatter": 1,
            "formatOptions": {
              "showIcon": true
            }
          },
          "leftContent": {
            "columnMatch": "Count",
            "formatter": 12,
            "formatOptions": {
              "palette": "auto",
              "showIcon": true
            },
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          },
          "showBorder": true
        },
        "graphSettings": {
          "type": 0,
          "topContent": {
            "columnMatch": "vmSize",
            "formatter": 1
          },
          "centerContent": {
            "columnMatch": "Count",
            "formatter": 1,
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          }
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "op"
        },
        {
          "parameterName": "selectedTab2",
          "comparison": "isEqualTo",
          "value": "olb"
        }
      ],
      "name": "query - Orphan Load Balancers"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "{\"version\":\"Merge/1.0\",\"merges\":[{\"id\":\"623410a6-aa0b-46a7-b82b-58e017dc2267\",\"mergeType\":\"innerunique\",\"leftTable\":\"query - 180\",\"rightTable\":\"query - Orphan Load Balancers\",\"leftColumn\":\"ResourceId\",\"rightColumn\":\"Resource\"}],\"projectRename\":[{\"originalName\":\"[query - 180].PreTaxCost\",\"mergedName\":\"PreTaxCost\",\"fromId\":\"623410a6-aa0b-46a7-b82b-58e017dc2267\"},{\"originalName\":\"[query - 180].ResourceId\",\"mergedName\":\"ResourceId\",\"fromId\":\"623410a6-aa0b-46a7-b82b-58e017dc2267\"},{\"originalName\":\"[query - 180].Currency\",\"mergedName\":\"Currency\",\"fromId\":\"623410a6-aa0b-46a7-b82b-58e017dc2267\"},{\"originalName\":\"[query - Orphan Load Balancers].subscriptionId\",\"mergedName\":\"subscriptionId\",\"fromId\":\"623410a6-aa0b-46a7-b82b-58e017dc2267\"},{\"originalName\":\"[query - Orphan Load Balancers].Resource\",\"mergedName\":\"Resource\",\"fromId\":\"623410a6-aa0b-46a7-b82b-58e017dc2267\"},{\"originalName\":\"[query - Orphan Load Balancers].resourceGroup\",\"mergedName\":\"resourceGroup\",\"fromId\":\"623410a6-aa0b-46a7-b82b-58e017dc2267\"},{\"originalName\":\"[query - Orphan Load Balancers].location\",\"mergedName\":\"location\",\"fromId\":\"623410a6-aa0b-46a7-b82b-58e017dc2267\"},{\"originalName\":\"[query - Orphan Load Balancers].sku_name\",\"mergedName\":\"sku_name\",\"fromId\":\"623410a6-aa0b-46a7-b82b-58e017dc2267\"},{\"originalName\":\"[query - Orphan Load Balancers].tags\",\"mergedName\":\"tags\",\"fromId\":\"623410a6-aa0b-46a7-b82b-58e017dc2267\"},{\"originalName\":\"[query - Orphan Load Balancers].Details\",\"mergedName\":\"Details\",\"fromId\":\"623410a6-aa0b-46a7-b82b-58e017dc2267\"}]}",
        "size": 0,
        "title": "Orphan Load Balancers Cost",
        "noDataMessage": "No Orphan Load Balancers found!",
        "noDataMessageStyle": 3,
        "showExportToExcel": true,
        "queryType": 7
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "op"
        },
        {
          "parameterName": "selectedTab2",
          "comparison": "isEqualTo",
          "value": "olb"
        }
      ],
      "name": "query - Orphan Load Balancers Cost"
    },
    {
      "type": 1,
      "content": {
        "json": "## NoShow - End Load Balancers\r\n\r\n## NoShow - Begin App Service Plans"
      },
      "conditionalVisibility": {
        "parameterName": "noshow",
        "comparison": "isEqualTo",
        "value": "noshow"
      },
      "name": "text - NoShow begin App Service Plans"
    },
    {
      "type": 1,
      "content": {
        "json": "# Orphan App Service Plans"
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "op"
        },
        {
          "parameterName": "selectedTab2",
          "comparison": "isEqualTo",
          "value": "oasp"
        }
      ],
      "name": "text - Title Orphan App Service Plans"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "resources\r\n| where type =~ \"microsoft.web/serverfarms\"\r\n| where properties.numberOfSites == 0\r\n| summarize count(type)",
        "size": 4,
        "title": "Total",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscriptions}"
        ],
        "visualization": "tiles",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "$gen_group",
              "formatter": 13,
              "formatOptions": {
                "linkTarget": "Resource",
                "showIcon": true
              }
            },
            {
              "columnMatch": "id",
              "formatter": 5
            },
            {
              "columnMatch": "subscriptionId",
              "formatter": 5
            },
            {
              "columnMatch": "Details",
              "formatter": 7,
              "formatOptions": {
                "linkTarget": "CellDetails",
                "linkLabel": "üîç View Details",
                "linkIsContextBlade": true
              }
            }
          ],
          "rowLimit": 1000,
          "hierarchySettings": {
            "treeType": 1,
            "groupBy": [
              "subscriptionId"
            ],
            "expandTopLevel": true,
            "finalBy": "id"
          }
        },
        "sortBy": [],
        "tileSettings": {
          "titleContent": {
            "columnMatch": "count_type",
            "formatter": 12,
            "formatOptions": {
              "palette": "auto"
            }
          },
          "showBorder": true,
          "sortOrderField": 2,
          "size": "auto"
        },
        "graphSettings": {
          "type": 0,
          "topContent": {
            "columnMatch": "vmSize",
            "formatter": 1
          },
          "centerContent": {
            "columnMatch": "Count",
            "formatter": 1,
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          }
        },
        "textSettings": {
          "style": "bignumber"
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "op"
        },
        {
          "parameterName": "selectedTab2",
          "comparison": "isEqualTo",
          "value": "oasp"
        }
      ],
      "customWidth": "15",
      "name": "query - Orphan App Service Plan count"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "resources\r\n| where type =~ \"microsoft.web/serverfarms\"\r\n| where properties.numberOfSites == 0\r\n| summarize count(type) by tostring(sku.name)",
        "size": 4,
        "title": "Count by sku",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscriptions}"
        ],
        "visualization": "piechart",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "$gen_group",
              "formatter": 13,
              "formatOptions": {
                "linkTarget": "Resource",
                "showIcon": true
              }
            },
            {
              "columnMatch": "id",
              "formatter": 5
            },
            {
              "columnMatch": "subscriptionId",
              "formatter": 5
            },
            {
              "columnMatch": "Details",
              "formatter": 7,
              "formatOptions": {
                "linkTarget": "CellDetails",
                "linkLabel": "üîç View Details",
                "linkIsContextBlade": true
              }
            }
          ],
          "rowLimit": 1000,
          "hierarchySettings": {
            "treeType": 1,
            "groupBy": [
              "subscriptionId"
            ],
            "expandTopLevel": true,
            "finalBy": "id"
          },
          "labelSettings": [
            {
              "columnId": "subscriptionId",
              "label": "Subscription"
            },
            {
              "columnId": "Resource",
              "label": "Resource Name"
            },
            {
              "columnId": "resourceGroup",
              "label": "Resource Group"
            },
            {
              "columnId": "location",
              "label": "Location"
            },
            {
              "columnId": "tags",
              "label": "Tags"
            }
          ]
        },
        "sortBy": [],
        "tileSettings": {
          "titleContent": {
            "columnMatch": "DiskType",
            "formatter": 1
          },
          "leftContent": {
            "columnMatch": "Count",
            "formatter": 12,
            "formatOptions": {
              "palette": "auto"
            },
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          },
          "showBorder": true
        },
        "graphSettings": {
          "type": 0,
          "topContent": {
            "columnMatch": "vmSize",
            "formatter": 1
          },
          "centerContent": {
            "columnMatch": "Count",
            "formatter": 1,
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          }
        },
        "chartSettings": {
          "showMetrics": false,
          "showLegend": true
        },
        "mapSettings": {
          "locInfo": "LatLong",
          "sizeSettings": "Count",
          "sizeAggregation": "Sum",
          "legendMetric": "Count",
          "legendAggregation": "Sum",
          "itemColorSettings": {
            "type": "heatmap",
            "colorAggregation": "Sum",
            "nodeColorField": "Count",
            "heatmapPalette": "greenRed"
          }
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "op"
        },
        {
          "parameterName": "selectedTab2",
          "comparison": "isEqualTo",
          "value": "oasp"
        }
      ],
      "customWidth": "25",
      "name": "query - Orphan App Service Plan by sku"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "resources\r\n| where type =~ \"microsoft.web/serverfarms\"\r\n| where properties.numberOfSites == 0\r\n| summarize count(type) by tostring(sku.tier)",
        "size": 4,
        "title": "Count by Tier",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscriptions}"
        ],
        "visualization": "piechart",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "$gen_group",
              "formatter": 13,
              "formatOptions": {
                "linkTarget": "Resource",
                "showIcon": true
              }
            },
            {
              "columnMatch": "id",
              "formatter": 5
            },
            {
              "columnMatch": "subscriptionId",
              "formatter": 5
            },
            {
              "columnMatch": "Details",
              "formatter": 7,
              "formatOptions": {
                "linkTarget": "CellDetails",
                "linkLabel": "üîç View Details",
                "linkIsContextBlade": true
              }
            }
          ],
          "rowLimit": 1000,
          "hierarchySettings": {
            "treeType": 1,
            "groupBy": [
              "subscriptionId"
            ],
            "expandTopLevel": true,
            "finalBy": "id"
          },
          "labelSettings": [
            {
              "columnId": "subscriptionId",
              "label": "Subscription"
            },
            {
              "columnId": "Resource",
              "label": "Resource Name"
            },
            {
              "columnId": "resourceGroup",
              "label": "Resource Group"
            },
            {
              "columnId": "location",
              "label": "Location"
            },
            {
              "columnId": "tags",
              "label": "Tags"
            }
          ]
        },
        "sortBy": [],
        "tileSettings": {
          "titleContent": {
            "columnMatch": "DiskType",
            "formatter": 1
          },
          "leftContent": {
            "columnMatch": "Count",
            "formatter": 12,
            "formatOptions": {
              "palette": "auto"
            },
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          },
          "showBorder": true
        },
        "graphSettings": {
          "type": 0,
          "topContent": {
            "columnMatch": "vmSize",
            "formatter": 1
          },
          "centerContent": {
            "columnMatch": "Count",
            "formatter": 1,
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          }
        },
        "chartSettings": {
          "showMetrics": false,
          "showLegend": true
        },
        "mapSettings": {
          "locInfo": "LatLong",
          "sizeSettings": "Count",
          "sizeAggregation": "Sum",
          "legendMetric": "Count",
          "legendAggregation": "Sum",
          "itemColorSettings": {
            "type": "heatmap",
            "colorAggregation": "Sum",
            "nodeColorField": "Count",
            "heatmapPalette": "greenRed"
          }
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "op"
        },
        {
          "parameterName": "selectedTab2",
          "comparison": "isEqualTo",
          "value": "oasp"
        }
      ],
      "customWidth": "25",
      "name": "query - Orphan App Service Plan by Tier"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "resources\r\n| where type =~ \"microsoft.web/serverfarms\"\r\n| where properties.numberOfSites == 0\r\n| summarize count(type) by location",
        "size": 4,
        "title": "Count by Location",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscriptions}"
        ],
        "visualization": "piechart",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "$gen_group",
              "formatter": 13,
              "formatOptions": {
                "linkTarget": "Resource",
                "showIcon": true
              }
            },
            {
              "columnMatch": "id",
              "formatter": 5
            },
            {
              "columnMatch": "subscriptionId",
              "formatter": 5
            },
            {
              "columnMatch": "Details",
              "formatter": 7,
              "formatOptions": {
                "linkTarget": "CellDetails",
                "linkLabel": "üîç View Details",
                "linkIsContextBlade": true
              }
            }
          ],
          "rowLimit": 1000,
          "hierarchySettings": {
            "treeType": 1,
            "groupBy": [
              "subscriptionId"
            ],
            "expandTopLevel": true,
            "finalBy": "id"
          },
          "labelSettings": [
            {
              "columnId": "subscriptionId",
              "label": "Subscription"
            },
            {
              "columnId": "Resource",
              "label": "Resource Name"
            },
            {
              "columnId": "resourceGroup",
              "label": "Resource Group"
            },
            {
              "columnId": "location",
              "label": "Location"
            },
            {
              "columnId": "tags",
              "label": "Tags"
            }
          ]
        },
        "sortBy": [],
        "tileSettings": {
          "titleContent": {
            "columnMatch": "DiskType",
            "formatter": 1
          },
          "leftContent": {
            "columnMatch": "Count",
            "formatter": 12,
            "formatOptions": {
              "palette": "auto"
            },
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          },
          "showBorder": true
        },
        "graphSettings": {
          "type": 0,
          "topContent": {
            "columnMatch": "vmSize",
            "formatter": 1
          },
          "centerContent": {
            "columnMatch": "Count",
            "formatter": 1,
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          }
        },
        "chartSettings": {
          "showMetrics": false,
          "showLegend": true
        },
        "mapSettings": {
          "locInfo": "LatLong",
          "sizeSettings": "Count",
          "sizeAggregation": "Sum",
          "legendMetric": "Count",
          "legendAggregation": "Sum",
          "itemColorSettings": {
            "type": "heatmap",
            "colorAggregation": "Sum",
            "nodeColorField": "Count",
            "heatmapPalette": "greenRed"
          }
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "op"
        },
        {
          "parameterName": "selectedTab2",
          "comparison": "isEqualTo",
          "value": "oasp"
        }
      ],
      "customWidth": "30",
      "name": "query - Orphan App Service Plan by Location"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "resources\r\n| where type =~ \"microsoft.web/serverfarms\"\r\n| where properties.numberOfSites == 0\r\n| extend Details = pack_all()\r\n| project Resource=id, resourceGroup, location, subscriptionId, Sku=sku.name, Tier=sku.tier, tags ,Details",
        "size": 3,
        "title": "Orphan App Service Plan",
        "noDataMessage": "No oprhan App Service Plans found!",
        "noDataMessageStyle": 3,
        "showExportToExcel": true,
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscriptions}"
        ],
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "$gen_group",
              "formatter": 13,
              "formatOptions": {
                "linkTarget": "Resource",
                "linkIsContextBlade": true,
                "showIcon": true
              }
            },
            {
              "columnMatch": "subscriptionId",
              "formatter": 5
            },
            {
              "columnMatch": "Resource",
              "formatter": 5
            },
            {
              "columnMatch": "Details",
              "formatter": 7,
              "formatOptions": {
                "linkTarget": "CellDetails",
                "linkLabel": "üîç View Details",
                "linkIsContextBlade": true
              }
            }
          ],
          "rowLimit": 1000,
          "filter": true,
          "hierarchySettings": {
            "treeType": 1,
            "groupBy": [
              "subscriptionId"
            ],
            "expandTopLevel": true,
            "finalBy": "Resource"
          },
          "labelSettings": [
            {
              "columnId": "resourceGroup",
              "label": "Resource Group"
            },
            {
              "columnId": "location",
              "label": "Location"
            },
            {
              "columnId": "subscriptionId",
              "label": "Subscription"
            },
            {
              "columnId": "tags",
              "label": "Tags"
            }
          ]
        },
        "sortBy": [],
        "tileSettings": {
          "titleContent": {
            "columnMatch": "vmSize",
            "formatter": 1,
            "formatOptions": {
              "showIcon": true
            }
          },
          "leftContent": {
            "columnMatch": "Count",
            "formatter": 12,
            "formatOptions": {
              "palette": "auto",
              "showIcon": true
            },
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          },
          "showBorder": true
        },
        "graphSettings": {
          "type": 0,
          "topContent": {
            "columnMatch": "vmSize",
            "formatter": 1
          },
          "centerContent": {
            "columnMatch": "Count",
            "formatter": 1,
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          }
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "op"
        },
        {
          "parameterName": "selectedTab2",
          "comparison": "isEqualTo",
          "value": "oasp"
        }
      ],
      "name": "query - Orphan App Service Plans"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "{\"version\":\"Merge/1.0\",\"merges\":[{\"id\":\"623410a6-aa0b-46a7-b82b-58e017dc227a\",\"mergeType\":\"innerunique\",\"leftTable\":\"query - 180\",\"rightTable\":\"query - Orphan App Service Plans\",\"leftColumn\":\"ResourceId\",\"rightColumn\":\"Resource\"}],\"projectRename\":[{\"originalName\":\"[query - 180].PreTaxCost\",\"mergedName\":\"PreTaxCost\",\"fromId\":\"623410a6-aa0b-46a7-b82b-58e017dc227a\"},{\"originalName\":\"[query - 180].ResourceId\",\"mergedName\":\"ResourceId\",\"fromId\":\"623410a6-aa0b-46a7-b82b-58e017dc227a\"},{\"originalName\":\"[query - 180].Currency\",\"mergedName\":\"Currency\",\"fromId\":\"623410a6-aa0b-46a7-b82b-58e017dc227a\"},{\"originalName\":\"[query - Orphan App Service Plans].Resource\",\"mergedName\":\"Resource\",\"fromId\":\"623410a6-aa0b-46a7-b82b-58e017dc227a\"},{\"originalName\":\"[query - Orphan App Service Plans].resourceGroup\",\"mergedName\":\"resourceGroup\",\"fromId\":\"623410a6-aa0b-46a7-b82b-58e017dc227a\"},{\"originalName\":\"[query - Orphan App Service Plans].location\",\"mergedName\":\"location\",\"fromId\":\"623410a6-aa0b-46a7-b82b-58e017dc227a\"},{\"originalName\":\"[query - Orphan App Service Plans].subscriptionId\",\"mergedName\":\"subscriptionId\",\"fromId\":\"623410a6-aa0b-46a7-b82b-58e017dc227a\"},{\"originalName\":\"[query - Orphan App Service Plans].Sku\",\"mergedName\":\"Sku\",\"fromId\":\"623410a6-aa0b-46a7-b82b-58e017dc227a\"},{\"originalName\":\"[query - Orphan App Service Plans].Tier\",\"mergedName\":\"Tier\",\"fromId\":\"623410a6-aa0b-46a7-b82b-58e017dc227a\"},{\"originalName\":\"[query - Orphan App Service Plans].tags\",\"mergedName\":\"tags\",\"fromId\":\"623410a6-aa0b-46a7-b82b-58e017dc227a\"},{\"originalName\":\"[query - Orphan App Service Plans].Details\",\"mergedName\":\"Details\",\"fromId\":\"623410a6-aa0b-46a7-b82b-58e017dc227a\"}]}",
        "size": 0,
        "title": "Orphan App Service Plans Cost",
        "noDataMessage": "No Orphan App Service Plans found!",
        "noDataMessageStyle": 3,
        "showExportToExcel": true,
        "queryType": 7
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "op"
        },
        {
          "parameterName": "selectedTab2",
          "comparison": "isEqualTo",
          "value": "oasp"
        }
      ],
      "name": "query - Orphan App Service Plans Cost"
    },
    {
      "type": 1,
      "content": {
        "json": "## NoShow - End App Service Plans\r\n\r\n## NoShow - Begin Front Door WAF Policy"
      },
      "conditionalVisibility": {
        "parameterName": "noshow",
        "comparison": "isEqualTo",
        "value": "noshow"
      },
      "name": "text - NoShow begin Front Door WAF Policy"
    },
    {
      "type": 1,
      "content": {
        "json": "# Orphan Front Door WAF Policy"
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "op"
        },
        {
          "parameterName": "selectedTab2",
          "comparison": "isEqualTo",
          "value": "ofd"
        }
      ],
      "name": "text - Title Orphan Front Door WAF Policy"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "resources\r\n| where type == \"microsoft.network/frontdoorwebapplicationfirewallpolicies\"\r\n| where properties.frontendEndpointLinks== \"[]\" and properties.securityPolicyLinks == \"[]\"\r\n| summarize count(type)",
        "size": 4,
        "title": "Total",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscriptions}"
        ],
        "visualization": "tiles",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "$gen_group",
              "formatter": 13,
              "formatOptions": {
                "linkTarget": "Resource",
                "showIcon": true
              }
            },
            {
              "columnMatch": "id",
              "formatter": 5
            },
            {
              "columnMatch": "subscriptionId",
              "formatter": 5
            },
            {
              "columnMatch": "Details",
              "formatter": 7,
              "formatOptions": {
                "linkTarget": "CellDetails",
                "linkLabel": "üîç View Details",
                "linkIsContextBlade": true
              }
            }
          ],
          "rowLimit": 1000,
          "hierarchySettings": {
            "treeType": 1,
            "groupBy": [
              "subscriptionId"
            ],
            "expandTopLevel": true,
            "finalBy": "id"
          }
        },
        "sortBy": [],
        "tileSettings": {
          "titleContent": {
            "columnMatch": "count_type",
            "formatter": 12,
            "formatOptions": {
              "palette": "auto"
            }
          },
          "showBorder": true,
          "sortOrderField": 2,
          "size": "auto"
        },
        "graphSettings": {
          "type": 0,
          "topContent": {
            "columnMatch": "vmSize",
            "formatter": 1
          },
          "centerContent": {
            "columnMatch": "Count",
            "formatter": 1,
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          }
        },
        "textSettings": {
          "style": "bignumber"
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "op"
        },
        {
          "parameterName": "selectedTab2",
          "comparison": "isEqualTo",
          "value": "ofd"
        }
      ],
      "customWidth": "15",
      "name": "query - Orphan Front Door WAF Policy count"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "resources\r\n| where type == \"microsoft.network/frontdoorwebapplicationfirewallpolicies\"\r\n| where properties.frontendEndpointLinks== \"[]\" and properties.securityPolicyLinks == \"[]\"\r\n| summarize count(type) by tostring(sku.name)",
        "size": 4,
        "title": "Count by sku",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscriptions}"
        ],
        "visualization": "piechart",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "$gen_group",
              "formatter": 13,
              "formatOptions": {
                "linkTarget": "Resource",
                "showIcon": true
              }
            },
            {
              "columnMatch": "id",
              "formatter": 5
            },
            {
              "columnMatch": "subscriptionId",
              "formatter": 5
            },
            {
              "columnMatch": "Details",
              "formatter": 7,
              "formatOptions": {
                "linkTarget": "CellDetails",
                "linkLabel": "üîç View Details",
                "linkIsContextBlade": true
              }
            }
          ],
          "rowLimit": 1000,
          "hierarchySettings": {
            "treeType": 1,
            "groupBy": [
              "subscriptionId"
            ],
            "expandTopLevel": true,
            "finalBy": "id"
          },
          "labelSettings": [
            {
              "columnId": "subscriptionId",
              "label": "Subscription"
            },
            {
              "columnId": "Resource",
              "label": "Resource Name"
            },
            {
              "columnId": "resourceGroup",
              "label": "Resource Group"
            },
            {
              "columnId": "location",
              "label": "Location"
            },
            {
              "columnId": "tags",
              "label": "Tags"
            }
          ]
        },
        "sortBy": [],
        "tileSettings": {
          "titleContent": {
            "columnMatch": "DiskType",
            "formatter": 1
          },
          "leftContent": {
            "columnMatch": "Count",
            "formatter": 12,
            "formatOptions": {
              "palette": "auto"
            },
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          },
          "showBorder": true
        },
        "graphSettings": {
          "type": 0,
          "topContent": {
            "columnMatch": "vmSize",
            "formatter": 1
          },
          "centerContent": {
            "columnMatch": "Count",
            "formatter": 1,
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          }
        },
        "chartSettings": {
          "showMetrics": false,
          "showLegend": true
        },
        "mapSettings": {
          "locInfo": "LatLong",
          "sizeSettings": "Count",
          "sizeAggregation": "Sum",
          "legendMetric": "Count",
          "legendAggregation": "Sum",
          "itemColorSettings": {
            "type": "heatmap",
            "colorAggregation": "Sum",
            "nodeColorField": "Count",
            "heatmapPalette": "greenRed"
          }
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "op"
        },
        {
          "parameterName": "selectedTab2",
          "comparison": "isEqualTo",
          "value": "ofd"
        }
      ],
      "customWidth": "25",
      "name": "query - Orphan Front Door WAF Policy by sku"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "resources\r\n| where type == \"microsoft.network/frontdoorwebapplicationfirewallpolicies\"\r\n| where properties.frontendEndpointLinks== \"[]\" and properties.securityPolicyLinks == \"[]\"\r\n| extend Details = pack_all()\r\n| project Resource=id, resourceGroup, location, subscriptionId, Sku=sku.name, tags, Details",
        "size": 3,
        "title": "Orphan Front Door WAF Policy",
        "noDataMessage": "No oprhan Front Door WAF Policy found",
        "showExportToExcel": true,
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscriptions}"
        ],
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "$gen_group",
              "formatter": 13,
              "formatOptions": {
                "linkTarget": "Resource",
                "linkIsContextBlade": true,
                "showIcon": true
              }
            },
            {
              "columnMatch": "subscriptionId",
              "formatter": 5
            },
            {
              "columnMatch": "Resource",
              "formatter": 5
            },
            {
              "columnMatch": "Details",
              "formatter": 7,
              "formatOptions": {
                "linkTarget": "CellDetails",
                "linkLabel": "üîç View Details",
                "linkIsContextBlade": true
              }
            }
          ],
          "rowLimit": 1000,
          "filter": true,
          "hierarchySettings": {
            "treeType": 1,
            "groupBy": [
              "subscriptionId"
            ],
            "expandTopLevel": true,
            "finalBy": "Resource"
          },
          "labelSettings": [
            {
              "columnId": "resourceGroup",
              "label": "Resource Group"
            },
            {
              "columnId": "location",
              "label": "Location"
            },
            {
              "columnId": "subscriptionId",
              "label": "Subscription"
            },
            {
              "columnId": "tags",
              "label": "Tags"
            }
          ]
        },
        "sortBy": [],
        "tileSettings": {
          "titleContent": {
            "columnMatch": "vmSize",
            "formatter": 1,
            "formatOptions": {
              "showIcon": true
            }
          },
          "leftContent": {
            "columnMatch": "Count",
            "formatter": 12,
            "formatOptions": {
              "palette": "auto",
              "showIcon": true
            },
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          },
          "showBorder": true
        },
        "graphSettings": {
          "type": 0,
          "topContent": {
            "columnMatch": "vmSize",
            "formatter": 1
          },
          "centerContent": {
            "columnMatch": "Count",
            "formatter": 1,
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          }
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "op"
        },
        {
          "parameterName": "selectedTab2",
          "comparison": "isEqualTo",
          "value": "ofd"
        }
      ],
      "name": "query - Orphan Front Door WAF Policy"
    },
    {
      "type": 1,
      "content": {
        "json": "## NoShow - End Front Door WAF Policy\r\n\r\n## NoShow - Begin Traffic Manager Profiles"
      },
      "conditionalVisibility": {
        "parameterName": "noshow",
        "comparison": "isEqualTo",
        "value": "noshow"
      },
      "name": "text - NoShow begin Traffic Manager Profiles"
    },
    {
      "type": 1,
      "content": {
        "json": "# Orphan Traffic Manager"
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "op"
        },
        {
          "parameterName": "selectedTab2",
          "comparison": "isEqualTo",
          "value": "otm"
        }
      ],
      "name": "text - Title Orphan Traffic Manager Profiles"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "resources\r\n| where type == \"microsoft.network/trafficmanagerprofiles\"\r\n| where properties.endpoints == \"[]\"\r\n| summarize count(type)",
        "size": 4,
        "title": "Total",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscriptions}"
        ],
        "visualization": "tiles",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "$gen_group",
              "formatter": 13,
              "formatOptions": {
                "linkTarget": "Resource",
                "showIcon": true
              }
            },
            {
              "columnMatch": "id",
              "formatter": 5
            },
            {
              "columnMatch": "subscriptionId",
              "formatter": 5
            },
            {
              "columnMatch": "Details",
              "formatter": 7,
              "formatOptions": {
                "linkTarget": "CellDetails",
                "linkLabel": "üîç View Details",
                "linkIsContextBlade": true
              }
            }
          ],
          "rowLimit": 1000,
          "hierarchySettings": {
            "treeType": 1,
            "groupBy": [
              "subscriptionId"
            ],
            "expandTopLevel": true,
            "finalBy": "id"
          }
        },
        "sortBy": [],
        "tileSettings": {
          "titleContent": {
            "columnMatch": "count_type",
            "formatter": 12,
            "formatOptions": {
              "palette": "auto"
            }
          },
          "showBorder": true,
          "sortOrderField": 2,
          "size": "auto"
        },
        "graphSettings": {
          "type": 0,
          "topContent": {
            "columnMatch": "vmSize",
            "formatter": 1
          },
          "centerContent": {
            "columnMatch": "Count",
            "formatter": 1,
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          }
        },
        "textSettings": {
          "style": "bignumber"
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "op"
        },
        {
          "parameterName": "selectedTab2",
          "comparison": "isEqualTo",
          "value": "otm"
        }
      ],
      "customWidth": "15",
      "name": "query - Orphan Traffic Manager Profiles"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "resources\r\n| where type == \"microsoft.network/trafficmanagerprofiles\"\r\n| where properties.endpoints == \"[]\"\r\n| extend Details = pack_all()\r\n| project Resource=id, resourceGroup, location, subscriptionId, tags, Details",
        "size": 3,
        "title": "Orphan Traffic Manager Profiles",
        "noDataMessage": "No oprhan Traffic Manager Profiles found",
        "showExportToExcel": true,
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscriptions}"
        ],
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "$gen_group",
              "formatter": 13,
              "formatOptions": {
                "linkTarget": "Resource",
                "linkIsContextBlade": true,
                "showIcon": true
              }
            },
            {
              "columnMatch": "subscriptionId",
              "formatter": 5
            },
            {
              "columnMatch": "Resource",
              "formatter": 5
            },
            {
              "columnMatch": "Details",
              "formatter": 7,
              "formatOptions": {
                "linkTarget": "CellDetails",
                "linkLabel": "üîç View Details",
                "linkIsContextBlade": true
              }
            }
          ],
          "rowLimit": 1000,
          "filter": true,
          "hierarchySettings": {
            "treeType": 1,
            "groupBy": [
              "subscriptionId"
            ],
            "expandTopLevel": true,
            "finalBy": "Resource"
          },
          "labelSettings": [
            {
              "columnId": "resourceGroup",
              "label": "Resource Group"
            },
            {
              "columnId": "location",
              "label": "Location"
            },
            {
              "columnId": "subscriptionId",
              "label": "Subscription"
            },
            {
              "columnId": "tags",
              "label": "Tags"
            }
          ]
        },
        "sortBy": [],
        "tileSettings": {
          "titleContent": {
            "columnMatch": "vmSize",
            "formatter": 1,
            "formatOptions": {
              "showIcon": true
            }
          },
          "leftContent": {
            "columnMatch": "Count",
            "formatter": 12,
            "formatOptions": {
              "palette": "auto",
              "showIcon": true
            },
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          },
          "showBorder": true
        },
        "graphSettings": {
          "type": 0,
          "topContent": {
            "columnMatch": "vmSize",
            "formatter": 1
          },
          "centerContent": {
            "columnMatch": "Count",
            "formatter": 1,
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          }
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "op"
        },
        {
          "parameterName": "selectedTab2",
          "comparison": "isEqualTo",
          "value": "otm"
        }
      ],
      "name": "query - Orphan Traffic Manager Profiles"
    },
    {
      "type": 1,
      "content": {
        "json": "# Old Snapshot"
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "op"
        },
        {
          "parameterName": "selectedTab2",
          "comparison": "isEqualTo",
          "value": "osnap"
        }
      ],
      "name": "text - Title Orphan Traffic Manager Profiles - Copy"
    },
    {
      "type": 11,
      "content": {
        "version": "LinkItem/1.0",
        "style": "paragraph",
        "links": [
          {
            "id": "1cc6d6f4-f84c-45bc-a0bd-1f952d56bd37",
            "cellValue": "selectedTab3",
            "linkTarget": "parameter",
            "linkLabel": ">30 Days",
            "subTarget": "30days",
            "preText": "",
            "style": "primary"
          },
          {
            "id": "d7b79f3c-eb84-45a6-97c7-34b03ed165d9",
            "cellValue": "selectedTab3",
            "linkTarget": "parameter",
            "linkLabel": ">90 Days",
            "subTarget": "90days",
            "preText": "",
            "style": "primary"
          }
        ]
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "op"
        },
        {
          "parameterName": "selectedTab2",
          "comparison": "isEqualTo",
          "value": "osnap"
        }
      ],
      "name": "links - 160"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "resources\r\n|¬†extend¬†timeCreated¬†=¬†todatetime(properties.['timeCreated'])\r\n|¬†extend¬†diff¬†=¬†tolong(format_timespan(now()-timeCreated,¬†'ddd'))\r\n|¬†where¬†type¬†=~¬†'Microsoft.Compute/snapshots'¬†and¬†diff¬†>¬†30\r\n|¬†project¬†id,¬†name,¬†subscriptionId,¬†resourceGroup,¬†timeCreated,¬†diff,sku,properties,tostring(properties.diskSizeGB)¬†",
        "size": 0,
        "title": "Snapshot more than 30 days",
        "showExportToExcel": true,
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "value::all"
        ],
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "name",
              "formatter": 5
            },
            {
              "columnMatch": "timeCreated",
              "formatter": 5
            },
            {
              "columnMatch": "properties",
              "formatter": 5
            }
          ],
          "rowLimit": 10000,
          "labelSettings": [
            {
              "columnId": "id",
              "label": "Snapshot Name"
            },
            {
              "columnId": "subscriptionId",
              "label": "Subscription ID"
            },
            {
              "columnId": "resourceGroup",
              "label": "Resource Group"
            },
            {
              "columnId": "diff",
              "label": "Snapshot Age (Days)"
            },
            {
              "columnId": "properties_diskSizeGB",
              "label": "Disk Size (GB)"
            }
          ]
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "op"
        },
        {
          "parameterName": "selectedTab2",
          "comparison": "isEqualTo",
          "value": "osnap"
        },
        {
          "parameterName": "selectedTab3",
          "comparison": "isEqualTo",
          "value": "30days"
        }
      ],
      "name": "query - 161 - Copy"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "{\"version\":\"Merge/1.0\",\"merges\":[{\"id\":\"372a8ba6-f262-4718-9425-78418bc07222\",\"mergeType\":\"innerunique\",\"leftTable\":\"query - 180\",\"rightTable\":\"query - 161 - Copy\",\"leftColumn\":\"ResourceId\",\"rightColumn\":\"id\"}],\"projectRename\":[{\"originalName\":\"[query - 180].PreTaxCost\",\"mergedName\":\"PreTaxCost\",\"fromId\":\"372a8ba6-f262-4718-9425-78418bc07222\"},{\"originalName\":\"[query - 180].ResourceId\",\"mergedName\":\"ResourceId\",\"fromId\":\"372a8ba6-f262-4718-9425-78418bc07222\"},{\"originalName\":\"[query - 180].Currency\",\"mergedName\":\"Currency\",\"fromId\":\"372a8ba6-f262-4718-9425-78418bc07222\"},{\"originalName\":\"[query - 161 - Copy].id\",\"mergedName\":\"id\",\"fromId\":\"372a8ba6-f262-4718-9425-78418bc07222\"},{\"originalName\":\"[query - 161 - Copy].name\",\"mergedName\":\"name\",\"fromId\":\"372a8ba6-f262-4718-9425-78418bc07222\"},{\"originalName\":\"[query - 161 - Copy].subscriptionId\",\"mergedName\":\"subscriptionId\",\"fromId\":\"372a8ba6-f262-4718-9425-78418bc07222\"},{\"originalName\":\"[query - 161 - Copy].resourceGroup\",\"mergedName\":\"resourceGroup\",\"fromId\":\"372a8ba6-f262-4718-9425-78418bc07222\"},{\"originalName\":\"[query - 161 - Copy].timeCreated\",\"mergedName\":\"timeCreated\",\"fromId\":\"372a8ba6-f262-4718-9425-78418bc07222\"},{\"originalName\":\"[query - 161 - Copy].diff\",\"mergedName\":\"diff\",\"fromId\":\"372a8ba6-f262-4718-9425-78418bc07222\"},{\"originalName\":\"[query - 161 - Copy].sku\",\"mergedName\":\"sku\",\"fromId\":\"372a8ba6-f262-4718-9425-78418bc07222\"},{\"originalName\":\"[query - 161 - Copy].properties\",\"mergedName\":\"properties\",\"fromId\":\"372a8ba6-f262-4718-9425-78418bc07222\"},{\"originalName\":\"[query - 161 - Copy].properties_diskSizeGB\",\"mergedName\":\"properties_diskSizeGB\",\"fromId\":\"372a8ba6-f262-4718-9425-78418bc07222\"}]}",
        "size": 0,
        "title": "Cost of Snapshot more than 30 days",
        "noDataMessage": "No Snapshot found which is more than 30 days",
        "noDataMessageStyle": 3,
        "showExportToExcel": true,
        "queryType": 7,
        "gridSettings": {
          "rowLimit": 10000
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "op"
        },
        {
          "parameterName": "selectedTab2",
          "comparison": "isEqualTo",
          "value": "osnap"
        },
        {
          "parameterName": "selectedTab3",
          "comparison": "isEqualTo",
          "value": "30days"
        }
      ],
      "name": "query - Cost of Snapshot more than 30 days"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "resources\r\n|¬†extend¬†timeCreated¬†=¬†todatetime(properties.['timeCreated'])\r\n|¬†extend¬†diff¬†=¬†tolong(format_timespan(now()-timeCreated,¬†'ddd'))\r\n|¬†where¬†type¬†=~¬†'Microsoft.Compute/snapshots'¬†and¬†diff¬†>¬†90\r\n|¬†project¬†id,¬†name,¬†subscriptionId,¬†resourceGroup,¬†timeCreated,¬†diff,sku,properties,tostring(properties.diskSizeGB)¬†",
        "size": 0,
        "title": "Snapshot more than 90 days",
        "showExportToExcel": true,
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "value::all"
        ],
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "name",
              "formatter": 5
            },
            {
              "columnMatch": "timeCreated",
              "formatter": 5
            },
            {
              "columnMatch": "properties",
              "formatter": 5
            }
          ],
          "rowLimit": 300,
          "labelSettings": [
            {
              "columnId": "id",
              "label": "Snapshot Name"
            },
            {
              "columnId": "subscriptionId",
              "label": "Subscription ID"
            },
            {
              "columnId": "resourceGroup",
              "label": "Resource Group"
            },
            {
              "columnId": "diff",
              "label": "Shanpshot Age (Days)"
            },
            {
              "columnId": "properties_diskSizeGB",
              "label": "Disk Size (GB)"
            }
          ]
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "op"
        },
        {
          "parameterName": "selectedTab2",
          "comparison": "isEqualTo",
          "value": "osnap"
        },
        {
          "parameterName": "selectedTab3",
          "comparison": "isEqualTo",
          "value": "90days"
        }
      ],
      "name": "query - 161"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "{\"version\":\"Merge/1.0\",\"merges\":[{\"id\":\"372a8ba6-f262-4718-9425-78418bc07229\",\"mergeType\":\"innerunique\",\"leftTable\":\"query - 180\",\"rightTable\":\"query - 161\",\"leftColumn\":\"ResourceId\",\"rightColumn\":\"name\"}],\"projectRename\":[{\"originalName\":\"[query - 180].PreTaxCost\",\"mergedName\":\"PreTaxCost\",\"fromId\":\"372a8ba6-f262-4718-9425-78418bc07229\"},{\"originalName\":\"[query - 180].ResourceId\",\"mergedName\":\"ResourceId\",\"fromId\":\"372a8ba6-f262-4718-9425-78418bc07229\"},{\"originalName\":\"[query - 180].Currency\",\"mergedName\":\"Currency\",\"fromId\":\"372a8ba6-f262-4718-9425-78418bc07229\"},{\"originalName\":\"[query - 161].id\",\"mergedName\":\"id\",\"fromId\":\"372a8ba6-f262-4718-9425-78418bc07229\"},{\"originalName\":\"[query - 161].name\",\"mergedName\":\"name\",\"fromId\":\"372a8ba6-f262-4718-9425-78418bc07229\"},{\"originalName\":\"[query - 161].subscriptionId\",\"mergedName\":\"subscriptionId\",\"fromId\":\"372a8ba6-f262-4718-9425-78418bc07229\"},{\"originalName\":\"[query - 161].resourceGroup\",\"mergedName\":\"resourceGroup\",\"fromId\":\"372a8ba6-f262-4718-9425-78418bc07229\"},{\"originalName\":\"[query - 161].timeCreated\",\"mergedName\":\"timeCreated\",\"fromId\":\"372a8ba6-f262-4718-9425-78418bc07229\"},{\"originalName\":\"[query - 161].diff\",\"mergedName\":\"diff\",\"fromId\":\"372a8ba6-f262-4718-9425-78418bc07229\"},{\"originalName\":\"[query - 161].sku\",\"mergedName\":\"sku\",\"fromId\":\"372a8ba6-f262-4718-9425-78418bc07229\"},{\"originalName\":\"[query - 161].properties\",\"mergedName\":\"properties\",\"fromId\":\"372a8ba6-f262-4718-9425-78418bc07229\"},{\"originalName\":\"[query - 161].properties_diskSizeGB\",\"mergedName\":\"properties_diskSizeGB\",\"fromId\":\"372a8ba6-f262-4718-9425-78418bc07229\"}]}",
        "size": 0,
        "title": "Cost of Snapshot more than 90 days",
        "noDataMessage": "No Snapshot found which is more than 90 days old!",
        "noDataMessageStyle": 3,
        "showExportToExcel": true,
        "queryType": 7
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "op"
        },
        {
          "parameterName": "selectedTab2",
          "comparison": "isEqualTo",
          "value": "osnap"
        },
        {
          "parameterName": "selectedTab3",
          "comparison": "isEqualTo",
          "value": "90days"
        }
      ],
      "name": "query - Cost of Snapshot more than 90 days"
    },
    {
      "type": 1,
      "content": {
        "json": "# Azure App Service\r\n## Save with Premium v3 reserved instances\r\nWhen you commit to an Azure App Service Premium v3 reserved instance you can save money. The reservation discount is applied automatically to the number of running instances that match the reservation scope and attributes - you don't need to assign a reservation to a specific instance to get the discounts.\r\n\r\n## Determine the right reserved instance size before you buy\r\nBefore you buy a reservation, you should determine the size of the Premium v3 reserved instance that you need. The following sections will help you determine the right Premium v3 reserved instance size.\r\n\r\n## Use Autoscale appropriately\r\nAutoscale can be used to provision resources for when they're needed or on demand, which allows you to minimize costs when your environment is idle.\r\n",
        "style": "upsell"
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "op"
        },
        {
          "parameterName": "selectedTab2",
          "comparison": "isEqualTo",
          "value": "aps"
        }
      ],
      "name": "text - Azure App Service"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "resources\r\n| where type =~ 'Microsoft.Web/sites'\r\n| extend WebAppId=id, WebAppName=name, AppServicePlan=tostring(properties.serverFarmId), SKU=tostring(properties.sku), Type=kind, Status=tostring(properties.state), WebAppLocation=location, SubscriptionName=subscriptionId\r\n| project WebAppId,WebAppName, Type, Status, WebAppLocation, AppServicePlan, SubscriptionName\r\n| order by WebAppId asc",
        "size": 0,
        "title": "Orphan Azure App Services",
        "noDataMessage": "No Orphan Azure App Service found!",
        "noDataMessageStyle": 3,
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscriptions}"
        ]
      },
      "conditionalVisibility": {
        "parameterName": "isVisible",
        "comparison": "isEqualTo",
        "value": "never"
      },
      "name": "query - webFunctionStatus"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "resources\r\n| where type == \"microsoft.web/sites\"\r\n| extend LastActivityTime = todatetime(properties.siteConfig.lastModifiedTime)\r\n| extend DaysSinceLastActivity = datetime_diff('day', LastActivityTime, now())\r\n| where DaysSinceLastActivity > 90\r\n| project AppServiceName = name, Location = location, SubscriptionId = subscriptionId, ResourceGroup = resourceGroup, LastActivityTime, DaysSinceLastActivity",
        "size": 0,
        "title": "Orphan Azure App Services",
        "noDataMessage": "No Orphan App Services Found!",
        "noDataMessageStyle": 3,
        "showExportToExcel": true,
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscriptions}"
        ]
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "op"
        },
        {
          "parameterName": "selectedTab2",
          "comparison": "isEqualTo",
          "value": "aps"
        }
      ],
      "name": "query - Azure App Service"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "{\"version\":\"Merge/1.0\",\"merges\":[{\"id\":\"6a17c840-61a1-49e0-bbc8-c658b88f6217\",\"mergeType\":\"innerunique\",\"leftTable\":\"query - 180\",\"rightTable\":\"query - Azure App Service\",\"leftColumn\":\"ResourceId\",\"rightColumn\":\"AppServiceName\"}],\"projectRename\":[{\"originalName\":\"[query - 180].PreTaxCost\",\"mergedName\":\"PreTaxCost\",\"fromId\":\"6a17c840-61a1-49e0-bbc8-c658b88f6217\"},{\"originalName\":\"[query - 180].ResourceId\",\"mergedName\":\"ResourceId\",\"fromId\":\"6a17c840-61a1-49e0-bbc8-c658b88f6217\"},{\"originalName\":\"[query - 180].Currency\",\"mergedName\":\"Currency\",\"fromId\":\"6a17c840-61a1-49e0-bbc8-c658b88f6217\"},{\"originalName\":\"[query - Azure App Service].AppServiceName\",\"mergedName\":\"AppServiceName\",\"fromId\":\"6a17c840-61a1-49e0-bbc8-c658b88f6217\"},{\"originalName\":\"[query - Azure App Service].Location\",\"mergedName\":\"Location\",\"fromId\":\"6a17c840-61a1-49e0-bbc8-c658b88f6217\"},{\"originalName\":\"[query - Azure App Service].SubscriptionId\",\"mergedName\":\"SubscriptionId\",\"fromId\":\"6a17c840-61a1-49e0-bbc8-c658b88f6217\"},{\"originalName\":\"[query - Azure App Service].ResourceGroup\",\"mergedName\":\"ResourceGroup\",\"fromId\":\"6a17c840-61a1-49e0-bbc8-c658b88f6217\"},{\"originalName\":\"[query - Azure App Service].LastActivityTime\",\"mergedName\":\"LastActivityTime\",\"fromId\":\"6a17c840-61a1-49e0-bbc8-c658b88f6217\"},{\"originalName\":\"[query - Azure App Service].DaysSinceLastActivity\",\"mergedName\":\"DaysSinceLastActivity\",\"fromId\":\"6a17c840-61a1-49e0-bbc8-c658b88f6217\"}]}",
        "size": 0,
        "title": "Orphan Azure App Services Cost",
        "noDataMessage": "No Orphan Azure App Services found!",
        "noDataMessageStyle": 3,
        "showExportToExcel": true,
        "queryType": 7
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "op"
        },
        {
          "parameterName": "selectedTab2",
          "comparison": "isEqualTo",
          "value": "aps"
        }
      ],
      "name": "query - Orphan Azure App Services Cost"
    },
    {
      "type": 1,
      "content": {
        "json": "Azure Kubernetes Service\r\n-Enable cluster autoscaler to automatically adjust the number of agent nodes in response to resource constraints\r\n\r\n-Consider using Azure Spot VMs for workloads that can handle interruptions, early terminations, or evictions. For example, workloads such as batch processing jobs, development and testing environments, and large compute workloads may be good candidates to be scheduled on a spot node pool.\r\n\r\n-Utilize the Horizontal pod autoscaler to adjust the number of pods in a deployment depending on CPU utilization or other select metrics.\r\n\r\n-Use the Start/Stop feature in Azure Kubernetes Services (AKS).",
        "style": "upsell"
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "op"
        },
        {
          "parameterName": "selectedTab2",
          "comparison": "isEqualTo",
          "value": "aks"
        }
      ],
      "name": "text - AKS"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "resources\r\n| where type == \"microsoft.containerservice/managedclusters\"\r\n| where isnull(properties.agentPoolProfiles[0].vnetSubnetID)\r\n| project name, resourceGroup, location",
        "size": 0,
        "title": "Orphan AKS",
        "noDataMessage": "No orphan AKS found!",
        "noDataMessageStyle": 3,
        "showExportToExcel": true,
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscriptions}"
        ]
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "op"
        },
        {
          "parameterName": "selectedTab2",
          "comparison": "isEqualTo",
          "value": "aks"
        }
      ],
      "name": "query - Orphan AKS"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "\tresources\r\n    | where type == \"microsoft.containerservice/managedclusters\"\r\n\t| extend  AKSname=name,location=location,Sku=tostring(sku.name),Tier=tostring(sku.tier),AgentPoolProfiles=properties.agentPoolProfiles\r\n\t| mvexpand AgentPoolProfiles\r\n\t| extend ProfileName = tostring(AgentPoolProfiles.name) ,mode=AgentPoolProfiles.mode,AutoScaleEnabled = AgentPoolProfiles.enableAutoScaling ,SpotVM=AgentPoolProfiles.scaleSetPriority,  VMSize=tostring(AgentPoolProfiles.vmSize),minCount=tostring(AgentPoolProfiles.minCount),maxCount=tostring(AgentPoolProfiles.maxCount) , nodeCount=tostring(AgentPoolProfiles.['count'])\r\n    | project id,ProfileName,Sku,Tier,mode,AutoScaleEnabled,SpotVM, VMSize,nodeCount,minCount,maxCount,location,AKSname\r\n",
        "size": 0,
        "noDataMessage": "You have no AKS clusters!",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscriptions}"
        ]
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "op"
        },
        {
          "parameterName": "selectedTab2",
          "comparison": "isEqualTo",
          "value": "aks"
        }
      ],
      "name": "query - AKS Cluster"
    },
    {
      "type": 1,
      "content": {
        "json": "# Recommendations for Azure Firewall\r\nReview Azure Firewall without network traffic. These resources are billed hourly, consider reconfiguring or deleting them if they are not in use.",
        "style": "upsell"
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "op"
        },
        {
          "parameterName": "selectedTab2",
          "comparison": "isEqualTo",
          "value": "af"
        }
      ],
      "name": "text - Azure Firewall"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "crossComponentResources": [
          "{Subscriptions}"
        ],
        "parameters": [
          {
            "id": "de870639-b64a-4285-978f-ed9e88d57e6a",
            "version": "KqlParameterItem/1.0",
            "name": "Firewall",
            "label": "Azure Firewall",
            "type": 5,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "resources\r\n| where type == \"microsoft.network/azurefirewalls\"\r\n| project id",
            "crossComponentResources": [
              "{Subscriptions}"
            ],
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ]
            },
            "timeContext": {
              "durationMs": 86400000
            },
            "defaultValue": "value::all",
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          },
          {
            "id": "1f85bf43-76de-4eeb-bfa8-32dff7dad346",
            "version": "KqlParameterItem/1.0",
            "name": "TimeRangeFirewall",
            "label": "Time Range",
            "type": 4,
            "isRequired": true,
            "typeSettings": {
              "selectableValues": [
                {
                  "durationMs": 604800000
                },
                {
                  "durationMs": 1209600000
                },
                {
                  "durationMs": 2419200000
                },
                {
                  "durationMs": 2592000000
                },
                {
                  "durationMs": 5184000000
                },
                {
                  "durationMs": 7776000000
                }
              ]
            },
            "timeContext": {
              "durationMs": 86400000
            },
            "value": {
              "durationMs": 1209600000
            }
          }
        ],
        "style": "pills",
        "queryType": 0,
        "resourceType": "microsoft.resourcegraph/resources"
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "op"
        },
        {
          "parameterName": "selectedTab2",
          "comparison": "isEqualTo",
          "value": "af"
        }
      ],
      "name": "parameters - 199"
    },
    {
      "type": 10,
      "content": {
        "chartId": "workbook90cbd66d-2e56-409a-ab77-02745672dfa8",
        "version": "MetricsItem/2.0",
        "size": 0,
        "chartType": 2,
        "resourceType": "microsoft.network/azurefirewalls",
        "metricScope": 0,
        "resourceParameter": "Firewall",
        "resourceIds": [
          "{Firewall}"
        ],
        "timeContextFromParameter": "TimeRangeFirewall",
        "timeContext": {
          "durationMs": 1209600000
        },
        "metrics": [],
        "gridSettings": {
          "rowLimit": 10000
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "op"
        },
        {
          "parameterName": "selectedTab2",
          "comparison": "isEqualTo",
          "value": "af"
        }
      ],
      "name": "metric - Azure Firewall"
    },
    {
      "type": 1,
      "content": {
        "json": "# Recommendations for VPN Gateways\r\nReview VPN Gateways without network traffic. These gateways are billed hourly, consider reconfiguring or deleting them if they are not in use.",
        "style": "upsell"
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "op"
        },
        {
          "parameterName": "selectedTab2",
          "comparison": "isEqualTo",
          "value": "avpn"
        }
      ],
      "name": "text - 201"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "e620bfa6-1f64-4145-b24a-c7e154a79708",
            "version": "KqlParameterItem/1.0",
            "name": "VPNGatewaySubscription",
            "label": "Virtual network gateways",
            "type": 5,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "Resources \r\n| where type =~ \"microsoft.network/virtualnetworkgateways\" and properties.gatewayType == \"Vpn\"\r\n| project id",
            "crossComponentResources": [
              "{Subscriptions}"
            ],
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ]
            },
            "timeContext": {
              "durationMs": 86400000
            },
            "defaultValue": "value::all",
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          },
          {
            "id": "b5c6b18d-d8c1-4cd6-a3dd-6f543d0961fd",
            "version": "KqlParameterItem/1.0",
            "name": "TimeRangeVPN",
            "label": "Time Range",
            "type": 4,
            "typeSettings": {
              "selectableValues": [
                {
                  "durationMs": 604800000
                },
                {
                  "durationMs": 1209600000
                },
                {
                  "durationMs": 2419200000
                },
                {
                  "durationMs": 2592000000
                },
                {
                  "durationMs": 5184000000
                },
                {
                  "durationMs": 7776000000
                }
              ]
            },
            "timeContext": {
              "durationMs": 86400000
            },
            "value": {
              "durationMs": 2592000000
            }
          }
        ],
        "style": "pills",
        "queryType": 0,
        "resourceType": "microsoft.resourcegraph/resources"
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "op"
        },
        {
          "parameterName": "selectedTab2",
          "comparison": "isEqualTo",
          "value": "avpn"
        }
      ],
      "name": "parameters - 202"
    },
    {
      "type": 10,
      "content": {
        "chartId": "workbook596b7bbf-bfc9-4016-a62b-2a1c0f741639",
        "version": "MetricsItem/2.0",
        "size": 0,
        "chartType": 2,
        "resourceType": "microsoft.network/virtualnetworkgateways",
        "metricScope": 0,
        "resourceParameter": "VPNGatewaySubscription",
        "resourceIds": [
          "{VPNGatewaySubscription}"
        ],
        "timeContextFromParameter": "TimeRangeVPN",
        "timeContext": {
          "durationMs": 2592000000
        },
        "metrics": [],
        "gridSettings": {
          "rowLimit": 10000
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "op"
        },
        {
          "parameterName": "selectedTab2",
          "comparison": "isEqualTo",
          "value": "avpn"
        }
      ],
      "name": "metric - 203"
    },
    {
      "type": 1,
      "content": {
        "json": "# Hybrid Benefit Overview"
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "hybenef"
      },
      "customWidth": "50",
      "name": "text - 77"
    },
    {
      "type": 1,
      "content": {
        "json": "Save on cost while optimising your hybrid environment by applying your existing Windows Server, SQL Server licences or Linux subscriptions to Azure Hybrid Benefit.",
        "style": "info"
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "hybenef"
      },
      "name": "text - 156"
    },
    {
      "type": 11,
      "content": {
        "version": "LinkItem/1.0",
        "style": "tabs",
        "links": [
          {
            "id": "cda09057-3e0b-4ca6-af13-5194666e561b",
            "cellValue": "selTabhb",
            "linkTarget": "parameter",
            "linkLabel": "OS Level Hybrid Benefits",
            "subTarget": "oslhb",
            "style": "link"
          },
          {
            "id": "8a28b6d2-0c35-4f32-8d7e-12663cb7c2ae",
            "cellValue": "selTabhb",
            "linkTarget": "parameter",
            "linkLabel": "VM Scale Set",
            "subTarget": "vmss",
            "style": "link"
          },
          {
            "id": "01303f30-88dd-41ea-a0e8-b6696e78d564",
            "cellValue": "selTabhb",
            "linkTarget": "parameter",
            "linkLabel": "SQL Servers Hybrid Benefits",
            "subTarget": "sqlshb",
            "style": "link"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "hybenef"
      },
      "name": "links - 154"
    },
    {
      "type": 11,
      "content": {
        "version": "LinkItem/1.0",
        "style": "tabs",
        "links": [
          {
            "id": "ec25fbcd-9a54-444f-8385-c7b8b0b610f9",
            "cellValue": "selsubtab",
            "linkTarget": "parameter",
            "linkLabel": "SQL Virtual Machine",
            "subTarget": "sqlvm",
            "preText": "Virtual Machine",
            "style": "link"
          },
          {
            "id": "a822bbc3-2f15-4d32-b402-b5a2056bc0fd",
            "cellValue": "selsubtab",
            "linkTarget": "parameter",
            "linkLabel": "SQL Managed Instance",
            "subTarget": "sqlmi",
            "style": "link"
          },
          {
            "id": "0ae059e1-1c14-418c-a5ab-072a5c5195b2",
            "cellValue": "selsubtab",
            "linkTarget": "parameter",
            "linkLabel": "SQL Database",
            "subTarget": "sqldb",
            "style": "link"
          }
        ]
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "hybenef"
        },
        {
          "parameterName": "selTabhb",
          "comparison": "isEqualTo",
          "value": "sqlshb"
        }
      ],
      "name": "links - 165"
    },
    {
      "type": 1,
      "content": {
        "json": "Save up to 85% over standard pay-as-you-go rate leveraging Windows Server and SQL Server licences with Azure Hybrid Benefit",
        "style": "upsell"
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selTabhb",
          "comparison": "isEqualTo",
          "value": "sqlshb"
        },
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "hybenef"
        },
        {
          "parameterName": "selsubtab",
          "comparison": "isEqualTo",
          "value": "sqlvm"
        }
      ],
      "name": "text - 155"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "// Run query to see results.\r\nresources\r\n| where type =~ 'Microsoft.SqlVirtualMachine/SqlVirtualMachines'\r\n| extend p = parse_json(properties)\r\n| extend version = iff(isnotempty(p.sqlImageOffer), p.sqlImageOffer, \"--\"),\r\n    edition = iff(isnotempty(p.sqlImageSku), p.sqlImageSku, \"--\"),\r\n    managementMode = case(p.sqlManagement =~ \"Full\", 'Full mode',\r\n        p.sqlManagement =~ \"LightWeight\", 'Light weight mode',\r\n        p.sqlManagement =~ \"NoAgent\", 'No agent mode',\r\n        p.sqlManagement =~ \"NotSet\", 'Not set',\r\n        \"--\"),\r\n    licenseType = case(p.sqlServerLicenseType =~ \"PAYG\", \"Pay As You Go\",\r\n        p.sqlServerLicenseType =~ \"AHUB\", \"Azure Hybrid Benefit\",\r\n        p.sqlServerLicenseType =~ \"DR\", \"HA/DR\",\r\n        \"--\")\r\n  | where licenseType !~  \"Azure Hybrid Benefit\"\r\n| project id, name, type, location, subscriptionId, resourceGroup, kind, tags, version, edition, managementMode, licenseType\r\n| extend locationDisplayName=case(location =~ 'eastus','East US',location =~ 'eastus2','East US 2',location =~ 'southcentralus','South Central US',location =~ 'westus2','West US 2',location =~ 'westus3','West US 3',location =~ 'australiaeast','Australia East',location =~ 'southeastasia','Southeast Asia',location =~ 'northeurope','North Europe',location =~ 'swedencentral','Sweden Central',location =~ 'uksouth','UK South',location =~ 'westeurope','West Europe',location =~ 'centralus','Central US',location =~ 'southafricanorth','South Africa North',location =~ 'centralindia','Central India',location =~ 'eastasia','East Asia',location =~ 'japaneast','Japan East',location =~ 'koreacentral','Korea Central',location =~ 'canadacentral','Canada Central',location =~ 'francecentral','France Central',location =~ 'germanywestcentral','Germany West Central',location =~ 'norwayeast','Norway East',location =~ 'polandcentral','Poland Central',location =~ 'switzerlandnorth','Switzerland North',location =~ 'uaenorth','UAE North',location =~ 'brazilsouth','Brazil South',location =~ 'qatarcentral','Qatar Central',location =~ 'centralusstage','Central US (Stage)',location =~ 'eastusstage','East US (Stage)',location =~ 'eastus2stage','East US 2 (Stage)',location =~ 'northcentralusstage','North Central US (Stage)',location =~ 'southcentralusstage','South Central US (Stage)',location =~ 'westusstage','West US (Stage)',location =~ 'westus2stage','West US 2 (Stage)',location =~ 'asia','Asia',location =~ 'asiapacific','Asia Pacific',location =~ 'australia','Australia',location =~ 'brazil','Brazil',location =~ 'canada','Canada',location =~ 'europe','Europe',location =~ 'france','France',location =~ 'germany','Germany',location =~ 'global','Global',location =~ 'india','India',location =~ 'japan','Japan',location =~ 'korea','Korea',location =~ 'norway','Norway',location =~ 'singapore','Singapore',location =~ 'southafrica','South Africa',location =~ 'switzerland','Switzerland',location =~ 'uae','United Arab Emirates',location =~ 'uk','United Kingdom',location =~ 'unitedstates','United States',location =~ 'unitedstateseuap','United States EUAP',location =~ 'eastasiastage','East Asia (Stage)',location =~ 'southeastasiastage','Southeast Asia (Stage)',location =~ 'brazilus','Brazil US',location =~ 'northcentralus','North Central US',location =~ 'westus','West US',location =~ 'jioindiawest','Jio India West',location =~ 'westcentralus','West Central US',location =~ 'southafricawest','South Africa West',location =~ 'australiacentral','Australia Central',location =~ 'australiacentral2','Australia Central 2',location =~ 'australiasoutheast','Australia Southeast',location =~ 'japanwest','Japan West',location =~ 'jioindiacentral','Jio India Central',location =~ 'koreasouth','Korea South',location =~ 'southindia','South India',location =~ 'westindia','West India',location =~ 'canadaeast','Canada East',location =~ 'francesouth','France South',location =~ 'germanynorth','Germany North',location =~ 'norwaywest','Norway West',location =~ 'switzerlandwest','Switzerland West',location =~ 'ukwest','UK West',location =~ 'uaecentral','UAE Central',location =~ 'brazilsoutheast','Brazil Southeast',location)\r\n| extend subscriptionDisplayName=case(subscriptionId =~ '759b9007-97f8-4a5c-abff-224a1c0b26f1','Base Infrastructure',subscriptionId =~ 'd52c0874-ca55-4589-aa7f-2f11578b682d','CONA POC',subscriptionId =~ 'cfb9b711-3cb0-4df5-8a7c-98908bec6460','Digital_Non-Prod',subscriptionId =~ '594cf22d-3d0a-4ed4-903c-a632f451ef49','Digital_Production',subscriptionId =~ '3a962b01-218b-4afe-aaa6-aa403d44d61c','Infra_Shared',subscriptionId =~ 'b2726899-59de-4003-a879-4f4ef953091e','Innovation',subscriptionId =~ '1a2682bd-5893-481c-9f97-6a1d8ba4548e','IoT_Non-Prod',subscriptionId =~ '5b0deea6-1712-4138-bfd9-9574042858e1','IoT_Production',subscriptionId =~ 'c66f7a35-98f3-4c27-8875-8e3f426d52f7','Network',subscriptionId =~ '5d26aadf-bc83-45db-908e-d9f69c2d27b9','Non-Prod',subscriptionId =~ 'cd05aef1-6ad1-4425-bebc-9a3d1614a666','PerfTest',subscriptionId =~ '3a8d651a-33d8-46be-89b8-8cf0436d27dd','Production',subscriptionId =~ '7ca714c2-b83a-45af-a886-f90f8da6e367','Production-DR',subscriptionId =~ '5d0a62f5-6408-4370-9eb8-988f600d3f65','Restricted',subscriptionId =~ '5cb66768-10e7-414c-8f0a-b258679f25d3','Restricted_Non-Prod',subscriptionId =~ 'a96e49c9-c03d-4ead-adc8-069ffcbc3b29','Sandbox',subscriptionId =~ '7def3fc3-ae86-4ac6-8738-49141d3f0e5e','UnitedPOC',subscriptionId)\r\n| where (type !~ ('astronomer.astro/organizations'))\r\n| where (type !~ ('dell.storage/filesystems'))\r\n| where (type !~ ('informatica.datamanagement/organizations'))\r\n| where (type !~ ('paloaltonetworks.cloudngfw/globalrulestacks'))\r\n| where (type !~ ('solarwinds.observability/organizations'))\r\n| where (type !~ ('microsoft.azureactivedirectory/ciamdirectories'))\r\n| where (type !~ ('microsoft.agfoodplatform/farmbeats'))\r\n| where (type !~ ('microsoft.anybuild/clusters'))\r\n| where (type !~ ('microsoft.mobilepacketcore/mobilepacketcores/nfvis/clusters/amfdeployments'))\r\n| where (type !~ ('microsoft.mobilepacketcore/mobilepacketcores/amfprofiles'))\r\n| where (type !~ ('microsoft.mobilepacketcore/mobilepacketcores/nfvis/clusters'))\r\n| where (type !~ ('microsoft.mobilepacketcore/mobilepacketcores/configsnapshots'))\r\n| where (type !~ ('microsoft.mobilepacketcore/mobilepacketcores/datanetworks'))\r\n| where (type !~ ('microsoft.mobilepacketcore/mobilepacketcores/deploymentareas'))\r\n| where (type !~ ('microsoft.mobilepacketcore/mobilepacketcores/networkslices'))\r\n| where (type !~ ('microsoft.mobilepacketcore/mobilepacketcores/nfvis'))\r\n| where (type !~ ('microsoft.mobilepacketcore/mobilepacketcores/nfvis/clusters/nrfdeployments'))\r\n| where (type !~ ('microsoft.mobilepacketcore/mobilepacketcores/nrfprofiles'))\r\n| where (type !~ ('microsoft.mobilepacketcore/mobilepacketcores'))\r\n| where (type !~ ('microsoft.mobilepacketcore/mobilepacketcores/packetdetectionrules'))\r\n| where (type !~ ('microsoft.mobilepacketcore/mobilepacketcores/packetflowdescriptions'))\r\n| where (type !~ ('microsoft.mobilepacketcore/mobilepacketcores/pccrules'))\r\n| where (type !~ ('microsoft.mobilepacketcore/mobilepacketcores/pccrulebases'))\r\n| where (type !~ ('microsoft.mobilepacketcore/mobilepacketcores/plmns'))\r\n| where (type !~ ('microsoft.mobilepacketcore/mobilepacketcores/serviceareas'))\r\n| where (type !~ ('microsoft.mobilepacketcore/mobilepacketcores/nfvis/clusters/smfdeployments'))\r\n| where (type !~ ('microsoft.mobilepacketcore/mobilepacketcores/smfprofiles'))\r\n| where (type !~ ('microsoft.mobilepacketcore/mobilepacketcores/subscriberanalyzers'))\r\n| where (type !~ ('microsoft.mobilepacketcore/mobilepacketcores/serviceareas/trackingareas'))\r\n| where (type !~ ('microsoft.mobilepacketcore/mobilepacketcores/nfvis/clusters/upfdeployments'))\r\n| where (type !~ ('microsoft.mobilepacketcore/mobilepacketcores/upfprofiles'))\r\n| where (type !~ ('microsoft.cdn/profiles/customdomains'))\r\n| where (type !~ ('microsoft.cdn/profiles/afdendpoints'))\r\n| where (type !~ ('microsoft.cdn/profiles/origingroups/origins'))\r\n| where (type !~ ('microsoft.cdn/profiles/origingroups'))\r\n| where (type !~ ('microsoft.cdn/profiles/afdendpoints/routes'))\r\n| where (type !~ ('microsoft.cdn/profiles/rulesets/rules'))\r\n| where (type !~ ('microsoft.cdn/profiles/rulesets'))\r\n| where (type !~ ('microsoft.cdn/profiles/secrets'))\r\n| where (type !~ ('microsoft.cdn/profiles/securitypolicies'))\r\n| where (type !~ ('microsoft.cloudtest/accounts'))\r\n| where (type !~ ('microsoft.cloudtest/hostedpools'))\r\n| where (type !~ ('microsoft.cloudtest/images'))\r\n| where (type !~ ('microsoft.cloudtest/pools'))\r\n| where (type !~ ('microsoft.codesigning/codesigningaccounts'))\r\n| where (type !~ ('microsoft.kubernetesconfiguration/extensions'))\r\n| where (type !~ ('microsoft.containerservice/managedclusters/microsoft.kubernetesconfiguration/extensions'))\r\n| where (type !~ ('microsoft.kubernetes/connectedclusters/microsoft.kubernetesconfiguration/namespaces'))\r\n| where (type !~ ('microsoft.containerservice/managedclusters/microsoft.kubernetesconfiguration/namespaces'))\r\n| where (type !~ ('microsoft.kubernetes/connectedclusters/microsoft.kubernetesconfiguration/fluxconfigurations'))\r\n| where (type !~ ('microsoft.containerservice/managedclusters/microsoft.kubernetesconfiguration/fluxconfigurations'))\r\n| where (type !~ ('microsoft.portalservices/extensions/deployments'))\r\n| where (type !~ ('microsoft.portalservices/extensions'))\r\n| where (type !~ ('microsoft.portalservices/extensions/slots'))\r\n| where (type !~ ('microsoft.portalservices/extensions/versions'))\r\n| where (type !~ ('microsoft.azuredatatransfer/connections'))\r\n| where (type !~ ('microsoft.azuredatatransfer/connections/flows'))\r\n| where (type !~ ('microsoft.azuredatatransfer/pipelines'))\r\n| where (type !~ ('microsoft.databasewatcher/watchers'))\r\n| where (type !~ ('microsoft.datacollaboration/workspaces'))\r\n| where (type !~ ('microsoft.deviceregistry/devices'))\r\n| where (type !~ ('microsoft.devtunnels/tunnelplans'))\r\n| where (type !~ ('microsoft.hdinsight/clusterpools/clusters'))\r\n| where (type !~ ('microsoft.hdinsight/clusterpools'))\r\n| where (type !~ ('microsoft.healthmodel/healthmodels'))\r\n| where (type !~ ('microsoft.hybridcompute/machinesesu'))\r\n| where (type !~ ('microsoft.network/virtualhubs')) or ((kind =~ ('routeserver')))\r\n| where (type !~ ('microsoft.metaverse/metaverses'))\r\n| where (type !~ ('microsoft.modsimworkbench/workbenches/chambers'))\r\n| where (type !~ ('microsoft.modsimworkbench/workbenches/chambers/connectors'))\r\n| where (type !~ ('microsoft.modsimworkbench/workbenches/chambers/files'))\r\n| where (type !~ ('microsoft.modsimworkbench/workbenches/chambers/filerequests'))\r\n| where (type !~ ('microsoft.modsimworkbench/workbenches/chambers/licenses'))\r\n| where (type !~ ('microsoft.modsimworkbench/workbenches/chambers/storages'))\r\n| where (type !~ ('microsoft.modsimworkbench/workbenches/chambers/workloads'))\r\n| where (type !~ ('microsoft.modsimworkbench/workbenches/sharedstorages'))\r\n| where (type !~ ('microsoft.modsimworkbench/workbenches'))\r\n| where (type !~ ('microsoft.insights/diagnosticsettings'))\r\n| where not((type =~ ('microsoft.network/serviceendpointpolicies')) and ((kind =~ ('internal'))))\r\n| where (type !~ ('microsoft.openlogisticsplatform/workspaces'))\r\n| where (type !~ ('microsoft.scom/managedinstances'))\r\n| where (type !~ ('microsoft.orbital/edgesites'))\r\n| where (type !~ ('microsoft.orbital/groundstations'))\r\n| where (type !~ ('microsoft.orbital/l2connections'))\r\n| where (type !~ ('microsoft.recommendationsservice/accounts/modeling'))\r\n| where (type !~ ('microsoft.recommendationsservice/accounts/serviceendpoints'))\r\n| where (type !~ ('microsoft.recoveryservicesbvtd/vaults'))\r\n| where (type !~ ('microsoft.recoveryservicesbvtd2/vaults'))\r\n| where (type !~ ('microsoft.recoveryservicesintd/vaults'))\r\n| where (type !~ ('microsoft.recoveryservicesintd2/vaults'))\r\n| where (type !~ ('microsoft.deploymentmanager/rollouts'))\r\n| where (type !~ ('microsoft.datareplication/replicationvaults'))\r\n| where (type !~ ('microsoft.storage/storagetasks'))\r\n| where not((type =~ ('microsoft.synapse/workspaces/sqlpools')) and ((kind =~ ('v3'))))\r\n| where (type !~ ('microsoft.mission/catalogs'))\r\n| where (type !~ ('microsoft.mission/communities'))\r\n| where (type !~ ('microsoft.mission/virtualenclaves/endpoints'))\r\n| where (type !~ ('microsoft.mission/externalconnections'))\r\n| where (type !~ ('microsoft.mission/internalconnections'))\r\n| where (type !~ ('microsoft.mission/virtualenclaves'))\r\n| where (type !~ ('microsoft.mission/virtualenclaves/workloads'))\r\n| where (type !~ ('microsoft.windowspushnotificationservices/registrations'))\r\n| where (type !~ ('microsoft.manufacturingplatform/manufacturingdataservices'))\r\n| where not((type =~ ('microsoft.sql/servers/databases')) and ((kind in~ ('system','v2.0,system','v12.0,system','v12.0,user,datawarehouse,gen2,analytics'))))\r\n| where not((type =~ ('microsoft.sql/servers')) and ((kind =~ ('v12.0,analytics'))))\r\n| project name,resourceGroup,version,edition,locationDisplayName,subscriptionDisplayName,managementMode,licenseType,id,type,kind,location,subscriptionId,tags\r\n|summarize count(licenseType)\r\n//| sort by (tolower(tostring(name))) asc",
        "size": 4,
        "title": "SQL servers without Azure Hybrid Benefits",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "value::all"
        ],
        "visualization": "tiles",
        "tileSettings": {
          "titleContent": {
            "columnMatch": "count_licenseType",
            "formatter": 12,
            "formatOptions": {
              "palette": "auto"
            }
          },
          "showBorder": true,
          "size": "auto"
        },
        "textSettings": {
          "style": "bignumber"
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "hybenef"
        },
        {
          "parameterName": "selTabhb",
          "comparison": "isEqualTo",
          "value": "sqlshb"
        },
        {
          "parameterName": "selsubtab",
          "comparison": "isEqualTo",
          "value": "sqlvm"
        }
      ],
      "customWidth": "35",
      "name": "query - 159 - Copy"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "// Run query to see results.\r\nresources\r\n| where type =~ 'Microsoft.SqlVirtualMachine/SqlVirtualMachines'\r\n| extend p = parse_json(properties)\r\n| extend version = iff(isnotempty(p.sqlImageOffer), p.sqlImageOffer, \"--\"),\r\n    edition = iff(isnotempty(p.sqlImageSku), p.sqlImageSku, \"--\"),\r\n    managementMode = case(p.sqlManagement =~ \"Full\", 'Full mode',\r\n        p.sqlManagement =~ \"LightWeight\", 'Light weight mode',\r\n        p.sqlManagement =~ \"NoAgent\", 'No agent mode',\r\n        p.sqlManagement =~ \"NotSet\", 'Not set',\r\n        \"--\"),\r\n    licenseType = case(p.sqlServerLicenseType =~ \"PAYG\", \"Pay As You Go\",\r\n        p.sqlServerLicenseType =~ \"AHUB\", \"Azure Hybrid Benefit\",\r\n        p.sqlServerLicenseType =~ \"DR\", \"HA/DR\",\r\n        \"--\")\r\n  | where licenseType !~  \"Azure Hybrid Benefit\"\r\n| project id, name, type, location, subscriptionId, resourceGroup, kind, tags, version, edition, managementMode, licenseType\r\n| extend locationDisplayName=case(location =~ 'eastus','East US',location =~ 'eastus2','East US 2',location =~ 'southcentralus','South Central US',location =~ 'westus2','West US 2',location =~ 'westus3','West US 3',location =~ 'australiaeast','Australia East',location =~ 'southeastasia','Southeast Asia',location =~ 'northeurope','North Europe',location =~ 'swedencentral','Sweden Central',location =~ 'uksouth','UK South',location =~ 'westeurope','West Europe',location =~ 'centralus','Central US',location =~ 'southafricanorth','South Africa North',location =~ 'centralindia','Central India',location =~ 'eastasia','East Asia',location =~ 'japaneast','Japan East',location =~ 'koreacentral','Korea Central',location =~ 'canadacentral','Canada Central',location =~ 'francecentral','France Central',location =~ 'germanywestcentral','Germany West Central',location =~ 'norwayeast','Norway East',location =~ 'polandcentral','Poland Central',location =~ 'switzerlandnorth','Switzerland North',location =~ 'uaenorth','UAE North',location =~ 'brazilsouth','Brazil South',location =~ 'qatarcentral','Qatar Central',location =~ 'centralusstage','Central US (Stage)',location =~ 'eastusstage','East US (Stage)',location =~ 'eastus2stage','East US 2 (Stage)',location =~ 'northcentralusstage','North Central US (Stage)',location =~ 'southcentralusstage','South Central US (Stage)',location =~ 'westusstage','West US (Stage)',location =~ 'westus2stage','West US 2 (Stage)',location =~ 'asia','Asia',location =~ 'asiapacific','Asia Pacific',location =~ 'australia','Australia',location =~ 'brazil','Brazil',location =~ 'canada','Canada',location =~ 'europe','Europe',location =~ 'france','France',location =~ 'germany','Germany',location =~ 'global','Global',location =~ 'india','India',location =~ 'japan','Japan',location =~ 'korea','Korea',location =~ 'norway','Norway',location =~ 'singapore','Singapore',location =~ 'southafrica','South Africa',location =~ 'switzerland','Switzerland',location =~ 'uae','United Arab Emirates',location =~ 'uk','United Kingdom',location =~ 'unitedstates','United States',location =~ 'unitedstateseuap','United States EUAP',location =~ 'eastasiastage','East Asia (Stage)',location =~ 'southeastasiastage','Southeast Asia (Stage)',location =~ 'brazilus','Brazil US',location =~ 'northcentralus','North Central US',location =~ 'westus','West US',location =~ 'jioindiawest','Jio India West',location =~ 'westcentralus','West Central US',location =~ 'southafricawest','South Africa West',location =~ 'australiacentral','Australia Central',location =~ 'australiacentral2','Australia Central 2',location =~ 'australiasoutheast','Australia Southeast',location =~ 'japanwest','Japan West',location =~ 'jioindiacentral','Jio India Central',location =~ 'koreasouth','Korea South',location =~ 'southindia','South India',location =~ 'westindia','West India',location =~ 'canadaeast','Canada East',location =~ 'francesouth','France South',location =~ 'germanynorth','Germany North',location =~ 'norwaywest','Norway West',location =~ 'switzerlandwest','Switzerland West',location =~ 'ukwest','UK West',location =~ 'uaecentral','UAE Central',location =~ 'brazilsoutheast','Brazil Southeast',location)\r\n| extend subscriptionDisplayName=case(subscriptionId =~ '759b9007-97f8-4a5c-abff-224a1c0b26f1','Base Infrastructure',subscriptionId =~ 'd52c0874-ca55-4589-aa7f-2f11578b682d','CONA POC',subscriptionId =~ 'cfb9b711-3cb0-4df5-8a7c-98908bec6460','Digital_Non-Prod',subscriptionId =~ '594cf22d-3d0a-4ed4-903c-a632f451ef49','Digital_Production',subscriptionId =~ '3a962b01-218b-4afe-aaa6-aa403d44d61c','Infra_Shared',subscriptionId =~ 'b2726899-59de-4003-a879-4f4ef953091e','Innovation',subscriptionId =~ '1a2682bd-5893-481c-9f97-6a1d8ba4548e','IoT_Non-Prod',subscriptionId =~ '5b0deea6-1712-4138-bfd9-9574042858e1','IoT_Production',subscriptionId =~ 'c66f7a35-98f3-4c27-8875-8e3f426d52f7','Network',subscriptionId =~ '5d26aadf-bc83-45db-908e-d9f69c2d27b9','Non-Prod',subscriptionId =~ 'cd05aef1-6ad1-4425-bebc-9a3d1614a666','PerfTest',subscriptionId =~ '3a8d651a-33d8-46be-89b8-8cf0436d27dd','Production',subscriptionId =~ '7ca714c2-b83a-45af-a886-f90f8da6e367','Production-DR',subscriptionId =~ '5d0a62f5-6408-4370-9eb8-988f600d3f65','Restricted',subscriptionId =~ '5cb66768-10e7-414c-8f0a-b258679f25d3','Restricted_Non-Prod',subscriptionId =~ 'a96e49c9-c03d-4ead-adc8-069ffcbc3b29','Sandbox',subscriptionId =~ '7def3fc3-ae86-4ac6-8738-49141d3f0e5e','UnitedPOC',subscriptionId)\r\n| where (type !~ ('astronomer.astro/organizations'))\r\n| where (type !~ ('dell.storage/filesystems'))\r\n| where (type !~ ('informatica.datamanagement/organizations'))\r\n| where (type !~ ('paloaltonetworks.cloudngfw/globalrulestacks'))\r\n| where (type !~ ('solarwinds.observability/organizations'))\r\n| where (type !~ ('microsoft.azureactivedirectory/ciamdirectories'))\r\n| where (type !~ ('microsoft.agfoodplatform/farmbeats'))\r\n| where (type !~ ('microsoft.anybuild/clusters'))\r\n| where (type !~ ('microsoft.mobilepacketcore/mobilepacketcores/nfvis/clusters/amfdeployments'))\r\n| where (type !~ ('microsoft.mobilepacketcore/mobilepacketcores/amfprofiles'))\r\n| where (type !~ ('microsoft.mobilepacketcore/mobilepacketcores/nfvis/clusters'))\r\n| where (type !~ ('microsoft.mobilepacketcore/mobilepacketcores/configsnapshots'))\r\n| where (type !~ ('microsoft.mobilepacketcore/mobilepacketcores/datanetworks'))\r\n| where (type !~ ('microsoft.mobilepacketcore/mobilepacketcores/deploymentareas'))\r\n| where (type !~ ('microsoft.mobilepacketcore/mobilepacketcores/networkslices'))\r\n| where (type !~ ('microsoft.mobilepacketcore/mobilepacketcores/nfvis'))\r\n| where (type !~ ('microsoft.mobilepacketcore/mobilepacketcores/nfvis/clusters/nrfdeployments'))\r\n| where (type !~ ('microsoft.mobilepacketcore/mobilepacketcores/nrfprofiles'))\r\n| where (type !~ ('microsoft.mobilepacketcore/mobilepacketcores'))\r\n| where (type !~ ('microsoft.mobilepacketcore/mobilepacketcores/packetdetectionrules'))\r\n| where (type !~ ('microsoft.mobilepacketcore/mobilepacketcores/packetflowdescriptions'))\r\n| where (type !~ ('microsoft.mobilepacketcore/mobilepacketcores/pccrules'))\r\n| where (type !~ ('microsoft.mobilepacketcore/mobilepacketcores/pccrulebases'))\r\n| where (type !~ ('microsoft.mobilepacketcore/mobilepacketcores/plmns'))\r\n| where (type !~ ('microsoft.mobilepacketcore/mobilepacketcores/serviceareas'))\r\n| where (type !~ ('microsoft.mobilepacketcore/mobilepacketcores/nfvis/clusters/smfdeployments'))\r\n| where (type !~ ('microsoft.mobilepacketcore/mobilepacketcores/smfprofiles'))\r\n| where (type !~ ('microsoft.mobilepacketcore/mobilepacketcores/subscriberanalyzers'))\r\n| where (type !~ ('microsoft.mobilepacketcore/mobilepacketcores/serviceareas/trackingareas'))\r\n| where (type !~ ('microsoft.mobilepacketcore/mobilepacketcores/nfvis/clusters/upfdeployments'))\r\n| where (type !~ ('microsoft.mobilepacketcore/mobilepacketcores/upfprofiles'))\r\n| where (type !~ ('microsoft.cdn/profiles/customdomains'))\r\n| where (type !~ ('microsoft.cdn/profiles/afdendpoints'))\r\n| where (type !~ ('microsoft.cdn/profiles/origingroups/origins'))\r\n| where (type !~ ('microsoft.cdn/profiles/origingroups'))\r\n| where (type !~ ('microsoft.cdn/profiles/afdendpoints/routes'))\r\n| where (type !~ ('microsoft.cdn/profiles/rulesets/rules'))\r\n| where (type !~ ('microsoft.cdn/profiles/rulesets'))\r\n| where (type !~ ('microsoft.cdn/profiles/secrets'))\r\n| where (type !~ ('microsoft.cdn/profiles/securitypolicies'))\r\n| where (type !~ ('microsoft.cloudtest/accounts'))\r\n| where (type !~ ('microsoft.cloudtest/hostedpools'))\r\n| where (type !~ ('microsoft.cloudtest/images'))\r\n| where (type !~ ('microsoft.cloudtest/pools'))\r\n| where (type !~ ('microsoft.codesigning/codesigningaccounts'))\r\n| where (type !~ ('microsoft.kubernetesconfiguration/extensions'))\r\n| where (type !~ ('microsoft.containerservice/managedclusters/microsoft.kubernetesconfiguration/extensions'))\r\n| where (type !~ ('microsoft.kubernetes/connectedclusters/microsoft.kubernetesconfiguration/namespaces'))\r\n| where (type !~ ('microsoft.containerservice/managedclusters/microsoft.kubernetesconfiguration/namespaces'))\r\n| where (type !~ ('microsoft.kubernetes/connectedclusters/microsoft.kubernetesconfiguration/fluxconfigurations'))\r\n| where (type !~ ('microsoft.containerservice/managedclusters/microsoft.kubernetesconfiguration/fluxconfigurations'))\r\n| where (type !~ ('microsoft.portalservices/extensions/deployments'))\r\n| where (type !~ ('microsoft.portalservices/extensions'))\r\n| where (type !~ ('microsoft.portalservices/extensions/slots'))\r\n| where (type !~ ('microsoft.portalservices/extensions/versions'))\r\n| where (type !~ ('microsoft.azuredatatransfer/connections'))\r\n| where (type !~ ('microsoft.azuredatatransfer/connections/flows'))\r\n| where (type !~ ('microsoft.azuredatatransfer/pipelines'))\r\n| where (type !~ ('microsoft.databasewatcher/watchers'))\r\n| where (type !~ ('microsoft.datacollaboration/workspaces'))\r\n| where (type !~ ('microsoft.deviceregistry/devices'))\r\n| where (type !~ ('microsoft.devtunnels/tunnelplans'))\r\n| where (type !~ ('microsoft.hdinsight/clusterpools/clusters'))\r\n| where (type !~ ('microsoft.hdinsight/clusterpools'))\r\n| where (type !~ ('microsoft.healthmodel/healthmodels'))\r\n| where (type !~ ('microsoft.hybridcompute/machinesesu'))\r\n| where (type !~ ('microsoft.network/virtualhubs')) or ((kind =~ ('routeserver')))\r\n| where (type !~ ('microsoft.metaverse/metaverses'))\r\n| where (type !~ ('microsoft.modsimworkbench/workbenches/chambers'))\r\n| where (type !~ ('microsoft.modsimworkbench/workbenches/chambers/connectors'))\r\n| where (type !~ ('microsoft.modsimworkbench/workbenches/chambers/files'))\r\n| where (type !~ ('microsoft.modsimworkbench/workbenches/chambers/filerequests'))\r\n| where (type !~ ('microsoft.modsimworkbench/workbenches/chambers/licenses'))\r\n| where (type !~ ('microsoft.modsimworkbench/workbenches/chambers/storages'))\r\n| where (type !~ ('microsoft.modsimworkbench/workbenches/chambers/workloads'))\r\n| where (type !~ ('microsoft.modsimworkbench/workbenches/sharedstorages'))\r\n| where (type !~ ('microsoft.modsimworkbench/workbenches'))\r\n| where (type !~ ('microsoft.insights/diagnosticsettings'))\r\n| where not((type =~ ('microsoft.network/serviceendpointpolicies')) and ((kind =~ ('internal'))))\r\n| where (type !~ ('microsoft.openlogisticsplatform/workspaces'))\r\n| where (type !~ ('microsoft.scom/managedinstances'))\r\n| where (type !~ ('microsoft.orbital/edgesites'))\r\n| where (type !~ ('microsoft.orbital/groundstations'))\r\n| where (type !~ ('microsoft.orbital/l2connections'))\r\n| where (type !~ ('microsoft.recommendationsservice/accounts/modeling'))\r\n| where (type !~ ('microsoft.recommendationsservice/accounts/serviceendpoints'))\r\n| where (type !~ ('microsoft.recoveryservicesbvtd/vaults'))\r\n| where (type !~ ('microsoft.recoveryservicesbvtd2/vaults'))\r\n| where (type !~ ('microsoft.recoveryservicesintd/vaults'))\r\n| where (type !~ ('microsoft.recoveryservicesintd2/vaults'))\r\n| where (type !~ ('microsoft.deploymentmanager/rollouts'))\r\n| where (type !~ ('microsoft.datareplication/replicationvaults'))\r\n| where (type !~ ('microsoft.storage/storagetasks'))\r\n| where not((type =~ ('microsoft.synapse/workspaces/sqlpools')) and ((kind =~ ('v3'))))\r\n| where (type !~ ('microsoft.mission/catalogs'))\r\n| where (type !~ ('microsoft.mission/communities'))\r\n| where (type !~ ('microsoft.mission/virtualenclaves/endpoints'))\r\n| where (type !~ ('microsoft.mission/externalconnections'))\r\n| where (type !~ ('microsoft.mission/internalconnections'))\r\n| where (type !~ ('microsoft.mission/virtualenclaves'))\r\n| where (type !~ ('microsoft.mission/virtualenclaves/workloads'))\r\n| where (type !~ ('microsoft.windowspushnotificationservices/registrations'))\r\n| where (type !~ ('microsoft.manufacturingplatform/manufacturingdataservices'))\r\n| where not((type =~ ('microsoft.sql/servers/databases')) and ((kind in~ ('system','v2.0,system','v12.0,system','v12.0,user,datawarehouse,gen2,analytics'))))\r\n| where not((type =~ ('microsoft.sql/servers')) and ((kind =~ ('v12.0,analytics'))))\r\n| project name,resourceGroup,version,edition,locationDisplayName,subscriptionDisplayName,managementMode,licenseType,id,type,kind,location,subscriptionId,tags\r\n| sort by (tolower(tostring(name))) asc",
        "size": 0,
        "title": "List Of SQL servers without Azure Hybrid Benefits",
        "showExportToExcel": true,
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "value::all"
        ]
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "hybenef"
        },
        {
          "parameterName": "selTabhb",
          "comparison": "isEqualTo",
          "value": "sqlshb"
        },
        {
          "parameterName": "selsubtab",
          "comparison": "isEqualTo",
          "value": "sqlvm"
        }
      ],
      "customWidth": "65",
      "name": "query - 159"
    },
    {
      "type": 1,
      "content": {
        "json": "Save up to 80% over standard pay-as-you-go rate for Windows Server with Azure Hybrid Benefit and Azure Reserved VM Instance.\r\nOnly on Azure can you apply or convert existing Linux VM's and drop the software cost entirely",
        "style": "upsell"
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selTabhb",
          "comparison": "isEqualTo",
          "value": "oslhb"
        },
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "hybenef"
        }
      ],
      "name": "text - 155"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "// Run query to see results.\r\nresources\r\n| where type in~ (\r\n        \"microsoft.compute/virtualmachines\",\r\n        \"microsoft.scvmm/virtualmachines\",\r\n\t\t\"microsoft.connectedvmwarevsphere/virtualmachines\",\r\n\t\t\"microsoft.azurestackhci/virtualmachines\")\r\n| extend nics=array_length(properties.networkProfile.networkInterfaces)\r\n| extend customLocation = extract(@\"(?:[^\\/])+$\", 0, tostring(extendedLocation.name))\r\n| extend modLocation = case (\r\n\t\tlocation =~ 'eastus', 'East US',\r\n\t\tlocation =~ 'eastus2', 'East US2',\r\n\t\tlocation =~ 'westus', 'West US',\r\n\t\tlocation =~ 'westus2', 'West US2',\r\n\t\tlocation =~ 'southcentralus', 'South Central US',\r\n\t\tlocation =~ 'westeurope', 'West Europe',\r\n\t\tlocation =~ 'southeastasia', 'South East Asia',\r\n\t\tlocation =~ 'northeurope', 'North Europe',\r\n\t\tlocation =~ 'centralUS', 'Central US',\r\n\t\tlocation)\r\n| extend location = iff(isnotempty(customLocation) and isnotnull(customLocation), strcat(customLocation, \" (\", modLocation, \")\"), location)\r\n| mvexpand nic=properties.networkProfile.networkInterfaces limit 400\r\n| where (type == \"microsoft.compute/virtualmachines\" and nics == 1 or nic.properties.primary =~ 'true' or isempty(nic)) or type <> \"microsoft.compute/virtualmachines\"\r\n| project\r\n        id,\r\n        name,\r\n        resourceGroup,\r\n        type,\r\n        kind,\r\n        location,\r\n        edgeZone = iff(tostring(extendedLocation.type) =~ 'EdgeZone', tostring(extendedLocation.name), '-'),\r\n        subscriptionId,\r\n        tags,\r\n        licenseType=case(\r\n            properties.licenseType =~ 'Windows_Server', 'Azure Hybrid Benefit for Windows',\r\n            properties.licenseType =~ 'Windows_Client', 'Windows client with multi-tenant hosting',\r\n            properties.licenseType =~ 'RHEL_BYOS', 'Azure Hybrid Benefit for Redhat',\r\n            properties.licenseType =~ 'SLES_BYOS', 'Azure Hybrid Benefit for SUSE',\r\n            'Not enabled'\r\n        ),\r\n        nics = coalesce(tostring(nics), '-'),\r\n        zones = coalesce(tostring(zones[0]), '-'),\r\n        os = case(\r\n\t\t\tproperties.storageProfile.osDisk.osType =~ 'Windows' or properties.osProfile.osType =~ 'Windows', 'Windows',\r\n\t\t\tproperties.storageProfile.osDisk.osType =~ 'Linux' or properties.osProfile.osType =~ 'Linux', 'Linux',\r\n\t\t\t'-'\r\n\t\t),\r\n        publisher = coalesce(\r\n            tostring(properties.storageProfile.imageReference.publisher),\r\n            '-'\r\n        ),\r\n        offer = coalesce(\r\n            tostring(properties.storageProfile.imageReference.offer),\r\n            '-'\r\n        ),\r\n        sku = coalesce(\r\n            tostring(properties.storageProfile.imageReference.sku),\r\n            '-'\r\n        ),\r\n        usesManagedDisks = iff(\r\n            isnotempty(properties.storageProfile.osDisk.managedDisk), 'Yes',\r\n            'No'\r\n        ),\r\n        disks = case(\r\n\t\t\t\ttype == \"microsoft.compute/virtualmachines\", tostring(iff(isnotempty(properties.storageProfile.osDisk) and isnotnull(properties.storageProfile.osDisk), 1, 0) + coalesce(array_length(properties.storageProfile.dataDisks), 0)),\r\n\t\t\t\ttype == \"microsoft.azurestackhci/virtualmachines\", tostring(iff(isnotnull(properties.storageProfile.dataDisks) and isnotempty(properties.storageProfile.dataDisks), array_length(properties.storageProfile.dataDisks), 0)),\r\n\t\t\t\ttype == \"microsoft.connectedvmwarevsphere/virtualmachines\" or type == \"microsoft.scvmm/virtualmachines\", tostring(iff(isnotnull(properties.storageProfile.disks) and isnotempty(properties.storageProfile.disks), array_length(properties.storageProfile.disks), 0)),\r\n\t\t\t\t'-'\r\n\t\t),\r\n        source = coalesce(\r\n            case(\r\n                (isnotnull(properties.storageProfile.imageReference.publisher) and isnotempty(properties.storageProfile.imageReference.publisher)), 'Marketplace',\r\n                (isnotnull(properties.storageProfile.imageReference.id) and isnotempty(properties.storageProfile.imageReference.id) and properties.storageProfile.imageReference contains \"Microsoft.Compute/images\"), 'Image',\r\n                (isnotnull(properties.storageProfile.imageReference.id) and isnotempty(properties.storageProfile.imageReference.id) and properties.storageProfile.imageReference contains \"Microsoft.Compute/galleries\"), 'Shared image',\r\n                'Disk'\r\n            ),\r\n            '-'\r\n        ),\r\n        spotEvictionPolicy = case(\r\n            (properties.priority =~ \"Low\" or properties.priority =~ \"Spot\") and properties.evictionPolicy =~ \"Deallocate\", 'Stop / Deallocate',\r\n            (properties.priority =~ \"Low\" or properties.priority =~ \"Spot\"), 'Delete',\r\n            '-'\r\n        ),\r\n        spotEvictionType = case(\r\n            (properties.priority =~ \"Low\" or properties.priority =~ \"Spot\") and properties.billingProfile.maxPrice == -1, 'Capacity',\r\n            (properties.priority =~ \"Low\" or properties.priority =~ \"Spot\"), 'Price or capacity',\r\n            '-'\r\n        ),\r\n        spotPrice = case(\r\n            (properties.priority =~ \"Low\" or properties.priority =~ \"Spot\") and isnotnull(properties.billingProfile.maxPrice) and isnotempty(properties.billingProfile.maxPrice) and properties.billingProfile.maxPrice != -1, strcat(\"$ \", round(toreal(properties.billingProfile.maxPrice), 2)),\r\n            (properties.priority =~ \"Low\" or properties.priority =~ \"Spot\") and (isnull(properties.billingProfile.maxPrice) or isempty(properties.billingProfile.maxPrice)), 'Capacity',\r\n            '-'\r\n        ),\r\n        proximityPlacementGroup = coalesce(extract('/proximityPlacementGroups/(.*)', 1, tostring(properties.proximityPlacementGroup.id)), '-'),\r\n        host = coalesce(extract('/hosts/(.*)', 1, tostring(properties.host.id)), '-'),\r\n        availabilitySet = coalesce(extract('/availabilitySets/(.*)', 1, tostring(properties.availabilitySet.id)), '-'),\r\n        vmSize = coalesce(tostring(properties.hardwareProfile.vmSize), '-'),\r\n        computerName = coalesce(tostring(properties.extended.instanceView.computerName), tostring(properties.osProfile.computerName), '-'),\r\n        hyperVGeneration = coalesce(tostring(properties.extended.instanceView.hyperVGeneration), '-'),\r\n        securityType = case(\r\n            isnull(properties.securityProfile.securityType) or (properties.securityProfile.securityType =~ \"Standard\"), 'Standard',\r\n            properties.securityProfile.securityType =~ \"TrustedLaunch\", 'Trusted launch',\r\n            properties.securityProfile.securityType =~ \"ConfidentialVm\", 'Confidential',\r\n            '-'\r\n        ),\r\n        nicId = tostring(tolower(nic.id)),\r\n        powerState = coalesce(properties.powerState, properties.status.powerState, tostring(split(tolower(properties.extended.instanceView.powerState.code), \"powerstate/\")[1])),\r\n        provisioningState = tostring(properties.provisioningState),\r\n        hibernationState = tostring(split(tolower(properties.extended.instanceView.hibernationState.code), \"hibernationstate/\")[1]),\r\n\t\tscaleSet = coalesce(extract('/virtualMachineScaleSets/(.*)', 1, tostring(properties.virtualMachineScaleSet.id)), '-'),\r\n        imageId = tolower(coalesce(extract('(.*)/versions/', 1, tostring(properties.storageProfile.imageReference.id)), tostring(properties.storageProfile.imageReference.id)))\r\n| join kind=leftouter hint.strategy=shuffle (data \r\n            | where type =~ 'microsoft.compute/galleries/images'\r\n            | project\r\n                imageId = tolower(id),\r\n                imageDefinitionPublisher = properties.identifier.publisher,\r\n                imageDefinitionOffer = properties.identifier.offer,\r\n                imageDefinitionSku = properties.identifier.sku\r\n    )\r\n    on imageId\r\n| extend\r\n        publisher = coalesce(\r\n            tostring(imageDefinitionPublisher),\r\n            publisher\r\n        ),\r\n        offer = coalesce(\r\n            tostring(imageDefinitionOffer),\r\n            offer\r\n        ),\r\n        sku = coalesce(\r\n            tostring(imageDefinitionSku),\r\n            sku\r\n        )\r\n| join kind=leftouter hint.strategy=shuffle (data \r\n            | where type =~ 'Microsoft.Network/networkInterfaces' \r\n            | extend ipConfigsCount=array_length(properties.ipConfigurations) \r\n            | mvexpand ipconfig=properties.ipConfigurations limit 400\r\n            | where ipConfigsCount == 1 or ipconfig.properties.primary =~ 'true' \r\n            | parse kind=regex tostring(ipconfig.properties.subnet.id) with '/virtualNetworks/' virtualNetwork '/subnets/' subnet \r\n            | project\r\n                nicId=tolower(id),\r\n                publicIpId=tostring(ipconfig.properties.publicIPAddress.id),\r\n                privateIPAddress=tostring(ipconfig.properties.privateIPAddress),\r\n                subnet,\r\n                virtualNetwork,\r\n                lbReferences=array_concat(\r\n                    ipconfig.properties.loadBalancerInboundNatRules,\r\n                    ipconfig.properties.loadBalancerBackendAddressPools,\r\n                    ipconfig.properties.applicationGatewayBackendAddressPools))\r\n        on nicId\r\n| project-away nicId, nicId1\r\n| mvexpand lbRef=lbReferences limit 400\r\n| extend lbId=tolower(extract('(.*)/(inboundNatRules|backendAddressPool)', 1, tostring(lbRef.id)))\r\n| summarize tags = any(tags) by id, lbId, name, resourceGroup, type, kind, location, subscriptionId, licenseType, nics, zones, os, usesManagedDisks, publicIpId, disks, source, spotEvictionPolicy, spotEvictionType, spotPrice, proximityPlacementGroup, host, availabilitySet, vmSize, securityType, privateIPAddress, subnet, virtualNetwork, powerState, provisioningState, hibernationState, scaleSet, edgeZone, computerName, hyperVGeneration, publisher, offer, sku\r\n| join kind=leftouter hint.strategy=shuffle (data \r\n            | where type =~ 'microsoft.network/loadbalancers' or type =~ 'microsoft.network/applicationgateways' \r\n            | mvexpand fipc=properties.frontendIPConfigurations limit 400\r\n            | summarize lbPublicIpId=any(tostring(fipc.properties.publicIPAddress.id)) by lbId=tolower(id))\r\n        on lbId\r\n| summarize lbPublicIpId=any(lbPublicIpId), tags = any(tags) by id, name, resourceGroup, type, kind, location, subscriptionId, licenseType, nics, zones, os, usesManagedDisks, publicIpId, disks, source, spotEvictionPolicy, spotEvictionType, spotPrice, proximityPlacementGroup, host, availabilitySet, vmSize, securityType, privateIPAddress, subnet, virtualNetwork, powerState, provisioningState, hibernationState, scaleSet, edgeZone, computerName, hyperVGeneration, publisher, offer, sku\r\n| extend publicIpId=tolower(iff(isnotempty(publicIpId), publicIpId, lbPublicIpId))\r\n| project-away lbPublicIpId\r\n| join kind=leftouter hint.strategy=shuffle (data \r\n            | where type =~ 'microsoft.network/publicipaddresses' \r\n            | project publicIpId=tolower(id), publicIpAddress=tostring(properties.ipAddress), publicDnsName=tostring(properties.dnsSettings.fqdn))\r\n        on publicIpId\r\n| project-away publicIpId, publicIpId1\r\n| project id,\r\n        name,\r\n        resourceGroup,\r\n        type,\r\n        kind,\r\n        location,\r\n        subscriptionId,\r\n        tags,\r\n        nics,\r\n        os,\r\n        publisher,\r\n        offer,\r\n        sku,\r\n        status = case(\r\n            provisioningState =~ 'CREATING', 'Creating',\r\n            provisioningState =~ 'DELETING', 'Deleting',\r\n            (provisioningState =~ 'FAILED' and isnotnull(powerState) and isnotempty(powerState)), case(\r\n                powerState =~ 'RUNNING', 'Running',\r\n                powerState =~ 'POWEREDON', 'Running',\r\n                powerState =~ 'STOPPED', 'Stopped',\r\n                powerState =~ 'DEALLOCATED', case(\r\n                    hibernationState =~ 'HIBERNATED', 'Hibernated (deallocated)',\r\n                    'Stopped (deallocated)'\r\n                ),\r\n                powerState =~ 'POWEREDOFF', 'Powered off',\r\n                powerState =~ 'SUSPENDED', 'Suspended',\r\n                'Unknown'\r\n            ),\r\n            provisioningState =~ 'FAILED', 'Failed',\r\n            (provisioningState =~ 'SUCCEEDED' and isnotnull(powerState) and isnotempty(powerState)), case(\r\n                powerState =~ 'RUNNING', 'Running',\r\n                powerState =~ 'POWEREDON', 'Running',\r\n                powerState =~ 'STOPPED', 'Stopped',\r\n                powerState =~ 'DEALLOCATED', case(\r\n                    hibernationState =~ 'HIBERNATED', 'Hibernated (deallocated)',\r\n                    'Stopped (deallocated)'\r\n                ),\r\n                powerState =~ 'POWEREDOFF', 'Powered off',\r\n                powerState =~ 'SUSPENDED', 'Suspended',\r\n                powerState =~ 'STARTING', 'Starting',\r\n                'Unknown'\r\n            ),\r\n            (provisioningState =~ 'UPDATING' and isnotnull(powerState) and isnotempty(powerState)), case(\r\n                powerState =~ 'DEALLOCATING', 'Deallocating',\r\n                powerState =~ 'RUNNING', 'Running',\r\n                powerState =~ 'STARTING', 'Starting',\r\n                powerState =~ 'STOPPING', 'Stopping',\r\n                'Updating'\r\n            ),\r\n            'Unknown'\r\n        ),\r\n        disks,\r\n        availabilitySet,\r\n        vmSize,\r\n        securityType,\r\n        virtualNetwork = coalesce(virtualNetwork, '-'),\r\n        subnet = coalesce(subnet, '-'),\r\n        privateIPAddress = coalesce(privateIPAddress, '-'),\r\n        publicDnsName = coalesce(publicDnsName, '-'),\r\n        publicIpAddress = coalesce(publicIpAddress, '-'),\r\n        zones,\r\n        usesManagedDisks,\r\n        licenseType,\r\n        source,\r\n        spotEvictionPolicy,\r\n        spotEvictionType,\r\n        spotPrice,\r\n        proximityPlacementGroup,\r\n        host,\r\n\t\tscaleSet = coalesce(scaleSet, '-'),\r\n\t\tedgeZone = coalesce(edgeZone, '-'),\r\n        computerName,\r\n        hyperVGeneration\r\n| where (type !~ ('paloaltonetworks.cloudngfw/firewalls'))\r\n| where (type !~ ('paloaltonetworks.cloudngfw/globalrulestacks'))\r\n| where (type !~ ('paloaltonetworks.cloudngfw/localrulestacks'))\r\n| where (type !~ ('microsoft.azureactivedirectory/ciamdirectories'))\r\n| where (type !~ ('microsoft.agfoodplatform/farmbeats'))\r\n| where (type !~ ('microsoft.anybuild/clusters'))\r\n| where (type !~ ('microsoft.cdn/profiles/customdomains'))\r\n| where (type !~ ('microsoft.cdn/profiles/afdendpoints'))\r\n| where (type !~ ('microsoft.cdn/profiles/origingroups/origins'))\r\n| where (type !~ ('microsoft.cdn/profiles/origingroups'))\r\n| where (type !~ ('microsoft.cdn/profiles/afdendpoints/routes'))\r\n| where (type !~ ('microsoft.cdn/profiles/rulesets/rules'))\r\n| where (type !~ ('microsoft.cdn/profiles/rulesets'))\r\n| where (type !~ ('microsoft.cdn/profiles/secrets'))\r\n| where (type !~ ('microsoft.cdn/profiles/securitypolicies'))\r\n| where (type !~ ('microsoft.cloudtest/accounts'))\r\n| where (type !~ ('microsoft.cloudtest/hostedpools'))\r\n| where (type !~ ('microsoft.cloudtest/images'))\r\n| where (type !~ ('microsoft.cloudtest/pools'))\r\n| where (type !~ ('microsoft.codesigning/codesigningaccounts'))\r\n| where (type !~ ('microsoft.kubernetes/connectedclusters/microsoft.kubernetesconfiguration/namespaces'))\r\n| where (type !~ ('microsoft.containerservice/managedclusters/microsoft.kubernetesconfiguration/namespaces'))\r\n| where (type !~ ('microsoft.kubernetes/connectedclusters/microsoft.kubernetesconfiguration/fluxconfigurations'))\r\n| where (type !~ ('microsoft.containerservice/managedclusters/microsoft.kubernetesconfiguration/fluxconfigurations'))\r\n| where (type !~ ('microsoft.portalservices/extensions/deployments'))\r\n| where (type !~ ('microsoft.portalservices/extensions'))\r\n| where (type !~ ('microsoft.portalservices/extensions/slots'))\r\n| where (type !~ ('microsoft.portalservices/extensions/versions'))\r\n| where (type !~ ('microsoft.databaseinsights/databasemonitoringagents'))\r\n| where (type !~ ('microsoft.datacollaboration/workspaces'))\r\n| where (type !~ ('microsoft.compute/locations/communitygalleries/images'))\r\n| where (type !~ ('microsoft.documentdb/mongoclusters'))\r\n| where (type !~ ('microsoft.eventgrid/namespaces'))\r\n| where (type !~ ('microsoft.hdinsight/clusterpools/clusters'))\r\n| where (type !~ ('microsoft.hdinsight/clusterpools'))\r\n| where (type !~ ('microsoft.network/virtualhubs')) or ((kind =~ ('routeserver')))\r\n| where (type !~ ('microsoft.metaverse/metaverses'))\r\n| where (type !~ ('microsoft.modsimworkbench/instances/chambers'))\r\n| where (type !~ ('microsoft.modsimworkbench/instances/chambers/connectors'))\r\n| where (type !~ ('microsoft.modsimworkbench/instances/chambers/files'))\r\n| where (type !~ ('microsoft.modsimworkbench/instances/chambers/filerequests'))\r\n| where (type !~ ('microsoft.modsimworkbench/instances/chambers/licenses'))\r\n| where (type !~ ('microsoft.modsimworkbench/instances/chambers/storages'))\r\n| where (type !~ ('microsoft.modsimworkbench/instances/chambers/workloads'))\r\n| where (type !~ ('microsoft.modsimworkbench/instances'))\r\n| where (type !~ ('microsoft.modsimworkbench/instances/sharedstorages'))\r\n| where (type !~ ('microsoft.insights/diagnosticsettings'))\r\n| where (type !~ ('microsoft.insights/scheduledqueryrules'))\r\n| where not((type =~ ('microsoft.network/serviceendpointpolicies')) and ((kind =~ ('internal'))))\r\n| where (type !~ ('microsoft.openlogisticsplatform/workspaces'))\r\n| where (type !~ ('microsoft.scom/managedinstances'))\r\n| where (type !~ ('microsoft.orbital/edgesites'))\r\n| where (type !~ ('microsoft.orbital/groundstations'))\r\n| where (type !~ ('microsoft.orbital/l2connections'))\r\n| where (type !~ ('microsoft.workloads/phpworkloads'))\r\n| where (type !~ ('microsoft.recommendationsservice/accounts/modeling'))\r\n| where (type !~ ('microsoft.recommendationsservice/accounts/serviceendpoints'))\r\n| where (type !~ ('microsoft.recoveryservicesbvtd/vaults'))\r\n| where (type !~ ('microsoft.recoveryservicesbvtd2/vaults'))\r\n| where (type !~ ('microsoft.recoveryservicesintd/vaults'))\r\n| where (type !~ ('microsoft.recoveryservicesintd2/vaults'))\r\n| where (type !~ ('microsoft.deploymentmanager/rollouts'))\r\n| where (type !~ ('microsoft.datareplication/replicationvaults'))\r\n| where (type !~ ('microsoft.storagecache/amlfilesystems'))\r\n| where (type !~ ('microsoft.storage/storagetasks'))\r\n| where not((type =~ ('microsoft.synapse/workspaces/sqlpools')) and ((kind =~ ('v3'))))\r\n| where (type !~ ('microsoft.windowspushnotificationservices/registrations'))\r\n| where not((type =~ ('microsoft.sql/servers/databases')) and ((kind in~ ('system','v2.0,system','v12.0,system','v12.0,user,datawarehouse,gen2,analytics'))))\r\n| where not((type =~ ('microsoft.sql/servers')) and ((kind =~ ('v12.0,analytics'))))\r\n| where ((type in~ ('microsoft.compute/virtualmachines','microsoft.scvmm/virtualmachines','microsoft.azurestackhci/virtualmachines'))) or ((type =~ ('microsoft.connectedvmwarevsphere/virtualmachines')) and ((kind =~ ('AVS')))) or ((type =~ ('microsoft.connectedvmwarevsphere/virtualmachines')) and ((kind =~ ('VMware'))))\r\n| extend _licenseType=tolower(tostring(licenseType))\r\n| summarize licenseType=any(licenseType),licenseTypeCount=count() by _licenseType\r\n| sort by (licenseTypeCount) desc,(_licenseType) asc\r\n| project-away _licenseType",
              "size": 0,
              "title": "OS Level Distribution of hybrid benefits ",
              "exportFieldName": "series",
              "exportParameterName": "selSev",
              "exportDefaultValue": "*",
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "value::all"
              ],
              "visualization": "piechart"
            },
            "customWidth": "50",
            "conditionalVisibility": {
              "parameterName": "selectedTab",
              "comparison": "isEqualTo",
              "value": "hybenef"
            },
            "name": "query - 78"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "// Run query to see results.\r\nresources\r\n| where type in~ (\r\n        \"microsoft.compute/virtualmachines\",\r\n        \"microsoft.scvmm/virtualmachines\",\r\n\t\t\"microsoft.connectedvmwarevsphere/virtualmachines\",\r\n\t\t\"microsoft.azurestackhci/virtualmachines\")\r\n| extend nics=array_length(properties.networkProfile.networkInterfaces)\r\n| extend customLocation = extract(@\"(?:[^\\/])+$\", 0, tostring(extendedLocation.name))\r\n| extend modLocation = case (\r\n\t\tlocation =~ 'eastus', 'East US',\r\n\t\tlocation =~ 'eastus2', 'East US2',\r\n\t\tlocation =~ 'westus', 'West US',\r\n\t\tlocation =~ 'westus2', 'West US2',\r\n\t\tlocation =~ 'southcentralus', 'South Central US',\r\n\t\tlocation =~ 'westeurope', 'West Europe',\r\n\t\tlocation =~ 'southeastasia', 'South East Asia',\r\n\t\tlocation =~ 'northeurope', 'North Europe',\r\n\t\tlocation =~ 'centralUS', 'Central US',\r\n\t\tlocation)\r\n| extend location = iff(isnotempty(customLocation) and isnotnull(customLocation), strcat(customLocation, \" (\", modLocation, \")\"), location)\r\n| mvexpand nic=properties.networkProfile.networkInterfaces limit 400\r\n| where (type == \"microsoft.compute/virtualmachines\" and nics == 1 or nic.properties.primary =~ 'true' or isempty(nic)) or type <> \"microsoft.compute/virtualmachines\"\r\n| project\r\n        id,\r\n        name,\r\n        resourceGroup,\r\n        type,\r\n        kind,\r\n        location,\r\n        edgeZone = iff(tostring(extendedLocation.type) =~ 'EdgeZone', tostring(extendedLocation.name), '-'),\r\n        subscriptionId,\r\n        tags,\r\n        licenseType=case(\r\n            properties.licenseType =~ 'Windows_Server', 'Azure Hybrid Benefit for Windows',\r\n            properties.licenseType =~ 'Windows_Client', 'Windows client with multi-tenant hosting',\r\n            properties.licenseType =~ 'RHEL_BYOS', 'Azure Hybrid Benefit for Redhat',\r\n            properties.licenseType =~ 'SLES_BYOS', 'Azure Hybrid Benefit for SUSE',\r\n            'Not enabled'\r\n        ),\r\n        nics = coalesce(tostring(nics), '-'),\r\n        zones = coalesce(tostring(zones[0]), '-'),\r\n        os = case(\r\n\t\t\tproperties.storageProfile.osDisk.osType =~ 'Windows' or properties.osProfile.osType =~ 'Windows', 'Windows',\r\n\t\t\tproperties.storageProfile.osDisk.osType =~ 'Linux' or properties.osProfile.osType =~ 'Linux', 'Linux',\r\n\t\t\t'-'\r\n\t\t),\r\n        publisher = coalesce(\r\n            tostring(properties.storageProfile.imageReference.publisher),\r\n            '-'\r\n        ),\r\n        offer = coalesce(\r\n            tostring(properties.storageProfile.imageReference.offer),\r\n            '-'\r\n        ),\r\n        sku = coalesce(\r\n            tostring(properties.storageProfile.imageReference.sku),\r\n            '-'\r\n        ),\r\n        usesManagedDisks = iff(\r\n            isnotempty(properties.storageProfile.osDisk.managedDisk), 'Yes',\r\n            'No'\r\n        ),\r\n        disks = case(\r\n\t\t\t\ttype == \"microsoft.compute/virtualmachines\", tostring(iff(isnotempty(properties.storageProfile.osDisk) and isnotnull(properties.storageProfile.osDisk), 1, 0) + coalesce(array_length(properties.storageProfile.dataDisks), 0)),\r\n\t\t\t\ttype == \"microsoft.azurestackhci/virtualmachines\", tostring(iff(isnotnull(properties.storageProfile.dataDisks) and isnotempty(properties.storageProfile.dataDisks), array_length(properties.storageProfile.dataDisks), 0)),\r\n\t\t\t\ttype == \"microsoft.connectedvmwarevsphere/virtualmachines\" or type == \"microsoft.scvmm/virtualmachines\", tostring(iff(isnotnull(properties.storageProfile.disks) and isnotempty(properties.storageProfile.disks), array_length(properties.storageProfile.disks), 0)),\r\n\t\t\t\t'-'\r\n\t\t),\r\n        source = coalesce(\r\n            case(\r\n                (isnotnull(properties.storageProfile.imageReference.publisher) and isnotempty(properties.storageProfile.imageReference.publisher)), 'Marketplace',\r\n                (isnotnull(properties.storageProfile.imageReference.id) and isnotempty(properties.storageProfile.imageReference.id) and properties.storageProfile.imageReference contains \"Microsoft.Compute/images\"), 'Image',\r\n                (isnotnull(properties.storageProfile.imageReference.id) and isnotempty(properties.storageProfile.imageReference.id) and properties.storageProfile.imageReference contains \"Microsoft.Compute/galleries\"), 'Shared image',\r\n                'Disk'\r\n            ),\r\n            '-'\r\n        ),\r\n        spotEvictionPolicy = case(\r\n            (properties.priority =~ \"Low\" or properties.priority =~ \"Spot\") and properties.evictionPolicy =~ \"Deallocate\", 'Stop / Deallocate',\r\n            (properties.priority =~ \"Low\" or properties.priority =~ \"Spot\"), 'Delete',\r\n            '-'\r\n        ),\r\n        spotEvictionType = case(\r\n            (properties.priority =~ \"Low\" or properties.priority =~ \"Spot\") and properties.billingProfile.maxPrice == -1, 'Capacity',\r\n            (properties.priority =~ \"Low\" or properties.priority =~ \"Spot\"), 'Price or capacity',\r\n            '-'\r\n        ),\r\n        spotPrice = case(\r\n            (properties.priority =~ \"Low\" or properties.priority =~ \"Spot\") and isnotnull(properties.billingProfile.maxPrice) and isnotempty(properties.billingProfile.maxPrice) and properties.billingProfile.maxPrice != -1, strcat(\"$ \", round(toreal(properties.billingProfile.maxPrice), 2)),\r\n            (properties.priority =~ \"Low\" or properties.priority =~ \"Spot\") and (isnull(properties.billingProfile.maxPrice) or isempty(properties.billingProfile.maxPrice)), 'Capacity',\r\n            '-'\r\n        ),\r\n        proximityPlacementGroup = coalesce(extract('/proximityPlacementGroups/(.*)', 1, tostring(properties.proximityPlacementGroup.id)), '-'),\r\n        host = coalesce(extract('/hosts/(.*)', 1, tostring(properties.host.id)), '-'),\r\n        availabilitySet = coalesce(extract('/availabilitySets/(.*)', 1, tostring(properties.availabilitySet.id)), '-'),\r\n        vmSize = coalesce(tostring(properties.hardwareProfile.vmSize), '-'),\r\n        computerName = coalesce(tostring(properties.extended.instanceView.computerName), tostring(properties.osProfile.computerName), '-'),\r\n        hyperVGeneration = coalesce(tostring(properties.extended.instanceView.hyperVGeneration), '-'),\r\n        securityType = case(\r\n            isnull(properties.securityProfile.securityType) or (properties.securityProfile.securityType =~ \"Standard\"), 'Standard',\r\n            properties.securityProfile.securityType =~ \"TrustedLaunch\", 'Trusted launch',\r\n            properties.securityProfile.securityType =~ \"ConfidentialVm\", 'Confidential',\r\n            '-'\r\n        ),\r\n        nicId = tostring(tolower(nic.id)),\r\n        powerState = coalesce(properties.powerState, properties.status.powerState, tostring(split(tolower(properties.extended.instanceView.powerState.code), \"powerstate/\")[1])),\r\n        provisioningState = tostring(properties.provisioningState),\r\n        hibernationState = tostring(split(tolower(properties.extended.instanceView.hibernationState.code), \"hibernationstate/\")[1]),\r\n\t\tscaleSet = coalesce(extract('/virtualMachineScaleSets/(.*)', 1, tostring(properties.virtualMachineScaleSet.id)), '-'),\r\n        imageId = tolower(coalesce(extract('(.*)/versions/', 1, tostring(properties.storageProfile.imageReference.id)), tostring(properties.storageProfile.imageReference.id)))\r\n| join kind=leftouter hint.strategy=shuffle (data \r\n            | where type =~ 'microsoft.compute/galleries/images'\r\n            | project\r\n                imageId = tolower(id),\r\n                imageDefinitionPublisher = properties.identifier.publisher,\r\n                imageDefinitionOffer = properties.identifier.offer,\r\n                imageDefinitionSku = properties.identifier.sku\r\n    )\r\n    on imageId\r\n| extend\r\n        publisher = coalesce(\r\n            tostring(imageDefinitionPublisher),\r\n            publisher\r\n        ),\r\n        offer = coalesce(\r\n            tostring(imageDefinitionOffer),\r\n            offer\r\n        ),\r\n        sku = coalesce(\r\n            tostring(imageDefinitionSku),\r\n            sku\r\n        )\r\n| join kind=leftouter hint.strategy=shuffle (data \r\n            | where type =~ 'Microsoft.Network/networkInterfaces' \r\n            | extend ipConfigsCount=array_length(properties.ipConfigurations) \r\n            | mvexpand ipconfig=properties.ipConfigurations limit 400\r\n            | where ipConfigsCount == 1 or ipconfig.properties.primary =~ 'true' \r\n            | parse kind=regex tostring(ipconfig.properties.subnet.id) with '/virtualNetworks/' virtualNetwork '/subnets/' subnet \r\n            | project\r\n                nicId=tolower(id),\r\n                publicIpId=tostring(ipconfig.properties.publicIPAddress.id),\r\n                privateIPAddress=tostring(ipconfig.properties.privateIPAddress),\r\n                subnet,\r\n                virtualNetwork,\r\n                lbReferences=array_concat(\r\n                    ipconfig.properties.loadBalancerInboundNatRules,\r\n                    ipconfig.properties.loadBalancerBackendAddressPools,\r\n                    ipconfig.properties.applicationGatewayBackendAddressPools))\r\n        on nicId\r\n| project-away nicId, nicId1\r\n| mvexpand lbRef=lbReferences limit 400\r\n| extend lbId=tolower(extract('(.*)/(inboundNatRules|backendAddressPool)', 1, tostring(lbRef.id)))\r\n| summarize tags = any(tags) by id, lbId, name, resourceGroup, type, kind, location, subscriptionId, licenseType, nics, zones, os, usesManagedDisks, publicIpId, disks, source, spotEvictionPolicy, spotEvictionType, spotPrice, proximityPlacementGroup, host, availabilitySet, vmSize, securityType, privateIPAddress, subnet, virtualNetwork, powerState, provisioningState, hibernationState, scaleSet, edgeZone, computerName, hyperVGeneration, publisher, offer, sku\r\n| join kind=leftouter hint.strategy=shuffle (data \r\n            | where type =~ 'microsoft.network/loadbalancers' or type =~ 'microsoft.network/applicationgateways' \r\n            | mvexpand fipc=properties.frontendIPConfigurations limit 400\r\n            | summarize lbPublicIpId=any(tostring(fipc.properties.publicIPAddress.id)) by lbId=tolower(id))\r\n        on lbId\r\n| summarize lbPublicIpId=any(lbPublicIpId), tags = any(tags) by id, name, resourceGroup, type, kind, location, subscriptionId, licenseType, nics, zones, os, usesManagedDisks, publicIpId, disks, source, spotEvictionPolicy, spotEvictionType, spotPrice, proximityPlacementGroup, host, availabilitySet, vmSize, securityType, privateIPAddress, subnet, virtualNetwork, powerState, provisioningState, hibernationState, scaleSet, edgeZone, computerName, hyperVGeneration, publisher, offer, sku\r\n| extend publicIpId=tolower(iff(isnotempty(publicIpId), publicIpId, lbPublicIpId))\r\n| project-away lbPublicIpId\r\n| join kind=leftouter hint.strategy=shuffle (data \r\n            | where type =~ 'microsoft.network/publicipaddresses' \r\n            | project publicIpId=tolower(id), publicIpAddress=tostring(properties.ipAddress), publicDnsName=tostring(properties.dnsSettings.fqdn))\r\n        on publicIpId\r\n| project-away publicIpId, publicIpId1\r\n| project id,\r\n        name,\r\n        resourceGroup,\r\n        type,\r\n        kind,\r\n        location,\r\n        subscriptionId,\r\n        tags,\r\n        nics,\r\n        os,\r\n        publisher,\r\n        offer,\r\n        sku,\r\n        status = case(\r\n            provisioningState =~ 'CREATING', 'Creating',\r\n            provisioningState =~ 'DELETING', 'Deleting',\r\n            (provisioningState =~ 'FAILED' and isnotnull(powerState) and isnotempty(powerState)), case(\r\n                powerState =~ 'RUNNING', 'Running',\r\n                powerState =~ 'POWEREDON', 'Running',\r\n                powerState =~ 'STOPPED', 'Stopped',\r\n                powerState =~ 'DEALLOCATED', case(\r\n                    hibernationState =~ 'HIBERNATED', 'Hibernated (deallocated)',\r\n                    'Stopped (deallocated)'\r\n                ),\r\n                powerState =~ 'POWEREDOFF', 'Powered off',\r\n                powerState =~ 'SUSPENDED', 'Suspended',\r\n                'Unknown'\r\n            ),\r\n            provisioningState =~ 'FAILED', 'Failed',\r\n            (provisioningState =~ 'SUCCEEDED' and isnotnull(powerState) and isnotempty(powerState)), case(\r\n                powerState =~ 'RUNNING', 'Running',\r\n                powerState =~ 'POWEREDON', 'Running',\r\n                powerState =~ 'STOPPED', 'Stopped',\r\n                powerState =~ 'DEALLOCATED', case(\r\n                    hibernationState =~ 'HIBERNATED', 'Hibernated (deallocated)',\r\n                    'Stopped (deallocated)'\r\n                ),\r\n                powerState =~ 'POWEREDOFF', 'Powered off',\r\n                powerState =~ 'SUSPENDED', 'Suspended',\r\n                powerState =~ 'STARTING', 'Starting',\r\n                'Unknown'\r\n            ),\r\n            (provisioningState =~ 'UPDATING' and isnotnull(powerState) and isnotempty(powerState)), case(\r\n                powerState =~ 'DEALLOCATING', 'Deallocating',\r\n                powerState =~ 'RUNNING', 'Running',\r\n                powerState =~ 'STARTING', 'Starting',\r\n                powerState =~ 'STOPPING', 'Stopping',\r\n                'Updating'\r\n            ),\r\n            'Unknown'\r\n        ),\r\n        disks,\r\n        availabilitySet,\r\n        vmSize,\r\n        securityType,\r\n        virtualNetwork = coalesce(virtualNetwork, '-'),\r\n        subnet = coalesce(subnet, '-'),\r\n        privateIPAddress = coalesce(privateIPAddress, '-'),\r\n        publicDnsName = coalesce(publicDnsName, '-'),\r\n        publicIpAddress = coalesce(publicIpAddress, '-'),\r\n        zones,\r\n        usesManagedDisks,\r\n        licenseType,\r\n        source,\r\n        spotEvictionPolicy,\r\n        spotEvictionType,\r\n        spotPrice,\r\n        proximityPlacementGroup,\r\n        host,\r\n\t\tscaleSet = coalesce(scaleSet, '-'),\r\n\t\tedgeZone = coalesce(edgeZone, '-'),\r\n        computerName,\r\n        hyperVGeneration\r\n| extend subscriptionDisplayName=case(subscriptionId =~ '8eeef99c-0331-4bb6-a425-1c41d226c451','itservices-casper',subscriptionId =~ '0b451dfd-c31e-4bee-8355-dea2782ecb11','itservices-development',subscriptionId =~ '37d506fc-632d-4345-a977-e98fcb80665e','itservices-management',subscriptionId =~ '4731f0c6-7bdf-4033-8383-4f2502beb9ed','itservices-production',subscriptionId =~ 'c4032a93-b07a-44c5-ab52-3784af1edffd','itservices-qa',subscriptionId)\r\n| extend locationDisplayName=case(location =~ 'eastus','East US',location =~ 'eastus2','East US 2',location =~ 'southcentralus','South Central US',location =~ 'westus2','West US 2',location =~ 'westus3','West US 3',location =~ 'australiaeast','Australia East',location =~ 'southeastasia','Southeast Asia',location =~ 'northeurope','North Europe',location =~ 'swedencentral','Sweden Central',location =~ 'uksouth','UK South',location =~ 'westeurope','West Europe',location =~ 'centralus','Central US',location =~ 'southafricanorth','South Africa North',location =~ 'centralindia','Central India',location =~ 'eastasia','East Asia',location =~ 'japaneast','Japan East',location =~ 'koreacentral','Korea Central',location =~ 'canadacentral','Canada Central',location =~ 'francecentral','France Central',location =~ 'germanywestcentral','Germany West Central',location =~ 'norwayeast','Norway East',location =~ 'switzerlandnorth','Switzerland North',location =~ 'uaenorth','UAE North',location =~ 'brazilsouth','Brazil South',location =~ 'qatarcentral','Qatar Central',location =~ 'centralusstage','Central US (Stage)',location =~ 'eastusstage','East US (Stage)',location =~ 'eastus2stage','East US 2 (Stage)',location =~ 'northcentralusstage','North Central US (Stage)',location =~ 'southcentralusstage','South Central US (Stage)',location =~ 'westusstage','West US (Stage)',location =~ 'westus2stage','West US 2 (Stage)',location =~ 'asia','Asia',location =~ 'asiapacific','Asia Pacific',location =~ 'australia','Australia',location =~ 'brazil','Brazil',location =~ 'canada','Canada',location =~ 'europe','Europe',location =~ 'france','France',location =~ 'germany','Germany',location =~ 'global','Global',location =~ 'india','India',location =~ 'japan','Japan',location =~ 'korea','Korea',location =~ 'norway','Norway',location =~ 'singapore','Singapore',location =~ 'southafrica','South Africa',location =~ 'switzerland','Switzerland',location =~ 'uae','United Arab Emirates',location =~ 'uk','United Kingdom',location =~ 'unitedstates','United States',location =~ 'unitedstateseuap','United States EUAP',location =~ 'eastasiastage','East Asia (Stage)',location =~ 'southeastasiastage','Southeast Asia (Stage)',location =~ 'northcentralus','North Central US',location =~ 'westus','West US',location =~ 'jioindiawest','Jio India West',location =~ 'westcentralus','West Central US',location =~ 'southafricawest','South Africa West',location =~ 'australiacentral','Australia Central',location =~ 'australiacentral2','Australia Central 2',location =~ 'australiasoutheast','Australia Southeast',location =~ 'japanwest','Japan West',location =~ 'jioindiacentral','Jio India Central',location =~ 'koreasouth','Korea South',location =~ 'southindia','South India',location =~ 'westindia','West India',location =~ 'canadaeast','Canada East',location =~ 'francesouth','France South',location =~ 'germanynorth','Germany North',location =~ 'norwaywest','Norway West',location =~ 'switzerlandwest','Switzerland West',location =~ 'ukwest','UK West',location =~ 'uaecentral','UAE Central',location =~ 'brazilsoutheast','Brazil Southeast',location)\r\n| where (type !~ ('paloaltonetworks.cloudngfw/firewalls'))\r\n| where (type !~ ('paloaltonetworks.cloudngfw/globalrulestacks'))\r\n| where (type !~ ('paloaltonetworks.cloudngfw/localrulestacks'))\r\n| where (type !~ ('microsoft.azureactivedirectory/ciamdirectories'))\r\n| where (type !~ ('microsoft.agfoodplatform/farmbeats'))\r\n| where (type !~ ('microsoft.anybuild/clusters'))\r\n| where (type !~ ('microsoft.cdn/profiles/customdomains'))\r\n| where (type !~ ('microsoft.cdn/profiles/afdendpoints'))\r\n| where (type !~ ('microsoft.cdn/profiles/origingroups/origins'))\r\n| where (type !~ ('microsoft.cdn/profiles/origingroups'))\r\n| where (type !~ ('microsoft.cdn/profiles/afdendpoints/routes'))\r\n| where (type !~ ('microsoft.cdn/profiles/rulesets/rules'))\r\n| where (type !~ ('microsoft.cdn/profiles/rulesets'))\r\n| where (type !~ ('microsoft.cdn/profiles/secrets'))\r\n| where (type !~ ('microsoft.cdn/profiles/securitypolicies'))\r\n| where (type !~ ('microsoft.cloudtest/accounts'))\r\n| where (type !~ ('microsoft.cloudtest/hostedpools'))\r\n| where (type !~ ('microsoft.cloudtest/images'))\r\n| where (type !~ ('microsoft.cloudtest/pools'))\r\n| where (type !~ ('microsoft.codesigning/codesigningaccounts'))\r\n| where (type !~ ('microsoft.kubernetes/connectedclusters/microsoft.kubernetesconfiguration/namespaces'))\r\n| where (type !~ ('microsoft.containerservice/managedclusters/microsoft.kubernetesconfiguration/namespaces'))\r\n| where (type !~ ('microsoft.kubernetes/connectedclusters/microsoft.kubernetesconfiguration/fluxconfigurations'))\r\n| where (type !~ ('microsoft.containerservice/managedclusters/microsoft.kubernetesconfiguration/fluxconfigurations'))\r\n| where (type !~ ('microsoft.portalservices/extensions/deployments'))\r\n| where (type !~ ('microsoft.portalservices/extensions'))\r\n| where (type !~ ('microsoft.portalservices/extensions/slots'))\r\n| where (type !~ ('microsoft.portalservices/extensions/versions'))\r\n| where (type !~ ('microsoft.databasewatcher/watchers'))\r\n| where (type !~ ('microsoft.datacollaboration/workspaces'))\r\n| where (type !~ ('microsoft.compute/locations/communitygalleries/images'))\r\n| where (type !~ ('microsoft.documentdb/mongoclusters'))\r\n| where (type !~ ('microsoft.eventgrid/namespaces'))\r\n| where (type !~ ('microsoft.hdinsight/clusterpools/clusters'))\r\n| where (type !~ ('microsoft.hdinsight/clusterpools'))\r\n| where (type !~ ('microsoft.network/virtualhubs')) or ((kind =~ ('routeserver')))\r\n| where (type !~ ('microsoft.metaverse/metaverses'))\r\n| where (type !~ ('microsoft.modsimworkbench/instances/chambers'))\r\n| where (type !~ ('microsoft.modsimworkbench/instances/chambers/connectors'))\r\n| where (type !~ ('microsoft.modsimworkbench/instances/chambers/files'))\r\n| where (type !~ ('microsoft.modsimworkbench/instances/chambers/filerequests'))\r\n| where (type !~ ('microsoft.modsimworkbench/instances/chambers/licenses'))\r\n| where (type !~ ('microsoft.modsimworkbench/instances/chambers/storages'))\r\n| where (type !~ ('microsoft.modsimworkbench/instances/chambers/workloads'))\r\n| where (type !~ ('microsoft.modsimworkbench/instances'))\r\n| where (type !~ ('microsoft.modsimworkbench/instances/sharedstorages'))\r\n| where (type !~ ('microsoft.insights/diagnosticsettings'))\r\n| where (type !~ ('microsoft.insights/scheduledqueryrules'))\r\n| where not((type =~ ('microsoft.network/serviceendpointpolicies')) and ((kind =~ ('internal'))))\r\n| where (type !~ ('microsoft.openlogisticsplatform/workspaces'))\r\n| where (type !~ ('microsoft.scom/managedinstances'))\r\n| where (type !~ ('microsoft.orbital/edgesites'))\r\n| where (type !~ ('microsoft.orbital/groundstations'))\r\n| where (type !~ ('microsoft.orbital/l2connections'))\r\n| where (type !~ ('microsoft.workloads/phpworkloads'))\r\n| where (type !~ ('microsoft.recommendationsservice/accounts/modeling'))\r\n| where (type !~ ('microsoft.recommendationsservice/accounts/serviceendpoints'))\r\n| where (type !~ ('microsoft.recoveryservicesbvtd/vaults'))\r\n| where (type !~ ('microsoft.recoveryservicesbvtd2/vaults'))\r\n| where (type !~ ('microsoft.recoveryservicesintd/vaults'))\r\n| where (type !~ ('microsoft.recoveryservicesintd2/vaults'))\r\n| where (type !~ ('microsoft.deploymentmanager/rollouts'))\r\n| where (type !~ ('microsoft.datareplication/replicationvaults'))\r\n| where (type !~ ('microsoft.storagecache/amlfilesystems'))\r\n| where (type !~ ('microsoft.storage/storagetasks'))\r\n| where not((type =~ ('microsoft.synapse/workspaces/sqlpools')) and ((kind =~ ('v3'))))\r\n| where (type !~ ('microsoft.windowspushnotificationservices/registrations'))\r\n| where not((type =~ ('microsoft.sql/servers/databases')) and ((kind in~ ('system','v2.0,system','v12.0,system','v12.0,user,datawarehouse,gen2,analytics'))))\r\n| where not((type =~ ('microsoft.sql/servers')) and ((kind =~ ('v12.0,analytics'))))\r\n| where ((type in~ ('microsoft.compute/virtualmachines','microsoft.scvmm/virtualmachines','microsoft.azurestackhci/virtualmachines'))) or ((type =~ ('microsoft.connectedvmwarevsphere/virtualmachines')) and ((kind =~ ('AVS')))) or ((type =~ ('microsoft.connectedvmwarevsphere/virtualmachines')) and ((kind =~ ('VMware'))))\r\n| project name,subscriptionDisplayName,resourceGroup,locationDisplayName,status,os,licenseType,id,type,kind,location,subscriptionId,tags\r\n| where licenseType == \"{selSev}\" or \"{selSev}\" == \"*\"\r\n| sort by (tolower(tostring(name))) asc\r\n",
              "size": 0,
              "title": "List of VM with Hybrid Benefit Details",
              "showExportToExcel": true,
              "exportToExcelOptions": "all",
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "value::all"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Group",
                    "formatter": 1
                  },
                  {
                    "columnMatch": "licenseType",
                    "formatter": 1
                  }
                ],
                "hierarchySettings": {
                  "treeType": 1,
                  "groupBy": [
                    "licenseType"
                  ]
                }
              }
            },
            "customWidth": "50",
            "conditionalVisibility": {
              "parameterName": "selectedTab",
              "comparison": "isEqualTo",
              "value": "hybenef"
            },
            "name": "query - 1",
            "styleSettings": {
              "maxWidth": "100"
            }
          }
        ]
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "hybenef"
        },
        {
          "parameterName": "selTabhb",
          "comparison": "isEqualTo",
          "value": "oslhb"
        }
      ],
      "customWidth": "100",
      "name": "group - 80"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "resources\r\n| where type =~ \"microsoft.compute/virtualMachineScaleSets\" \r\n| extend HybridBenefit = iif(properties.licenseType == \"Windows_Server\", \"Azure Hybrid Benefit\", \"Not Enabled\") \r\n| summarize count(type)",
        "size": 4,
        "title": "No. of VMSS without Azure Hybrid Benefits",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscriptions}"
        ],
        "visualization": "tiles",
        "tileSettings": {
          "titleContent": {
            "columnMatch": "count_type",
            "formatter": 12,
            "formatOptions": {
              "palette": "auto"
            }
          },
          "showBorder": true,
          "sortOrderField": 2,
          "size": "auto"
        },
        "mapSettings": {
          "locInfo": "LatLong"
        },
        "textSettings": {
          "style": "editor"
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "hybenef"
        },
        {
          "parameterName": "selTabhb",
          "comparison": "isEqualTo",
          "value": "vmss"
        }
      ],
      "customWidth": "30",
      "name": "query - 166"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "resources\r\n| where type =~ \"microsoft.compute/virtualMachineScaleSets\" \r\n| extend HybridBenefit = iif(properties.licenseType == \"Windows_Server\", \"Azure Hybrid Benefit\", \"Not Enabled\") \r\n|project name, resourceGroup, HybridBenefit, subscriptionId",
        "size": 0,
        "title": "List of VMSS without Azure Hybrid Benefits",
        "showExportToExcel": true,
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscriptions}"
        ],
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "Group",
              "formatter": 1
            }
          ],
          "hierarchySettings": {
            "treeType": 1,
            "groupBy": [
              "subscriptionId"
            ]
          }
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "hybenef"
        },
        {
          "parameterName": "selTabhb",
          "comparison": "isEqualTo",
          "value": "vmss"
        }
      ],
      "customWidth": "70",
      "name": "query - 167"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "crossComponentResources": [
          "{Subscriptions}"
        ],
        "parameters": [
          {
            "id": "b1dd6e6b-8b0d-4ac3-bd77-83e12cf176c1",
            "version": "KqlParameterItem/1.0",
            "name": "ResourceGroup",
            "label": "Resource Group",
            "type": 2,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "resourceContainers | where type == 'microsoft.resources/subscriptions/resourcegroups'\r\n| project resourceGroup\r\n| sort by resourceGroup asc",
            "crossComponentResources": [
              "{Subscriptions}"
            ],
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ]
            },
            "timeContext": {
              "durationMs": 86400000
            },
            "defaultValue": "value::all",
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          }
        ],
        "style": "pills",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources"
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "hybenef"
        },
        {
          "parameterName": "selTabhb",
          "comparison": "isEqualTo",
          "value": "sqlshb"
        },
        {
          "parameterName": "selsubtab",
          "comparison": "isEqualTo",
          "value": "sqlmi"
        }
      ],
      "name": "parameters - 169"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "ResourceContainers¬†|¬†where¬†type¬†=~¬†'Microsoft.Resources/subscriptions'¬†|¬†where¬†tostring¬†(properties.subscriptionPolicies.quotaId)¬†!has¬†\"MSDNDevTest_2014-09-01\"\r\n | extend SubscriptionName=name \r\n | join (resources |  where type =~ 'Microsoft.Sql/managedInstances' and tostring(properties.['licenseType']) == 'LicenseIncluded'\r\n | extend ManagedInstance=id, SQLRG=resourceGroup, SQLLocation=location, vCores=tostring(sku.capacity),LicenseType = tostring(properties.['licenseType'])\r\n | extend CheckSQLMIAHUB = case(\r\n type =~ 'Microsoft.Sql/managedInstances', iif((properties.['licenseType'])\r\n has 'LicenseIncluded', \"AHUB Not Enabled\", \"AHUB Enabled\"),\r\n\"Not SQL DB\"\r\n    ) \r\n ) on subscriptionId \r\n | where SQLRG in ({ResourceGroup})\r\n | summarize count(type)",
        "size": 4,
        "title": "SQL MI without AHUB",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscriptions}"
        ],
        "visualization": "tiles",
        "tileSettings": {
          "titleContent": {
            "columnMatch": "count_type",
            "formatter": 12,
            "formatOptions": {
              "palette": "auto"
            }
          },
          "showBorder": true,
          "size": "auto"
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "hybenef"
        },
        {
          "parameterName": "selTabhb",
          "comparison": "isEqualTo",
          "value": "sqlshb"
        },
        {
          "parameterName": "selsubtab",
          "comparison": "isEqualTo",
          "value": "sqlmi"
        }
      ],
      "customWidth": "30",
      "name": "query - 170"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "ResourceContainers¬†|¬†where¬†type¬†=~¬†'Microsoft.Resources/subscriptions'¬†|¬†where¬†tostring¬†(properties.subscriptionPolicies.quotaId)¬†!has¬†\"MSDNDevTest_2014-09-01\"\r\n | extend SubscriptionName=name \r\n | join (resources |  where type =~ 'Microsoft.Sql/managedInstances' and tostring(properties.['licenseType']) == 'LicenseIncluded'\r\n | extend ManagedInstance=id, SQLRG=resourceGroup, SQLLocation=location, vCores=tostring(sku.capacity),LicenseType = tostring(properties.['licenseType'])\r\n | extend CheckSQLMIAHUB = case(\r\n type =~ 'Microsoft.Sql/managedInstances', iif((properties.['licenseType'])\r\n has 'LicenseIncluded', \"AHUB Not Enabled\", \"AHUB Enabled\"),\r\n\"Not SQL DB\"\r\n    ) \r\n ) on subscriptionId \r\n | project ManagedInstance,SQLRG, SQLLocation, CheckSQLMIAHUB, vCores, LicenseType, SubscriptionName\r\n | where SQLRG in ({ResourceGroup})",
        "size": 0,
        "title": "List of SQL MI without AHUB",
        "noDataMessage": "No SQL MI without AHUB",
        "noDataMessageStyle": 3,
        "showExportToExcel": true,
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscriptions}"
        ]
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "hybenef"
        },
        {
          "parameterName": "selTabhb",
          "comparison": "isEqualTo",
          "value": "sqlshb"
        },
        {
          "parameterName": "selsubtab",
          "comparison": "isEqualTo",
          "value": "sqlmi"
        }
      ],
      "customWidth": "70",
      "name": "query - 171"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "ResourceContainers¬†|¬†where¬†type¬†=~¬†'Microsoft.Resources/subscriptions'¬†|¬†where¬†tostring¬†(properties.subscriptionPolicies.quotaId)¬†!has¬†\"MSDNDevTest_2014-09-01\"\r\n| extend SubscriptionName=name | join (resources |  where type =~ 'Microsoft.Sql/servers/databases' and name != 'master' and tostring(properties.['licenseType']) == 'LicenseIncluded' \r\n| extend   SQLDBID=id,SQLName = name, SQLRG = resourceGroup, SKUName=tostring(sku.name), SKUTier=tostring(sku.tier), vCores=tostring(sku.capacity), SQLLocation = location, LicenseType = tostring(properties.['licenseType']), StorageAccountType=tostring(properties.['storageAccountType'])\r\n| extend CheckSQLDBAHUB = case(\r\n type =~ 'Microsoft.Sql/servers/databases', iif((properties.['licenseType'])\r\n has 'LicenseIncluded', \"AHUB Not Enabled\", \"AHUB Enabled\"),\r\n\"Not SQL DB\"\r\n    )\r\n) on subscriptionId \r\n|summarize count(type)\r\n",
        "size": 4,
        "title": "SQL DB without AHUB",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscriptions}"
        ],
        "visualization": "tiles",
        "tileSettings": {
          "titleContent": {
            "columnMatch": "count_type",
            "formatter": 12,
            "formatOptions": {
              "palette": "auto"
            }
          },
          "showBorder": true,
          "size": "auto"
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "hybenef"
        },
        {
          "parameterName": "selTabhb",
          "comparison": "isEqualTo",
          "value": "sqlshb"
        },
        {
          "parameterName": "selsubtab",
          "comparison": "isEqualTo",
          "value": "sqldb"
        }
      ],
      "customWidth": "30",
      "name": "query - 167"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "ResourceContainers¬†|¬†where¬†type¬†=~¬†'Microsoft.Resources/subscriptions'¬†|¬†where¬†tostring¬†(properties.subscriptionPolicies.quotaId)¬†!has¬†\"MSDNDevTest_2014-09-01\"\r\n| extend SubscriptionName=name | join (resources |  where type =~ 'Microsoft.Sql/servers/databases' and name != 'master' and tostring(properties.['licenseType']) == 'LicenseIncluded' \r\n| extend   SQLDBID=id,SQLName = name, SQLRG = resourceGroup, SKUName=tostring(sku.name), SKUTier=tostring(sku.tier), vCores=tostring(sku.capacity), SQLLocation = location, LicenseType = tostring(properties.['licenseType']), StorageAccountType=tostring(properties.['storageAccountType'])\r\n| extend CheckSQLDBAHUB = case(\r\n type =~ 'Microsoft.Sql/servers/databases', iif((properties.['licenseType'])\r\n has 'LicenseIncluded', \"AHUB Not Enabled\", \"AHUB Enabled\"),\r\n\"Not SQL DB\"\r\n    )\r\n) on subscriptionId \r\n| project SQLDBID,SQLName,SQLRG, SKUName, SKUTier, vCores, CheckSQLDBAHUB,SQLLocation, LicenseType, StorageAccountType, SubscriptionName",
        "size": 0,
        "title": "List of SQL DB without AHUB",
        "noDataMessage": "No SQL DB without AHUB",
        "noDataMessageStyle": 3,
        "showExportToExcel": true,
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscriptions}"
        ]
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "hybenef"
        },
        {
          "parameterName": "selTabhb",
          "comparison": "isEqualTo",
          "value": "sqlshb"
        },
        {
          "parameterName": "selsubtab",
          "comparison": "isEqualTo",
          "value": "sqldb"
        }
      ],
      "customWidth": "70",
      "name": "query - 168"
    },
    {
      "type": 1,
      "content": {
        "json": "# Stopped VM Overview"
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "svmd"
      },
      "name": "text - 80"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "// Run query to see results.\r\nresources\r\n| where type in~ (\r\n        \"microsoft.compute/virtualmachines\",\r\n        \"microsoft.scvmm/virtualmachines\",\r\n\t\t\"microsoft.connectedvmwarevsphere/virtualmachines\",\r\n\t\t\"microsoft.azurestackhci/virtualmachines\")\r\n| extend nics=array_length(properties.networkProfile.networkInterfaces)\r\n| extend customLocation = extract(@\"(?:[^\\/])+$\", 0, tostring(extendedLocation.name))\r\n| extend modLocation = case (\r\n\t\tlocation =~ 'eastus', 'East US',\r\n\t\tlocation =~ 'eastus2', 'East US2',\r\n\t\tlocation =~ 'westus', 'West US',\r\n\t\tlocation =~ 'westus2', 'West US2',\r\n\t\tlocation =~ 'southcentralus', 'South Central US',\r\n\t\tlocation =~ 'westeurope', 'West Europe',\r\n\t\tlocation =~ 'southeastasia', 'South East Asia',\r\n\t\tlocation =~ 'northeurope', 'North Europe',\r\n\t\tlocation =~ 'centralUS', 'Central US',\r\n\t\tlocation)\r\n| extend location = iff(isnotempty(customLocation) and isnotnull(customLocation), strcat(customLocation, \" (\", modLocation, \")\"), location)\r\n| mvexpand nic=properties.networkProfile.networkInterfaces limit 400\r\n| where (type == \"microsoft.compute/virtualmachines\" and nics == 1 or nic.properties.primary =~ 'true' or isempty(nic)) or type <> \"microsoft.compute/virtualmachines\"\r\n| project\r\n        id,\r\n        name,\r\n        resourceGroup,\r\n        type,\r\n        kind,\r\n        location,\r\n        edgeZone = iff(tostring(extendedLocation.type) =~ 'EdgeZone', tostring(extendedLocation.name), '-'),\r\n        subscriptionId,\r\n        tags,\r\n        licenseType=case(\r\n            properties.licenseType =~ 'Windows_Server', 'Azure Hybrid Benefit for Windows',\r\n            properties.licenseType =~ 'Windows_Client', 'Windows client with multi-tenant hosting',\r\n            properties.licenseType =~ 'RHEL_BYOS', 'Azure Hybrid Benefit for Redhat',\r\n            properties.licenseType =~ 'SLES_BYOS', 'Azure Hybrid Benefit for SUSE',\r\n            'Not enabled'\r\n        ),\r\n        nics = coalesce(tostring(nics), '-'),\r\n        zones = coalesce(tostring(zones[0]), '-'),\r\n        os = case(\r\n\t\t\tproperties.storageProfile.osDisk.osType =~ 'Windows' or properties.osProfile.osType =~ 'Windows', 'Windows',\r\n\t\t\tproperties.storageProfile.osDisk.osType =~ 'Linux' or properties.osProfile.osType =~ 'Linux', 'Linux',\r\n\t\t\t'-'\r\n\t\t),\r\n        publisher = coalesce(\r\n            tostring(properties.storageProfile.imageReference.publisher),\r\n            '-'\r\n        ),\r\n        offer = coalesce(\r\n            tostring(properties.storageProfile.imageReference.offer),\r\n            '-'\r\n        ),\r\n        sku = coalesce(\r\n            tostring(properties.storageProfile.imageReference.sku),\r\n            '-'\r\n        ),\r\n        usesManagedDisks = iff(\r\n            isnotempty(properties.storageProfile.osDisk.managedDisk), 'Yes',\r\n            'No'\r\n        ),\r\n        disks = case(\r\n\t\t\t\ttype == \"microsoft.compute/virtualmachines\", tostring(iff(isnotempty(properties.storageProfile.osDisk) and isnotnull(properties.storageProfile.osDisk), 1, 0) + coalesce(array_length(properties.storageProfile.dataDisks), 0)),\r\n\t\t\t\ttype == \"microsoft.azurestackhci/virtualmachines\", tostring(iff(isnotnull(properties.storageProfile.dataDisks) and isnotempty(properties.storageProfile.dataDisks), array_length(properties.storageProfile.dataDisks), 0)),\r\n\t\t\t\ttype == \"microsoft.connectedvmwarevsphere/virtualmachines\" or type == \"microsoft.scvmm/virtualmachines\", tostring(iff(isnotnull(properties.storageProfile.disks) and isnotempty(properties.storageProfile.disks), array_length(properties.storageProfile.disks), 0)),\r\n\t\t\t\t'-'\r\n\t\t),\r\n        source = coalesce(\r\n            case(\r\n                (isnotnull(properties.storageProfile.imageReference.publisher) and isnotempty(properties.storageProfile.imageReference.publisher)), 'Marketplace',\r\n                (isnotnull(properties.storageProfile.imageReference.id) and isnotempty(properties.storageProfile.imageReference.id) and properties.storageProfile.imageReference contains \"Microsoft.Compute/images\"), 'Image',\r\n                (isnotnull(properties.storageProfile.imageReference.id) and isnotempty(properties.storageProfile.imageReference.id) and properties.storageProfile.imageReference contains \"Microsoft.Compute/galleries\"), 'Shared image',\r\n                'Disk'\r\n            ),\r\n            '-'\r\n        ),\r\n        spotEvictionPolicy = case(\r\n            (properties.priority =~ \"Low\" or properties.priority =~ \"Spot\") and properties.evictionPolicy =~ \"Deallocate\", 'Stop / Deallocate',\r\n            (properties.priority =~ \"Low\" or properties.priority =~ \"Spot\"), 'Delete',\r\n            '-'\r\n        ),\r\n        spotEvictionType = case(\r\n            (properties.priority =~ \"Low\" or properties.priority =~ \"Spot\") and properties.billingProfile.maxPrice == -1, 'Capacity',\r\n            (properties.priority =~ \"Low\" or properties.priority =~ \"Spot\"), 'Price or capacity',\r\n            '-'\r\n        ),\r\n        spotPrice = case(\r\n            (properties.priority =~ \"Low\" or properties.priority =~ \"Spot\") and isnotnull(properties.billingProfile.maxPrice) and isnotempty(properties.billingProfile.maxPrice) and properties.billingProfile.maxPrice != -1, strcat(\"$ \", round(toreal(properties.billingProfile.maxPrice), 2)),\r\n            (properties.priority =~ \"Low\" or properties.priority =~ \"Spot\") and (isnull(properties.billingProfile.maxPrice) or isempty(properties.billingProfile.maxPrice)), 'Capacity',\r\n            '-'\r\n        ),\r\n        proximityPlacementGroup = coalesce(extract('/proximityPlacementGroups/(.*)', 1, tostring(properties.proximityPlacementGroup.id)), '-'),\r\n        host = coalesce(extract('/hosts/(.*)', 1, tostring(properties.host.id)), '-'),\r\n        availabilitySet = coalesce(extract('/availabilitySets/(.*)', 1, tostring(properties.availabilitySet.id)), '-'),\r\n        vmSize = coalesce(tostring(properties.hardwareProfile.vmSize), '-'),\r\n        computerName = coalesce(tostring(properties.extended.instanceView.computerName), tostring(properties.osProfile.computerName), '-'),\r\n        hyperVGeneration = coalesce(tostring(properties.extended.instanceView.hyperVGeneration), '-'),\r\n        securityType = case(\r\n            isnull(properties.securityProfile.securityType) or (properties.securityProfile.securityType =~ \"Standard\"), 'Standard',\r\n            properties.securityProfile.securityType =~ \"TrustedLaunch\", 'Trusted launch',\r\n            properties.securityProfile.securityType =~ \"ConfidentialVm\", 'Confidential',\r\n            '-'\r\n        ),\r\n        nicId = tostring(tolower(nic.id)),\r\n        powerState = coalesce(properties.powerState, properties.status.powerState, tostring(split(tolower(properties.extended.instanceView.powerState.code), \"powerstate/\")[1])),\r\n        provisioningState = tostring(properties.provisioningState),\r\n        hibernationState = tostring(split(tolower(properties.extended.instanceView.hibernationState.code), \"hibernationstate/\")[1]),\r\n\t\tscaleSet = coalesce(extract('/virtualMachineScaleSets/(.*)', 1, tostring(properties.virtualMachineScaleSet.id)), '-'),\r\n        imageId = tolower(coalesce(extract('(.*)/versions/', 1, tostring(properties.storageProfile.imageReference.id)), tostring(properties.storageProfile.imageReference.id)))\r\n| join kind=leftouter hint.strategy=shuffle (data \r\n            | where type =~ 'microsoft.compute/galleries/images'\r\n            | project\r\n                imageId = tolower(id),\r\n                imageDefinitionPublisher = properties.identifier.publisher,\r\n                imageDefinitionOffer = properties.identifier.offer,\r\n                imageDefinitionSku = properties.identifier.sku\r\n    )\r\n    on imageId\r\n| extend\r\n        publisher = coalesce(\r\n            tostring(imageDefinitionPublisher),\r\n            publisher\r\n        ),\r\n        offer = coalesce(\r\n            tostring(imageDefinitionOffer),\r\n            offer\r\n        ),\r\n        sku = coalesce(\r\n            tostring(imageDefinitionSku),\r\n            sku\r\n        )\r\n| join kind=leftouter hint.strategy=shuffle (data \r\n            | where type =~ 'Microsoft.Network/networkInterfaces' \r\n            | extend ipConfigsCount=array_length(properties.ipConfigurations) \r\n            | mvexpand ipconfig=properties.ipConfigurations limit 400\r\n            | where ipConfigsCount == 1 or ipconfig.properties.primary =~ 'true' \r\n            | parse kind=regex tostring(ipconfig.properties.subnet.id) with '/virtualNetworks/' virtualNetwork '/subnets/' subnet \r\n            | project\r\n                nicId=tolower(id),\r\n                publicIpId=tostring(ipconfig.properties.publicIPAddress.id),\r\n                privateIPAddress=tostring(ipconfig.properties.privateIPAddress),\r\n                subnet,\r\n                virtualNetwork,\r\n                lbReferences=array_concat(\r\n                    ipconfig.properties.loadBalancerInboundNatRules,\r\n                    ipconfig.properties.loadBalancerBackendAddressPools,\r\n                    ipconfig.properties.applicationGatewayBackendAddressPools))\r\n        on nicId\r\n| project-away nicId, nicId1\r\n| mvexpand lbRef=lbReferences limit 400\r\n| extend lbId=tolower(extract('(.*)/(inboundNatRules|backendAddressPool)', 1, tostring(lbRef.id)))\r\n| summarize tags = any(tags) by id, lbId, name, resourceGroup, type, kind, location, subscriptionId, licenseType, nics, zones, os, usesManagedDisks, publicIpId, disks, source, spotEvictionPolicy, spotEvictionType, spotPrice, proximityPlacementGroup, host, availabilitySet, vmSize, securityType, privateIPAddress, subnet, virtualNetwork, powerState, provisioningState, hibernationState, scaleSet, edgeZone, computerName, hyperVGeneration, publisher, offer, sku\r\n| join kind=leftouter hint.strategy=shuffle (data \r\n            | where type =~ 'microsoft.network/loadbalancers' or type =~ 'microsoft.network/applicationgateways' \r\n            | mvexpand fipc=properties.frontendIPConfigurations limit 400\r\n            | summarize lbPublicIpId=any(tostring(fipc.properties.publicIPAddress.id)) by lbId=tolower(id))\r\n        on lbId\r\n| summarize lbPublicIpId=any(lbPublicIpId), tags = any(tags) by id, name, resourceGroup, type, kind, location, subscriptionId, licenseType, nics, zones, os, usesManagedDisks, publicIpId, disks, source, spotEvictionPolicy, spotEvictionType, spotPrice, proximityPlacementGroup, host, availabilitySet, vmSize, securityType, privateIPAddress, subnet, virtualNetwork, powerState, provisioningState, hibernationState, scaleSet, edgeZone, computerName, hyperVGeneration, publisher, offer, sku\r\n| extend publicIpId=tolower(iff(isnotempty(publicIpId), publicIpId, lbPublicIpId))\r\n| project-away lbPublicIpId\r\n| join kind=leftouter hint.strategy=shuffle (data \r\n            | where type =~ 'microsoft.network/publicipaddresses' \r\n            | project publicIpId=tolower(id), publicIpAddress=tostring(properties.ipAddress), publicDnsName=tostring(properties.dnsSettings.fqdn))\r\n        on publicIpId\r\n| project-away publicIpId, publicIpId1\r\n| project id,\r\n        name,\r\n        resourceGroup,\r\n        type,\r\n        kind,\r\n        location,\r\n        subscriptionId,\r\n        tags,\r\n        nics,\r\n        os,\r\n        publisher,\r\n        offer,\r\n        sku,\r\n        status = case(\r\n            provisioningState =~ 'CREATING', 'Creating',\r\n            provisioningState =~ 'DELETING', 'Deleting',\r\n            (provisioningState =~ 'FAILED' and isnotnull(powerState) and isnotempty(powerState)), case(\r\n                powerState =~ 'RUNNING', 'Running',\r\n                powerState =~ 'POWEREDON', 'Running',\r\n                powerState =~ 'STOPPED', 'Stopped',\r\n                powerState =~ 'DEALLOCATED', case(\r\n                    hibernationState =~ 'HIBERNATED', 'Hibernated (deallocated)',\r\n                    'Stopped (deallocated)'\r\n                ),\r\n                powerState =~ 'POWEREDOFF', 'Powered off',\r\n                powerState =~ 'SUSPENDED', 'Suspended',\r\n                'Unknown'\r\n            ),\r\n            provisioningState =~ 'FAILED', 'Failed',\r\n            (provisioningState =~ 'SUCCEEDED' and isnotnull(powerState) and isnotempty(powerState)), case(\r\n                powerState =~ 'RUNNING', 'Running',\r\n                powerState =~ 'POWEREDON', 'Running',\r\n                powerState =~ 'STOPPED', 'Stopped',\r\n                powerState =~ 'DEALLOCATED', case(\r\n                    hibernationState =~ 'HIBERNATED', 'Hibernated (deallocated)',\r\n                    'Stopped (deallocated)'\r\n                ),\r\n                powerState =~ 'POWEREDOFF', 'Powered off',\r\n                powerState =~ 'SUSPENDED', 'Suspended',\r\n                powerState =~ 'STARTING', 'Starting',\r\n                'Unknown'\r\n            ),\r\n            (provisioningState =~ 'UPDATING' and isnotnull(powerState) and isnotempty(powerState)), case(\r\n                powerState =~ 'DEALLOCATING', 'Deallocating',\r\n                powerState =~ 'RUNNING', 'Running',\r\n                powerState =~ 'STARTING', 'Starting',\r\n                powerState =~ 'STOPPING', 'Stopping',\r\n                'Updating'\r\n            ),\r\n            'Unknown'\r\n        ),\r\n        disks,\r\n        availabilitySet,\r\n        vmSize,\r\n        securityType,\r\n        virtualNetwork = coalesce(virtualNetwork, '-'),\r\n        subnet = coalesce(subnet, '-'),\r\n        privateIPAddress = coalesce(privateIPAddress, '-'),\r\n        publicDnsName = coalesce(publicDnsName, '-'),\r\n        publicIpAddress = coalesce(publicIpAddress, '-'),\r\n        zones,\r\n        usesManagedDisks,\r\n        licenseType,\r\n        source,\r\n        spotEvictionPolicy,\r\n        spotEvictionType,\r\n        spotPrice,\r\n        proximityPlacementGroup,\r\n        host,\r\n\t\tscaleSet = coalesce(scaleSet, '-'),\r\n\t\tedgeZone = coalesce(edgeZone, '-'),\r\n        computerName,\r\n        hyperVGeneration\r\n| where (type !~ ('paloaltonetworks.cloudngfw/firewalls'))\r\n| where (type !~ ('paloaltonetworks.cloudngfw/globalrulestacks'))\r\n| where (type !~ ('paloaltonetworks.cloudngfw/localrulestacks'))\r\n| where (type !~ ('microsoft.azureactivedirectory/ciamdirectories'))\r\n| where (type !~ ('microsoft.agfoodplatform/farmbeats'))\r\n| where (type !~ ('microsoft.anybuild/clusters'))\r\n| where (type !~ ('microsoft.cdn/profiles/customdomains'))\r\n| where (type !~ ('microsoft.cdn/profiles/afdendpoints'))\r\n| where (type !~ ('microsoft.cdn/profiles/origingroups/origins'))\r\n| where (type !~ ('microsoft.cdn/profiles/origingroups'))\r\n| where (type !~ ('microsoft.cdn/profiles/afdendpoints/routes'))\r\n| where (type !~ ('microsoft.cdn/profiles/rulesets/rules'))\r\n| where (type !~ ('microsoft.cdn/profiles/rulesets'))\r\n| where (type !~ ('microsoft.cdn/profiles/secrets'))\r\n| where (type !~ ('microsoft.cdn/profiles/securitypolicies'))\r\n| where (type !~ ('microsoft.cloudtest/accounts'))\r\n| where (type !~ ('microsoft.cloudtest/hostedpools'))\r\n| where (type !~ ('microsoft.cloudtest/images'))\r\n| where (type !~ ('microsoft.cloudtest/pools'))\r\n| where (type !~ ('microsoft.codesigning/codesigningaccounts'))\r\n| where (type !~ ('microsoft.kubernetes/connectedclusters/microsoft.kubernetesconfiguration/namespaces'))\r\n| where (type !~ ('microsoft.containerservice/managedclusters/microsoft.kubernetesconfiguration/namespaces'))\r\n| where (type !~ ('microsoft.kubernetes/connectedclusters/microsoft.kubernetesconfiguration/fluxconfigurations'))\r\n| where (type !~ ('microsoft.containerservice/managedclusters/microsoft.kubernetesconfiguration/fluxconfigurations'))\r\n| where (type !~ ('microsoft.portalservices/extensions/deployments'))\r\n| where (type !~ ('microsoft.portalservices/extensions'))\r\n| where (type !~ ('microsoft.portalservices/extensions/slots'))\r\n| where (type !~ ('microsoft.portalservices/extensions/versions'))\r\n| where (type !~ ('microsoft.databaseinsights/databasemonitoringagents'))\r\n| where (type !~ ('microsoft.datacollaboration/workspaces'))\r\n| where (type !~ ('microsoft.compute/locations/communitygalleries/images'))\r\n| where (type !~ ('microsoft.documentdb/mongoclusters'))\r\n| where (type !~ ('microsoft.eventgrid/namespaces'))\r\n| where (type !~ ('microsoft.hdinsight/clusterpools/clusters'))\r\n| where (type !~ ('microsoft.hdinsight/clusterpools'))\r\n| where (type !~ ('microsoft.network/virtualhubs')) or ((kind =~ ('routeserver')))\r\n| where (type !~ ('microsoft.metaverse/metaverses'))\r\n| where (type !~ ('microsoft.modsimworkbench/instances/chambers'))\r\n| where (type !~ ('microsoft.modsimworkbench/instances/chambers/connectors'))\r\n| where (type !~ ('microsoft.modsimworkbench/instances/chambers/files'))\r\n| where (type !~ ('microsoft.modsimworkbench/instances/chambers/filerequests'))\r\n| where (type !~ ('microsoft.modsimworkbench/instances/chambers/licenses'))\r\n| where (type !~ ('microsoft.modsimworkbench/instances/chambers/storages'))\r\n| where (type !~ ('microsoft.modsimworkbench/instances/chambers/workloads'))\r\n| where (type !~ ('microsoft.modsimworkbench/instances'))\r\n| where (type !~ ('microsoft.modsimworkbench/instances/sharedstorages'))\r\n| where (type !~ ('microsoft.insights/diagnosticsettings'))\r\n| where (type !~ ('microsoft.insights/scheduledqueryrules'))\r\n| where not((type =~ ('microsoft.network/serviceendpointpolicies')) and ((kind =~ ('internal'))))\r\n| where (type !~ ('microsoft.openlogisticsplatform/workspaces'))\r\n| where (type !~ ('microsoft.scom/managedinstances'))\r\n| where (type !~ ('microsoft.orbital/edgesites'))\r\n| where (type !~ ('microsoft.orbital/groundstations'))\r\n| where (type !~ ('microsoft.orbital/l2connections'))\r\n| where (type !~ ('microsoft.workloads/phpworkloads'))\r\n| where (type !~ ('microsoft.recommendationsservice/accounts/modeling'))\r\n| where (type !~ ('microsoft.recommendationsservice/accounts/serviceendpoints'))\r\n| where (type !~ ('microsoft.recoveryservicesbvtd/vaults'))\r\n| where (type !~ ('microsoft.recoveryservicesbvtd2/vaults'))\r\n| where (type !~ ('microsoft.recoveryservicesintd/vaults'))\r\n| where (type !~ ('microsoft.recoveryservicesintd2/vaults'))\r\n| where (type !~ ('microsoft.deploymentmanager/rollouts'))\r\n| where (type !~ ('microsoft.datareplication/replicationvaults'))\r\n| where (type !~ ('microsoft.storagecache/amlfilesystems'))\r\n| where (type !~ ('microsoft.storage/storagetasks'))\r\n| where not((type =~ ('microsoft.synapse/workspaces/sqlpools')) and ((kind =~ ('v3'))))\r\n| where (type !~ ('microsoft.windowspushnotificationservices/registrations'))\r\n| where not((type =~ ('microsoft.sql/servers/databases')) and ((kind in~ ('system','v2.0,system','v12.0,system','v12.0,user,datawarehouse,gen2,analytics'))))\r\n| where not((type =~ ('microsoft.sql/servers')) and ((kind =~ ('v12.0,analytics'))))\r\n| where ((type in~ ('microsoft.compute/virtualmachines','microsoft.scvmm/virtualmachines','microsoft.azurestackhci/virtualmachines'))) or ((type =~ ('microsoft.connectedvmwarevsphere/virtualmachines')) and ((kind =~ ('AVS')))) or ((type =~ ('microsoft.connectedvmwarevsphere/virtualmachines')) and ((kind =~ ('VMware'))))\r\n| extend _status=tolower(tostring(status))\r\n| summarize status=any(status),statusCount=count() by _status\r\n| sort by (statusCount) desc,(_status) asc\r\n| project-away _status",
        "size": 0,
        "title": "Stopped and Running VM",
        "exportFieldName": "stopvm",
        "exportParameterName": "stpvm",
        "exportDefaultValue": "*",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "value::all"
        ],
        "visualization": "piechart"
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "svmd"
      },
      "name": "query - 81"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "// Run query to see results.\r\nresources\r\n| where type in~ (\r\n        \"microsoft.compute/virtualmachines\",\r\n        \"microsoft.scvmm/virtualmachines\",\r\n\t\t\"microsoft.connectedvmwarevsphere/virtualmachines\",\r\n\t\t\"microsoft.azurestackhci/virtualmachines\")\r\n| extend nics=array_length(properties.networkProfile.networkInterfaces)\r\n| extend customLocation = extract(@\"(?:[^\\/])+$\", 0, tostring(extendedLocation.name))\r\n| extend modLocation = case (\r\n\t\tlocation =~ 'eastus', 'East US',\r\n\t\tlocation =~ 'eastus2', 'East US2',\r\n\t\tlocation =~ 'westus', 'West US',\r\n\t\tlocation =~ 'westus2', 'West US2',\r\n\t\tlocation =~ 'southcentralus', 'South Central US',\r\n\t\tlocation =~ 'westeurope', 'West Europe',\r\n\t\tlocation =~ 'southeastasia', 'South East Asia',\r\n\t\tlocation =~ 'northeurope', 'North Europe',\r\n\t\tlocation =~ 'centralUS', 'Central US',\r\n\t\tlocation)\r\n| extend location = iff(isnotempty(customLocation) and isnotnull(customLocation), strcat(customLocation, \" (\", modLocation, \")\"), location)\r\n| mvexpand nic=properties.networkProfile.networkInterfaces limit 400\r\n| where (type == \"microsoft.compute/virtualmachines\" and nics == 1 or nic.properties.primary =~ 'true' or isempty(nic)) or type <> \"microsoft.compute/virtualmachines\"\r\n| project\r\n        id,\r\n        name,\r\n        resourceGroup,\r\n        type,\r\n        kind,\r\n        location,\r\n        edgeZone = iff(tostring(extendedLocation.type) =~ 'EdgeZone', tostring(extendedLocation.name), '-'),\r\n        subscriptionId,\r\n        tags,\r\n        licenseType=case(\r\n            properties.licenseType =~ 'Windows_Server', 'Azure Hybrid Benefit for Windows',\r\n            properties.licenseType =~ 'Windows_Client', 'Windows client with multi-tenant hosting',\r\n            properties.licenseType =~ 'RHEL_BYOS', 'Azure Hybrid Benefit for Redhat',\r\n            properties.licenseType =~ 'SLES_BYOS', 'Azure Hybrid Benefit for SUSE',\r\n            'Not enabled'\r\n        ),\r\n        nics = coalesce(tostring(nics), '-'),\r\n        zones = coalesce(tostring(zones[0]), '-'),\r\n        os = case(\r\n\t\t\tproperties.storageProfile.osDisk.osType =~ 'Windows' or properties.osProfile.osType =~ 'Windows', 'Windows',\r\n\t\t\tproperties.storageProfile.osDisk.osType =~ 'Linux' or properties.osProfile.osType =~ 'Linux', 'Linux',\r\n\t\t\t'-'\r\n\t\t),\r\n        publisher = coalesce(\r\n            tostring(properties.storageProfile.imageReference.publisher),\r\n            '-'\r\n        ),\r\n        offer = coalesce(\r\n            tostring(properties.storageProfile.imageReference.offer),\r\n            '-'\r\n        ),\r\n        sku = coalesce(\r\n            tostring(properties.storageProfile.imageReference.sku),\r\n            '-'\r\n        ),\r\n        usesManagedDisks = iff(\r\n            isnotempty(properties.storageProfile.osDisk.managedDisk), 'Yes',\r\n            'No'\r\n        ),\r\n        disks = case(\r\n\t\t\t\ttype == \"microsoft.compute/virtualmachines\", tostring(iff(isnotempty(properties.storageProfile.osDisk) and isnotnull(properties.storageProfile.osDisk), 1, 0) + coalesce(array_length(properties.storageProfile.dataDisks), 0)),\r\n\t\t\t\ttype == \"microsoft.azurestackhci/virtualmachines\", tostring(iff(isnotnull(properties.storageProfile.dataDisks) and isnotempty(properties.storageProfile.dataDisks), array_length(properties.storageProfile.dataDisks), 0)),\r\n\t\t\t\ttype == \"microsoft.connectedvmwarevsphere/virtualmachines\" or type == \"microsoft.scvmm/virtualmachines\", tostring(iff(isnotnull(properties.storageProfile.disks) and isnotempty(properties.storageProfile.disks), array_length(properties.storageProfile.disks), 0)),\r\n\t\t\t\t'-'\r\n\t\t),\r\n        source = coalesce(\r\n            case(\r\n                (isnotnull(properties.storageProfile.imageReference.publisher) and isnotempty(properties.storageProfile.imageReference.publisher)), 'Marketplace',\r\n                (isnotnull(properties.storageProfile.imageReference.id) and isnotempty(properties.storageProfile.imageReference.id) and properties.storageProfile.imageReference contains \"Microsoft.Compute/images\"), 'Image',\r\n                (isnotnull(properties.storageProfile.imageReference.id) and isnotempty(properties.storageProfile.imageReference.id) and properties.storageProfile.imageReference contains \"Microsoft.Compute/galleries\"), 'Shared image',\r\n                'Disk'\r\n            ),\r\n            '-'\r\n        ),\r\n        spotEvictionPolicy = case(\r\n            (properties.priority =~ \"Low\" or properties.priority =~ \"Spot\") and properties.evictionPolicy =~ \"Deallocate\", 'Stop / Deallocate',\r\n            (properties.priority =~ \"Low\" or properties.priority =~ \"Spot\"), 'Delete',\r\n            '-'\r\n        ),\r\n        spotEvictionType = case(\r\n            (properties.priority =~ \"Low\" or properties.priority =~ \"Spot\") and properties.billingProfile.maxPrice == -1, 'Capacity',\r\n            (properties.priority =~ \"Low\" or properties.priority =~ \"Spot\"), 'Price or capacity',\r\n            '-'\r\n        ),\r\n        spotPrice = case(\r\n            (properties.priority =~ \"Low\" or properties.priority =~ \"Spot\") and isnotnull(properties.billingProfile.maxPrice) and isnotempty(properties.billingProfile.maxPrice) and properties.billingProfile.maxPrice != -1, strcat(\"$ \", round(toreal(properties.billingProfile.maxPrice), 2)),\r\n            (properties.priority =~ \"Low\" or properties.priority =~ \"Spot\") and (isnull(properties.billingProfile.maxPrice) or isempty(properties.billingProfile.maxPrice)), 'Capacity',\r\n            '-'\r\n        ),\r\n        proximityPlacementGroup = coalesce(extract('/proximityPlacementGroups/(.*)', 1, tostring(properties.proximityPlacementGroup.id)), '-'),\r\n        host = coalesce(extract('/hosts/(.*)', 1, tostring(properties.host.id)), '-'),\r\n        availabilitySet = coalesce(extract('/availabilitySets/(.*)', 1, tostring(properties.availabilitySet.id)), '-'),\r\n        vmSize = coalesce(tostring(properties.hardwareProfile.vmSize), '-'),\r\n        computerName = coalesce(tostring(properties.extended.instanceView.computerName), tostring(properties.osProfile.computerName), '-'),\r\n        hyperVGeneration = coalesce(tostring(properties.extended.instanceView.hyperVGeneration), '-'),\r\n        securityType = case(\r\n            isnull(properties.securityProfile.securityType) or (properties.securityProfile.securityType =~ \"Standard\"), 'Standard',\r\n            properties.securityProfile.securityType =~ \"TrustedLaunch\", 'Trusted launch',\r\n            properties.securityProfile.securityType =~ \"ConfidentialVm\", 'Confidential',\r\n            '-'\r\n        ),\r\n        nicId = tostring(tolower(nic.id)),\r\n        powerState = coalesce(properties.powerState, properties.status.powerState, tostring(split(tolower(properties.extended.instanceView.powerState.code), \"powerstate/\")[1])),\r\n        provisioningState = tostring(properties.provisioningState),\r\n        hibernationState = tostring(split(tolower(properties.extended.instanceView.hibernationState.code), \"hibernationstate/\")[1]),\r\n\t\tscaleSet = coalesce(extract('/virtualMachineScaleSets/(.*)', 1, tostring(properties.virtualMachineScaleSet.id)), '-'),\r\n        imageId = tolower(coalesce(extract('(.*)/versions/', 1, tostring(properties.storageProfile.imageReference.id)), tostring(properties.storageProfile.imageReference.id)))\r\n| join kind=leftouter hint.strategy=shuffle (data \r\n            | where type =~ 'microsoft.compute/galleries/images'\r\n            | project\r\n                imageId = tolower(id),\r\n                imageDefinitionPublisher = properties.identifier.publisher,\r\n                imageDefinitionOffer = properties.identifier.offer,\r\n                imageDefinitionSku = properties.identifier.sku\r\n    )\r\n    on imageId\r\n| extend\r\n        publisher = coalesce(\r\n            tostring(imageDefinitionPublisher),\r\n            publisher\r\n        ),\r\n        offer = coalesce(\r\n            tostring(imageDefinitionOffer),\r\n            offer\r\n        ),\r\n        sku = coalesce(\r\n            tostring(imageDefinitionSku),\r\n            sku\r\n        )\r\n| join kind=leftouter hint.strategy=shuffle (data \r\n            | where type =~ 'Microsoft.Network/networkInterfaces' \r\n            | extend ipConfigsCount=array_length(properties.ipConfigurations) \r\n            | mvexpand ipconfig=properties.ipConfigurations limit 400\r\n            | where ipConfigsCount == 1 or ipconfig.properties.primary =~ 'true' \r\n            | parse kind=regex tostring(ipconfig.properties.subnet.id) with '/virtualNetworks/' virtualNetwork '/subnets/' subnet \r\n            | project\r\n                nicId=tolower(id),\r\n                publicIpId=tostring(ipconfig.properties.publicIPAddress.id),\r\n                privateIPAddress=tostring(ipconfig.properties.privateIPAddress),\r\n                subnet,\r\n                virtualNetwork,\r\n                lbReferences=array_concat(\r\n                    ipconfig.properties.loadBalancerInboundNatRules,\r\n                    ipconfig.properties.loadBalancerBackendAddressPools,\r\n                    ipconfig.properties.applicationGatewayBackendAddressPools))\r\n        on nicId\r\n| project-away nicId, nicId1\r\n| mvexpand lbRef=lbReferences limit 400\r\n| extend lbId=tolower(extract('(.*)/(inboundNatRules|backendAddressPool)', 1, tostring(lbRef.id)))\r\n| summarize tags = any(tags) by id, lbId, name, resourceGroup, type, kind, location, subscriptionId, licenseType, nics, zones, os, usesManagedDisks, publicIpId, disks, source, spotEvictionPolicy, spotEvictionType, spotPrice, proximityPlacementGroup, host, availabilitySet, vmSize, securityType, privateIPAddress, subnet, virtualNetwork, powerState, provisioningState, hibernationState, scaleSet, edgeZone, computerName, hyperVGeneration, publisher, offer, sku\r\n| join kind=leftouter hint.strategy=shuffle (data \r\n            | where type =~ 'microsoft.network/loadbalancers' or type =~ 'microsoft.network/applicationgateways' \r\n            | mvexpand fipc=properties.frontendIPConfigurations limit 400\r\n            | summarize lbPublicIpId=any(tostring(fipc.properties.publicIPAddress.id)) by lbId=tolower(id))\r\n        on lbId\r\n| summarize lbPublicIpId=any(lbPublicIpId), tags = any(tags) by id, name, resourceGroup, type, kind, location, subscriptionId, licenseType, nics, zones, os, usesManagedDisks, publicIpId, disks, source, spotEvictionPolicy, spotEvictionType, spotPrice, proximityPlacementGroup, host, availabilitySet, vmSize, securityType, privateIPAddress, subnet, virtualNetwork, powerState, provisioningState, hibernationState, scaleSet, edgeZone, computerName, hyperVGeneration, publisher, offer, sku\r\n| extend publicIpId=tolower(iff(isnotempty(publicIpId), publicIpId, lbPublicIpId))\r\n| project-away lbPublicIpId\r\n| join kind=leftouter hint.strategy=shuffle (data \r\n            | where type =~ 'microsoft.network/publicipaddresses' \r\n            | project publicIpId=tolower(id), publicIpAddress=tostring(properties.ipAddress), publicDnsName=tostring(properties.dnsSettings.fqdn))\r\n        on publicIpId\r\n| project-away publicIpId, publicIpId1\r\n| project id,\r\n        name,\r\n        resourceGroup,\r\n        type,\r\n        kind,\r\n        location,\r\n        subscriptionId,\r\n        tags,\r\n        nics,\r\n        os,\r\n        publisher,\r\n        offer,\r\n        sku,\r\n        status = case(\r\n            provisioningState =~ 'CREATING', 'Creating',\r\n            provisioningState =~ 'DELETING', 'Deleting',\r\n            (provisioningState =~ 'FAILED' and isnotnull(powerState) and isnotempty(powerState)), case(\r\n                powerState =~ 'RUNNING', 'Running',\r\n                powerState =~ 'POWEREDON', 'Running',\r\n                powerState =~ 'STOPPED', 'Stopped',\r\n                powerState =~ 'DEALLOCATED', case(\r\n                    hibernationState =~ 'HIBERNATED', 'Hibernated (deallocated)',\r\n                    'Stopped (deallocated)'\r\n                ),\r\n                powerState =~ 'POWEREDOFF', 'Powered off',\r\n                powerState =~ 'SUSPENDED', 'Suspended',\r\n                'Unknown'\r\n            ),\r\n            provisioningState =~ 'FAILED', 'Failed',\r\n            (provisioningState =~ 'SUCCEEDED' and isnotnull(powerState) and isnotempty(powerState)), case(\r\n                powerState =~ 'RUNNING', 'Running',\r\n                powerState =~ 'POWEREDON', 'Running',\r\n                powerState =~ 'STOPPED', 'Stopped',\r\n                powerState =~ 'DEALLOCATED', case(\r\n                    hibernationState =~ 'HIBERNATED', 'Hibernated (deallocated)',\r\n                    'Stopped (deallocated)'\r\n                ),\r\n                powerState =~ 'POWEREDOFF', 'Powered off',\r\n                powerState =~ 'SUSPENDED', 'Suspended',\r\n                powerState =~ 'STARTING', 'Starting',\r\n                'Unknown'\r\n            ),\r\n            (provisioningState =~ 'UPDATING' and isnotnull(powerState) and isnotempty(powerState)), case(\r\n                powerState =~ 'DEALLOCATING', 'Deallocating',\r\n                powerState =~ 'RUNNING', 'Running',\r\n                powerState =~ 'STARTING', 'Starting',\r\n                powerState =~ 'STOPPING', 'Stopping',\r\n                'Updating'\r\n            ),\r\n            'Unknown'\r\n        ),\r\n        disks,\r\n        availabilitySet,\r\n        vmSize,\r\n        securityType,\r\n        virtualNetwork = coalesce(virtualNetwork, '-'),\r\n        subnet = coalesce(subnet, '-'),\r\n        privateIPAddress = coalesce(privateIPAddress, '-'),\r\n        publicDnsName = coalesce(publicDnsName, '-'),\r\n        publicIpAddress = coalesce(publicIpAddress, '-'),\r\n        zones,\r\n        usesManagedDisks,\r\n        licenseType,\r\n        source,\r\n        spotEvictionPolicy,\r\n        spotEvictionType,\r\n        spotPrice,\r\n        proximityPlacementGroup,\r\n        host,\r\n\t\tscaleSet = coalesce(scaleSet, '-'),\r\n\t\tedgeZone = coalesce(edgeZone, '-'),\r\n        computerName,\r\n        hyperVGeneration\r\n| extend subscriptionDisplayName=case(subscriptionId =~ '8eeef99c-0331-4bb6-a425-1c41d226c451','itservices-casper',subscriptionId =~ '0b451dfd-c31e-4bee-8355-dea2782ecb11','itservices-development',subscriptionId =~ '37d506fc-632d-4345-a977-e98fcb80665e','itservices-management',subscriptionId =~ '4731f0c6-7bdf-4033-8383-4f2502beb9ed','itservices-production',subscriptionId =~ 'c4032a93-b07a-44c5-ab52-3784af1edffd','itservices-qa',subscriptionId)\r\n| extend locationDisplayName=case(location =~ 'eastus','East US',location =~ 'eastus2','East US 2',location =~ 'southcentralus','South Central US',location =~ 'westus2','West US 2',location =~ 'westus3','West US 3',location =~ 'australiaeast','Australia East',location =~ 'southeastasia','Southeast Asia',location =~ 'northeurope','North Europe',location =~ 'swedencentral','Sweden Central',location =~ 'uksouth','UK South',location =~ 'westeurope','West Europe',location =~ 'centralus','Central US',location =~ 'southafricanorth','South Africa North',location =~ 'centralindia','Central India',location =~ 'eastasia','East Asia',location =~ 'japaneast','Japan East',location =~ 'koreacentral','Korea Central',location =~ 'canadacentral','Canada Central',location =~ 'francecentral','France Central',location =~ 'germanywestcentral','Germany West Central',location =~ 'norwayeast','Norway East',location =~ 'switzerlandnorth','Switzerland North',location =~ 'uaenorth','UAE North',location =~ 'brazilsouth','Brazil South',location =~ 'qatarcentral','Qatar Central',location =~ 'centralusstage','Central US (Stage)',location =~ 'eastusstage','East US (Stage)',location =~ 'eastus2stage','East US 2 (Stage)',location =~ 'northcentralusstage','North Central US (Stage)',location =~ 'southcentralusstage','South Central US (Stage)',location =~ 'westusstage','West US (Stage)',location =~ 'westus2stage','West US 2 (Stage)',location =~ 'asia','Asia',location =~ 'asiapacific','Asia Pacific',location =~ 'australia','Australia',location =~ 'brazil','Brazil',location =~ 'canada','Canada',location =~ 'europe','Europe',location =~ 'france','France',location =~ 'germany','Germany',location =~ 'global','Global',location =~ 'india','India',location =~ 'japan','Japan',location =~ 'korea','Korea',location =~ 'norway','Norway',location =~ 'singapore','Singapore',location =~ 'southafrica','South Africa',location =~ 'switzerland','Switzerland',location =~ 'uae','United Arab Emirates',location =~ 'uk','United Kingdom',location =~ 'unitedstates','United States',location =~ 'unitedstateseuap','United States EUAP',location =~ 'eastasiastage','East Asia (Stage)',location =~ 'southeastasiastage','Southeast Asia (Stage)',location =~ 'northcentralus','North Central US',location =~ 'westus','West US',location =~ 'jioindiawest','Jio India West',location =~ 'westcentralus','West Central US',location =~ 'southafricawest','South Africa West',location =~ 'australiacentral','Australia Central',location =~ 'australiacentral2','Australia Central 2',location =~ 'australiasoutheast','Australia Southeast',location =~ 'japanwest','Japan West',location =~ 'jioindiacentral','Jio India Central',location =~ 'koreasouth','Korea South',location =~ 'southindia','South India',location =~ 'westindia','West India',location =~ 'canadaeast','Canada East',location =~ 'francesouth','France South',location =~ 'germanynorth','Germany North',location =~ 'norwaywest','Norway West',location =~ 'switzerlandwest','Switzerland West',location =~ 'ukwest','UK West',location =~ 'uaecentral','UAE Central',location =~ 'brazilsoutheast','Brazil Southeast',location)\r\n| where (type !~ ('paloaltonetworks.cloudngfw/firewalls'))\r\n| where (type !~ ('paloaltonetworks.cloudngfw/globalrulestacks'))\r\n| where (type !~ ('paloaltonetworks.cloudngfw/localrulestacks'))\r\n| where (type !~ ('microsoft.azureactivedirectory/ciamdirectories'))\r\n| where (type !~ ('microsoft.agfoodplatform/farmbeats'))\r\n| where (type !~ ('microsoft.anybuild/clusters'))\r\n| where (type !~ ('microsoft.cdn/profiles/customdomains'))\r\n| where (type !~ ('microsoft.cdn/profiles/afdendpoints'))\r\n| where (type !~ ('microsoft.cdn/profiles/origingroups/origins'))\r\n| where (type !~ ('microsoft.cdn/profiles/origingroups'))\r\n| where (type !~ ('microsoft.cdn/profiles/afdendpoints/routes'))\r\n| where (type !~ ('microsoft.cdn/profiles/rulesets/rules'))\r\n| where (type !~ ('microsoft.cdn/profiles/rulesets'))\r\n| where (type !~ ('microsoft.cdn/profiles/secrets'))\r\n| where (type !~ ('microsoft.cdn/profiles/securitypolicies'))\r\n| where (type !~ ('microsoft.cloudtest/accounts'))\r\n| where (type !~ ('microsoft.cloudtest/hostedpools'))\r\n| where (type !~ ('microsoft.cloudtest/images'))\r\n| where (type !~ ('microsoft.cloudtest/pools'))\r\n| where (type !~ ('microsoft.codesigning/codesigningaccounts'))\r\n| where (type !~ ('microsoft.kubernetes/connectedclusters/microsoft.kubernetesconfiguration/namespaces'))\r\n| where (type !~ ('microsoft.containerservice/managedclusters/microsoft.kubernetesconfiguration/namespaces'))\r\n| where (type !~ ('microsoft.kubernetes/connectedclusters/microsoft.kubernetesconfiguration/fluxconfigurations'))\r\n| where (type !~ ('microsoft.containerservice/managedclusters/microsoft.kubernetesconfiguration/fluxconfigurations'))\r\n| where (type !~ ('microsoft.portalservices/extensions/deployments'))\r\n| where (type !~ ('microsoft.portalservices/extensions'))\r\n| where (type !~ ('microsoft.portalservices/extensions/slots'))\r\n| where (type !~ ('microsoft.portalservices/extensions/versions'))\r\n| where (type !~ ('microsoft.databasewatcher/watchers'))\r\n| where (type !~ ('microsoft.datacollaboration/workspaces'))\r\n| where (type !~ ('microsoft.compute/locations/communitygalleries/images'))\r\n| where (type !~ ('microsoft.documentdb/mongoclusters'))\r\n| where (type !~ ('microsoft.eventgrid/namespaces'))\r\n| where (type !~ ('microsoft.hdinsight/clusterpools/clusters'))\r\n| where (type !~ ('microsoft.hdinsight/clusterpools'))\r\n| where (type !~ ('microsoft.network/virtualhubs')) or ((kind =~ ('routeserver')))\r\n| where (type !~ ('microsoft.metaverse/metaverses'))\r\n| where (type !~ ('microsoft.modsimworkbench/instances/chambers'))\r\n| where (type !~ ('microsoft.modsimworkbench/instances/chambers/connectors'))\r\n| where (type !~ ('microsoft.modsimworkbench/instances/chambers/files'))\r\n| where (type !~ ('microsoft.modsimworkbench/instances/chambers/filerequests'))\r\n| where (type !~ ('microsoft.modsimworkbench/instances/chambers/licenses'))\r\n| where (type !~ ('microsoft.modsimworkbench/instances/chambers/storages'))\r\n| where (type !~ ('microsoft.modsimworkbench/instances/chambers/workloads'))\r\n| where (type !~ ('microsoft.modsimworkbench/instances'))\r\n| where (type !~ ('microsoft.modsimworkbench/instances/sharedstorages'))\r\n| where (type !~ ('microsoft.insights/diagnosticsettings'))\r\n| where (type !~ ('microsoft.insights/scheduledqueryrules'))\r\n| where not((type =~ ('microsoft.network/serviceendpointpolicies')) and ((kind =~ ('internal'))))\r\n| where (type !~ ('microsoft.openlogisticsplatform/workspaces'))\r\n| where (type !~ ('microsoft.scom/managedinstances'))\r\n| where (type !~ ('microsoft.orbital/edgesites'))\r\n| where (type !~ ('microsoft.orbital/groundstations'))\r\n| where (type !~ ('microsoft.orbital/l2connections'))\r\n| where (type !~ ('microsoft.workloads/phpworkloads'))\r\n| where (type !~ ('microsoft.recommendationsservice/accounts/modeling'))\r\n| where (type !~ ('microsoft.recommendationsservice/accounts/serviceendpoints'))\r\n| where (type !~ ('microsoft.recoveryservicesbvtd/vaults'))\r\n| where (type !~ ('microsoft.recoveryservicesbvtd2/vaults'))\r\n| where (type !~ ('microsoft.recoveryservicesintd/vaults'))\r\n| where (type !~ ('microsoft.recoveryservicesintd2/vaults'))\r\n| where (type !~ ('microsoft.deploymentmanager/rollouts'))\r\n| where (type !~ ('microsoft.datareplication/replicationvaults'))\r\n| where (type !~ ('microsoft.storagecache/amlfilesystems'))\r\n| where (type !~ ('microsoft.storage/storagetasks'))\r\n| where not((type =~ ('microsoft.synapse/workspaces/sqlpools')) and ((kind =~ ('v3'))))\r\n| where (type !~ ('microsoft.windowspushnotificationservices/registrations'))\r\n| where not((type =~ ('microsoft.sql/servers/databases')) and ((kind in~ ('system','v2.0,system','v12.0,system','v12.0,user,datawarehouse,gen2,analytics'))))\r\n| where not((type =~ ('microsoft.sql/servers')) and ((kind =~ ('v12.0,analytics'))))\r\n| where (status =~ ('stopped (deallocated)'))\r\n| where ((type in~ ('microsoft.compute/virtualmachines','microsoft.scvmm/virtualmachines','microsoft.azurestackhci/virtualmachines'))) or ((type =~ ('microsoft.connectedvmwarevsphere/virtualmachines')) and ((kind =~ ('AVS')))) or ((type =~ ('microsoft.connectedvmwarevsphere/virtualmachines')) and ((kind =~ ('VMware'))))\r\n| project name,subscriptionDisplayName,resourceGroup,locationDisplayName,status,os,id,type,kind,location,subscriptionId,tags\r\n| sort by (tolower(tostring(name))) asc",
        "size": 0,
        "title": "List of Stopped VM",
        "showExportToExcel": true,
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "value::all"
        ],
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "status",
              "formatter": 1
            }
          ],
          "hierarchySettings": {
            "treeType": 1,
            "groupBy": [
              "status"
            ]
          }
        }
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "svmd"
      },
      "name": "query - 93"
    },
    {
      "type": 1,
      "content": {
        "json": "# VM Utilization Overview"
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "uuvm"
      },
      "name": "text - 82"
    },
    {
      "type": 11,
      "content": {
        "version": "LinkItem/1.0",
        "style": "nav",
        "links": [
          {
            "id": "96cd54b6-3236-4148-a2d9-cf5903bf8294",
            "cellValue": "selectedTab1",
            "linkTarget": "parameter",
            "linkLabel": "Dev Environment",
            "subTarget": "dev",
            "style": "link"
          },
          {
            "id": "91f89a4f-2ac6-4d15-afee-85bfb052fd38",
            "cellValue": "selectedTab1",
            "linkTarget": "parameter",
            "linkLabel": "Prod Environment",
            "subTarget": "prod",
            "style": "link"
          },
          {
            "id": "c04d0e7c-7cd7-49fe-8c14-bd0deaba4a60",
            "cellValue": "selectedTab1",
            "linkTarget": "parameter",
            "linkLabel": "Management Environment",
            "subTarget": "mgmt",
            "style": "link"
          },
          {
            "id": "9232d2c0-d8bd-4211-b862-50d990e522ea",
            "cellValue": "selectedTab1",
            "linkTarget": "parameter",
            "linkLabel": "QA Environment",
            "subTarget": "qa",
            "style": "link"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "uuvm"
      },
      "name": "links - 84"
    },
    {
      "type": 11,
      "content": {
        "version": "LinkItem/1.0",
        "style": "tabs",
        "links": [
          {
            "id": "2f4f2dc4-135c-45e4-bfbf-73093e32b7e9",
            "cellValue": "percent",
            "linkTarget": "parameter",
            "linkLabel": "Below 10 Percent",
            "subTarget": "b10",
            "preText": "Below 10 Percent",
            "style": "link"
          },
          {
            "id": "595e8e24-28cc-430a-abd1-f3f8194a930a",
            "cellValue": "percent",
            "linkTarget": "parameter",
            "linkLabel": "Below 20 Precent",
            "subTarget": "b20",
            "preText": "Below 20 Percent",
            "style": "link"
          },
          {
            "id": "26f2b6ec-f721-458c-beef-fcd92627cc13",
            "cellValue": "Percent",
            "linkTarget": "parameter",
            "linkLabel": "Below 30 Percent",
            "subTarget": "b30",
            "preText": "Below 30 Percent",
            "style": "link"
          }
        ]
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab1",
          "comparison": "isEqualTo",
          "value": "dev"
        },
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "uuvm"
        }
      ],
      "name": "links - 103"
    },
    {
      "type": 11,
      "content": {
        "version": "LinkItem/1.0",
        "style": "tabs",
        "links": [
          {
            "id": "6424a405-171f-4067-ba1a-8be599d6c6f5",
            "cellValue": "percent",
            "linkTarget": "parameter",
            "linkLabel": "Below 10 Percent",
            "subTarget": "b10",
            "preText": "Below 10 Percent",
            "style": "link"
          },
          {
            "id": "40c94556-aa80-4b6f-8e61-2cd10ec04eba",
            "cellValue": "percent",
            "linkTarget": "parameter",
            "linkLabel": "Below 20 Precent",
            "subTarget": "b20",
            "preText": "Below 20 Percent",
            "style": "link"
          },
          {
            "id": "cbcb2570-5d77-4801-a4d9-cf0cfed16e4d",
            "cellValue": "Percent",
            "linkTarget": "parameter",
            "linkLabel": "Below 30 Percent",
            "subTarget": "b30",
            "preText": "Below 30 Percent",
            "style": "link"
          }
        ]
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab1",
          "comparison": "isEqualTo",
          "value": "prod"
        },
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "uuvm"
        }
      ],
      "name": "links - 103 - Copy"
    },
    {
      "type": 11,
      "content": {
        "version": "LinkItem/1.0",
        "style": "tabs",
        "links": [
          {
            "id": "e19c2d43-8170-4bcf-a9e5-a9aed7733cc0",
            "cellValue": "percent",
            "linkTarget": "parameter",
            "linkLabel": "Below 10 Percent",
            "subTarget": "b10",
            "preText": "Below 10 Percent",
            "style": "link"
          },
          {
            "id": "8b88e5b5-57ff-4beb-8092-c49465a1b27c",
            "cellValue": "percent",
            "linkTarget": "parameter",
            "linkLabel": "Below 20 Precent",
            "subTarget": "b20",
            "preText": "Below 20 Percent",
            "style": "link"
          },
          {
            "id": "539ea9b3-a2db-42cb-a3f6-b0767244436f",
            "cellValue": "Percent",
            "linkTarget": "parameter",
            "linkLabel": "Below 30 Percent",
            "subTarget": "b30",
            "preText": "Below 30 Percent",
            "style": "link"
          }
        ]
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab1",
          "comparison": "isEqualTo",
          "value": "mgmt"
        },
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "uuvm"
        }
      ],
      "name": "links - 103 - Copy - Copy"
    },
    {
      "type": 11,
      "content": {
        "version": "LinkItem/1.0",
        "style": "tabs",
        "links": [
          {
            "id": "0452cbf9-e05f-46cc-b063-583a52ddfdcd",
            "cellValue": "percent",
            "linkTarget": "parameter",
            "linkLabel": "Below 10 Percent",
            "subTarget": "b10",
            "preText": "Below 10 Percent",
            "style": "link"
          },
          {
            "id": "330d9419-e6ea-4941-8702-429b35c3626f",
            "cellValue": "percent",
            "linkTarget": "parameter",
            "linkLabel": "Below 20 Precent",
            "subTarget": "b20",
            "preText": "Below 20 Percent",
            "style": "link"
          },
          {
            "id": "47b459f7-113b-4caf-8c3f-6d392a4b7a76",
            "cellValue": "Percent",
            "linkTarget": "parameter",
            "linkLabel": "Below 30 Percent",
            "subTarget": "b30",
            "preText": "Below 30 Percent",
            "style": "link"
          }
        ]
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab1",
          "comparison": "isEqualTo",
          "value": "qa"
        },
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "uuvm"
        }
      ],
      "name": "links - 103 - Copy - Copy - Copy"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let cpuQuery = \r\n    InsightsMetrics\r\n    | where Origin == \"vm.azm.ms\"\r\n    | where TimeGenerated > ago(30d)\r\n        and Namespace == \"Processor\"\r\n        and Name == \"UtilizationPercentage\"\r\n    | extend CPU=tostring(todynamic(Tags)[\"vm.azm.ms/totalCpus\"])\r\n    | summarize CPU_Load_Percentage = avg(Val) by Computer, CPU, _ResourceId\r\n    | where CPU_Load_Percentage < 10\r\n    | project Computer, Total_vCPUs=CPU, CPU_Load_Percentage;\r\n\r\nlet memoryQuery = \r\nInsightsMetrics\r\n| where Origin == \"vm.azm.ms\"\r\n| where TimeGenerated > ago(30d)\r\n    and Namespace == \"Memory\"\r\n| extend TotalMemoryGB = todouble(todynamic(Tags)[\"vm.azm.ms/memorySizeMB\"]) / 1024\r\n| extend UsedMemoryGB = todouble(Val) / 1024\r\n| extend MemoryUtilizationPercentage = (UsedMemoryGB / TotalMemoryGB) * 100\r\n| summarize AvgMemoryUtilizationPercentage = avg(MemoryUtilizationPercentage) by Computer, TotalMemoryGB, _ResourceId\r\n| project Computer, TotalMemoryGB, AvgMemoryUtilizationPercentage;\r\n\r\ncpuQuery\r\n| join kind=inner (memoryQuery) on Computer\r\n| project Computer, Total_vCPUs, CPU_Load_Percentage, TotalMemoryGB, AvgMemoryUtilizationPercentage",
        "size": 0,
        "title": "Last 30 days VM Average Utilization DEV (Servers needs to be connected with Log Analytics WorkSpace)",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "crossComponentResources": [
          "/subscriptions/0b451dfd-c31e-4bee-8355-dea2782ecb11/resourceGroups/rg-itservices-mgmt-dev-001/providers/Microsoft.OperationalInsights/workspaces/law-itservices-dev-001"
        ],
        "visualization": "tiles",
        "tileSettings": {
          "showBorder": false,
          "titleContent": {
            "columnMatch": "Computer",
            "formatter": 1
          },
          "leftContent": {
            "columnMatch": "CPU_Load_Percentage",
            "formatter": 12,
            "formatOptions": {
              "palette": "auto"
            },
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          }
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "uuvm"
        },
        {
          "parameterName": "selectedTab1",
          "comparison": "isEqualTo",
          "value": "dev"
        },
        {
          "parameterName": "percent",
          "comparison": "isEqualTo",
          "value": "b10"
        }
      ],
      "name": "query - 83"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let cpuQuery = \r\n    InsightsMetrics\r\n    | where Origin == \"vm.azm.ms\"\r\n    | where TimeGenerated > ago(30d)\r\n        and Namespace == \"Processor\"\r\n        and Name == \"UtilizationPercentage\"\r\n    | extend CPU=tostring(todynamic(Tags)[\"vm.azm.ms/totalCpus\"])\r\n    | summarize CPU_Load_Percentage = avg(Val) by Computer, CPU, _ResourceId\r\n    | where CPU_Load_Percentage < 20\r\n    | project Computer, Total_vCPUs=CPU, CPU_Load_Percentage;\r\n\r\nlet memoryQuery = \r\nInsightsMetrics\r\n| where Origin == \"vm.azm.ms\"\r\n| where TimeGenerated > ago(30d)\r\n    and Namespace == \"Memory\"\r\n| extend TotalMemoryGB = todouble(todynamic(Tags)[\"vm.azm.ms/memorySizeMB\"]) / 1024\r\n| extend UsedMemoryGB = todouble(Val) / 1024\r\n| extend MemoryUtilizationPercentage = (UsedMemoryGB / TotalMemoryGB) * 100\r\n| summarize AvgMemoryUtilizationPercentage = avg(MemoryUtilizationPercentage) by Computer, TotalMemoryGB, _ResourceId\r\n| project Computer, TotalMemoryGB, AvgMemoryUtilizationPercentage;\r\n\r\ncpuQuery\r\n| join kind=inner (memoryQuery) on Computer\r\n| project Computer, Total_vCPUs, CPU_Load_Percentage, TotalMemoryGB, AvgMemoryUtilizationPercentage",
        "size": 0,
        "title": "Last 30 days VM Average Utilization DEV  (Servers needs to be connected with Log Analytics WorkSpace)",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "crossComponentResources": [
          "/subscriptions/0b451dfd-c31e-4bee-8355-dea2782ecb11/resourceGroups/rg-itservices-mgmt-dev-001/providers/Microsoft.OperationalInsights/workspaces/law-itservices-dev-001"
        ],
        "visualization": "tiles",
        "tileSettings": {
          "showBorder": false,
          "titleContent": {
            "columnMatch": "Computer",
            "formatter": 1
          },
          "leftContent": {
            "columnMatch": "CPU_Load_Percentage",
            "formatter": 12,
            "formatOptions": {
              "palette": "auto"
            },
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          }
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "uuvm"
        },
        {
          "parameterName": "selectedTab1",
          "comparison": "isEqualTo",
          "value": "dev"
        },
        {
          "parameterName": "percent",
          "comparison": "isEqualTo",
          "value": "b20"
        }
      ],
      "name": "query - 83 - Copy"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let cpuQuery = \r\n    InsightsMetrics\r\n    | where Origin == \"vm.azm.ms\"\r\n    | where TimeGenerated > ago(30d)\r\n        and Namespace == \"Processor\"\r\n        and Name == \"UtilizationPercentage\"\r\n    | extend CPU=tostring(todynamic(Tags)[\"vm.azm.ms/totalCpus\"])\r\n    | summarize CPU_Load_Percentage = avg(Val) by Computer, CPU, _ResourceId\r\n    | where CPU_Load_Percentage < 30\r\n    | project Computer, Total_vCPUs=CPU, CPU_Load_Percentage;\r\n\r\nlet memoryQuery = \r\nInsightsMetrics\r\n| where Origin == \"vm.azm.ms\"\r\n| where TimeGenerated > ago(30d)\r\n    and Namespace == \"Memory\"\r\n| extend TotalMemoryGB = todouble(todynamic(Tags)[\"vm.azm.ms/memorySizeMB\"]) / 1024\r\n| extend UsedMemoryGB = todouble(Val) / 1024\r\n| extend MemoryUtilizationPercentage = (UsedMemoryGB / TotalMemoryGB) * 100\r\n| summarize AvgMemoryUtilizationPercentage = avg(MemoryUtilizationPercentage) by Computer, TotalMemoryGB, _ResourceId\r\n| project Computer, TotalMemoryGB, AvgMemoryUtilizationPercentage;\r\n\r\ncpuQuery\r\n| join kind=inner (memoryQuery) on Computer\r\n| project Computer, Total_vCPUs, CPU_Load_Percentage, TotalMemoryGB, AvgMemoryUtilizationPercentage",
        "size": 0,
        "title": "Last 30 days VM Average Utilization DEV (Servers needs to be connected with Log Analytics WorkSpace)",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "crossComponentResources": [
          "/subscriptions/0b451dfd-c31e-4bee-8355-dea2782ecb11/resourceGroups/rg-itservices-mgmt-dev-001/providers/Microsoft.OperationalInsights/workspaces/law-itservices-dev-001"
        ],
        "visualization": "tiles",
        "tileSettings": {
          "showBorder": false,
          "titleContent": {
            "columnMatch": "Computer",
            "formatter": 1
          },
          "leftContent": {
            "columnMatch": "CPU_Load_Percentage",
            "formatter": 12,
            "formatOptions": {
              "palette": "auto"
            },
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          }
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "uuvm"
        },
        {
          "parameterName": "selectedTab1",
          "comparison": "isEqualTo",
          "value": "dev"
        },
        {
          "parameterName": "percent",
          "comparison": "isEqualTo",
          "value": "b30"
        }
      ],
      "name": "query - 83 - Copy - Copy"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let cpuQuery = \r\n    InsightsMetrics\r\n    | where Origin == \"vm.azm.ms\"\r\n    | where TimeGenerated > ago(30d)\r\n        and Namespace == \"Processor\"\r\n        and Name == \"UtilizationPercentage\"\r\n    | extend CPU=tostring(todynamic(Tags)[\"vm.azm.ms/totalCpus\"])\r\n    | summarize CPU_Load_Percentage = avg(Val) by Computer, CPU, _ResourceId\r\n    | where CPU_Load_Percentage < 10\r\n    | project Computer, Total_vCPUs=CPU, CPU_Load_Percentage;\r\n\r\nlet memoryQuery = \r\nInsightsMetrics\r\n| where Origin == \"vm.azm.ms\"\r\n| where TimeGenerated > ago(30d)\r\n    and Namespace == \"Memory\"\r\n| extend TotalMemoryGB = todouble(todynamic(Tags)[\"vm.azm.ms/memorySizeMB\"]) / 1024\r\n| extend UsedMemoryGB = todouble(Val) / 1024\r\n| extend MemoryUtilizationPercentage = (UsedMemoryGB / TotalMemoryGB) * 100\r\n| summarize AvgMemoryUtilizationPercentage = avg(MemoryUtilizationPercentage) by Computer, TotalMemoryGB, _ResourceId\r\n| project Computer, TotalMemoryGB, AvgMemoryUtilizationPercentage;\r\n\r\ncpuQuery\r\n| join kind=inner (memoryQuery) on Computer\r\n| project Computer, Total_vCPUs, CPU_Load_Percentage, TotalMemoryGB, AvgMemoryUtilizationPercentage",
        "size": 0,
        "title": "List of underutilized VM",
        "showExportToExcel": true,
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "crossComponentResources": [
          "/subscriptions/0b451dfd-c31e-4bee-8355-dea2782ecb11/resourceGroups/rg-itservices-mgmt-dev-001/providers/Microsoft.OperationalInsights/workspaces/law-itservices-dev-001"
        ]
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "uuvm"
        },
        {
          "parameterName": "selectedTab1",
          "comparison": "isEqualTo",
          "value": "dev"
        },
        {
          "parameterName": "percent",
          "comparison": "isEqualTo",
          "value": "b10"
        }
      ],
      "customWidth": "100",
      "name": "query - 89"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let cpuQuery = \r\n    InsightsMetrics\r\n    | where Origin == \"vm.azm.ms\"\r\n    | where TimeGenerated > ago(30d)\r\n        and Namespace == \"Processor\"\r\n        and Name == \"UtilizationPercentage\"\r\n    | extend CPU=tostring(todynamic(Tags)[\"vm.azm.ms/totalCpus\"])\r\n    | summarize CPU_Load_Percentage = avg(Val) by Computer, CPU, _ResourceId\r\n    | where CPU_Load_Percentage < 30\r\n    | project Computer, Total_vCPUs=CPU, CPU_Load_Percentage;\r\n\r\nlet memoryQuery = \r\nInsightsMetrics\r\n| where Origin == \"vm.azm.ms\"\r\n| where TimeGenerated > ago(30d)\r\n    and Namespace == \"Memory\"\r\n| extend TotalMemoryGB = todouble(todynamic(Tags)[\"vm.azm.ms/memorySizeMB\"]) / 1024\r\n| extend UsedMemoryGB = todouble(Val) / 1024\r\n| extend MemoryUtilizationPercentage = (UsedMemoryGB / TotalMemoryGB) * 100\r\n| summarize AvgMemoryUtilizationPercentage = avg(MemoryUtilizationPercentage) by Computer, TotalMemoryGB, _ResourceId\r\n| project Computer, TotalMemoryGB, AvgMemoryUtilizationPercentage;\r\n\r\ncpuQuery\r\n| join kind=inner (memoryQuery) on Computer\r\n| project Computer, Total_vCPUs, CPU_Load_Percentage, TotalMemoryGB, AvgMemoryUtilizationPercentage",
        "size": 0,
        "title": "List of underutilized VM",
        "showExportToExcel": true,
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "crossComponentResources": [
          "/subscriptions/0b451dfd-c31e-4bee-8355-dea2782ecb11/resourceGroups/rg-itservices-mgmt-dev-001/providers/Microsoft.OperationalInsights/workspaces/law-itservices-dev-001"
        ]
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "uuvm"
        },
        {
          "parameterName": "selectedTab1",
          "comparison": "isEqualTo",
          "value": "dev"
        },
        {
          "parameterName": "percent",
          "comparison": "isEqualTo",
          "value": "b30"
        }
      ],
      "customWidth": "100",
      "name": "query - 89 - Copy"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let cpuQuery = \r\n    InsightsMetrics\r\n    | where Origin == \"vm.azm.ms\"\r\n    | where TimeGenerated > ago(30d)\r\n        and Namespace == \"Processor\"\r\n        and Name == \"UtilizationPercentage\"\r\n    | extend CPU=tostring(todynamic(Tags)[\"vm.azm.ms/totalCpus\"])\r\n    | summarize CPU_Load_Percentage = avg(Val) by Computer, CPU, _ResourceId\r\n    | where CPU_Load_Percentage < 20\r\n    | project Computer, Total_vCPUs=CPU, CPU_Load_Percentage;\r\n\r\nlet memoryQuery = \r\nInsightsMetrics\r\n| where Origin == \"vm.azm.ms\"\r\n| where TimeGenerated > ago(30d)\r\n    and Namespace == \"Memory\"\r\n| extend TotalMemoryGB = todouble(todynamic(Tags)[\"vm.azm.ms/memorySizeMB\"]) / 1024\r\n| extend UsedMemoryGB = todouble(Val) / 1024\r\n| extend MemoryUtilizationPercentage = (UsedMemoryGB / TotalMemoryGB) * 100\r\n| summarize AvgMemoryUtilizationPercentage = avg(MemoryUtilizationPercentage) by Computer, TotalMemoryGB, _ResourceId\r\n| project Computer, TotalMemoryGB, AvgMemoryUtilizationPercentage;\r\n\r\ncpuQuery\r\n| join kind=inner (memoryQuery) on Computer\r\n| project Computer, Total_vCPUs, CPU_Load_Percentage, TotalMemoryGB, AvgMemoryUtilizationPercentage",
        "size": 0,
        "title": "List of underutilized VM",
        "showExportToExcel": true,
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "crossComponentResources": [
          "/subscriptions/0b451dfd-c31e-4bee-8355-dea2782ecb11/resourceGroups/rg-itservices-mgmt-dev-001/providers/Microsoft.OperationalInsights/workspaces/law-itservices-dev-001"
        ]
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "uuvm"
        },
        {
          "parameterName": "selectedTab1",
          "comparison": "isEqualTo",
          "value": "dev"
        },
        {
          "parameterName": "percent",
          "comparison": "isEqualTo",
          "value": "b20"
        }
      ],
      "customWidth": "100",
      "name": "query - 89 - Copy"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let cpuQuery = \r\n    InsightsMetrics\r\n    | where Origin == \"vm.azm.ms\"\r\n    | where TimeGenerated > ago(30d)\r\n        and Namespace == \"Processor\"\r\n        and Name == \"UtilizationPercentage\"\r\n    | extend CPU=tostring(todynamic(Tags)[\"vm.azm.ms/totalCpus\"])\r\n    | summarize CPU_Load_Percentage = avg(Val) by Computer, CPU, _ResourceId\r\n    | where CPU_Load_Percentage < 10\r\n    | project Computer, Total_vCPUs=CPU, CPU_Load_Percentage;\r\n\r\nlet memoryQuery = \r\nInsightsMetrics\r\n| where Origin == \"vm.azm.ms\"\r\n| where TimeGenerated > ago(30d)\r\n    and Namespace == \"Memory\"\r\n| extend TotalMemoryGB = todouble(todynamic(Tags)[\"vm.azm.ms/memorySizeMB\"]) / 1024\r\n| extend UsedMemoryGB = todouble(Val) / 1024\r\n| extend MemoryUtilizationPercentage = (UsedMemoryGB / TotalMemoryGB) * 100\r\n| summarize AvgMemoryUtilizationPercentage = avg(MemoryUtilizationPercentage) by Computer, TotalMemoryGB, _ResourceId\r\n| project Computer, TotalMemoryGB, AvgMemoryUtilizationPercentage;\r\n\r\ncpuQuery\r\n| join kind=inner (memoryQuery) on Computer\r\n| project Computer, Total_vCPUs, CPU_Load_Percentage, TotalMemoryGB, AvgMemoryUtilizationPercentage",
        "size": 0,
        "title": "30 days VM utilization for prod (Servers needs to be connected with Log Analytics WorkSpace)",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "crossComponentResources": [
          "/subscriptions/4731f0c6-7bdf-4033-8383-4f2502beb9ed/resourceGroups/rg-itservices-mgmt-prod-001/providers/Microsoft.OperationalInsights/workspaces/law-itservices-prod-001"
        ],
        "visualization": "tiles",
        "tileSettings": {
          "showBorder": false,
          "titleContent": {
            "columnMatch": "Computer",
            "formatter": 1
          },
          "leftContent": {
            "columnMatch": "CPU_Load_Percentage",
            "formatter": 12,
            "formatOptions": {
              "palette": "auto"
            },
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          }
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab1",
          "comparison": "isEqualTo",
          "value": "prod"
        },
        {
          "parameterName": "percent",
          "comparison": "isEqualTo",
          "value": "b10"
        },
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "uuvm"
        }
      ],
      "name": "query - 85"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let cpuQuery = \r\n    InsightsMetrics\r\n    | where Origin == \"vm.azm.ms\"\r\n    | where TimeGenerated > ago(30d)\r\n        and Namespace == \"Processor\"\r\n        and Name == \"UtilizationPercentage\"\r\n    | extend CPU=tostring(todynamic(Tags)[\"vm.azm.ms/totalCpus\"])\r\n    | summarize CPU_Load_Percentage = avg(Val) by Computer, CPU, _ResourceId\r\n    | where CPU_Load_Percentage < 20\r\n    | project Computer, Total_vCPUs=CPU, CPU_Load_Percentage;\r\n\r\nlet memoryQuery = \r\nInsightsMetrics\r\n| where Origin == \"vm.azm.ms\"\r\n| where TimeGenerated > ago(30d)\r\n    and Namespace == \"Memory\"\r\n| extend TotalMemoryGB = todouble(todynamic(Tags)[\"vm.azm.ms/memorySizeMB\"]) / 1024\r\n| extend UsedMemoryGB = todouble(Val) / 1024\r\n| extend MemoryUtilizationPercentage = (UsedMemoryGB / TotalMemoryGB) * 100\r\n| summarize AvgMemoryUtilizationPercentage = avg(MemoryUtilizationPercentage) by Computer, TotalMemoryGB, _ResourceId\r\n| project Computer, TotalMemoryGB, AvgMemoryUtilizationPercentage;\r\n\r\ncpuQuery\r\n| join kind=inner (memoryQuery) on Computer\r\n| project Computer, Total_vCPUs, CPU_Load_Percentage, TotalMemoryGB, AvgMemoryUtilizationPercentage",
        "size": 0,
        "title": "30 days VM utilization for prod (Servers needs to be connected with Log Analytics WorkSpace)",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "crossComponentResources": [
          "/subscriptions/4731f0c6-7bdf-4033-8383-4f2502beb9ed/resourceGroups/rg-itservices-mgmt-prod-001/providers/Microsoft.OperationalInsights/workspaces/law-itservices-prod-001"
        ],
        "visualization": "tiles",
        "tileSettings": {
          "showBorder": false,
          "titleContent": {
            "columnMatch": "Computer",
            "formatter": 1
          },
          "leftContent": {
            "columnMatch": "CPU_Load_Percentage",
            "formatter": 12,
            "formatOptions": {
              "palette": "auto"
            },
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          }
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab1",
          "comparison": "isEqualTo",
          "value": "prod"
        },
        {
          "parameterName": "percent",
          "comparison": "isEqualTo",
          "value": "b20"
        },
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "uuvm"
        }
      ],
      "name": "query - 85 - Copy"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let cpuQuery = \r\n    InsightsMetrics\r\n    | where Origin == \"vm.azm.ms\"\r\n    | where TimeGenerated > ago(30d)\r\n        and Namespace == \"Processor\"\r\n        and Name == \"UtilizationPercentage\"\r\n    | extend CPU=tostring(todynamic(Tags)[\"vm.azm.ms/totalCpus\"])\r\n    | summarize CPU_Load_Percentage = avg(Val) by Computer, CPU, _ResourceId\r\n    | where CPU_Load_Percentage < 30\r\n    | project Computer, Total_vCPUs=CPU, CPU_Load_Percentage;\r\n\r\nlet memoryQuery = \r\nInsightsMetrics\r\n| where Origin == \"vm.azm.ms\"\r\n| where TimeGenerated > ago(30d)\r\n    and Namespace == \"Memory\"\r\n| extend TotalMemoryGB = todouble(todynamic(Tags)[\"vm.azm.ms/memorySizeMB\"]) / 1024\r\n| extend UsedMemoryGB = todouble(Val) / 1024\r\n| extend MemoryUtilizationPercentage = (UsedMemoryGB / TotalMemoryGB) * 100\r\n| summarize AvgMemoryUtilizationPercentage = avg(MemoryUtilizationPercentage) by Computer, TotalMemoryGB, _ResourceId\r\n| project Computer, TotalMemoryGB, AvgMemoryUtilizationPercentage;\r\n\r\ncpuQuery\r\n| join kind=inner (memoryQuery) on Computer\r\n| project Computer, Total_vCPUs, CPU_Load_Percentage, TotalMemoryGB, AvgMemoryUtilizationPercentage",
        "size": 0,
        "title": "30 days VM utilization for prod (Servers needs to be connected with Log Analytics WorkSpace)",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "crossComponentResources": [
          "/subscriptions/4731f0c6-7bdf-4033-8383-4f2502beb9ed/resourceGroups/rg-itservices-mgmt-prod-001/providers/Microsoft.OperationalInsights/workspaces/law-itservices-prod-001"
        ],
        "visualization": "tiles",
        "tileSettings": {
          "showBorder": false,
          "titleContent": {
            "columnMatch": "Computer",
            "formatter": 1
          },
          "leftContent": {
            "columnMatch": "CPU_Load_Percentage",
            "formatter": 12,
            "formatOptions": {
              "palette": "auto"
            },
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          }
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab1",
          "comparison": "isEqualTo",
          "value": "prod"
        },
        {
          "parameterName": "percent",
          "comparison": "isEqualTo",
          "value": "b30"
        },
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "uuvm"
        }
      ],
      "name": "query - 85 - Copy - Copy"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let cpuQuery = \r\n    InsightsMetrics\r\n    | where Origin == \"vm.azm.ms\"\r\n    | where TimeGenerated > ago(30d)\r\n        and Namespace == \"Processor\"\r\n        and Name == \"UtilizationPercentage\"\r\n    | extend CPU=tostring(todynamic(Tags)[\"vm.azm.ms/totalCpus\"])\r\n    | summarize CPU_Load_Percentage = avg(Val) by Computer, CPU, _ResourceId\r\n    | where CPU_Load_Percentage < 10\r\n    | project Computer, Total_vCPUs=CPU, CPU_Load_Percentage;\r\n\r\nlet memoryQuery = \r\nInsightsMetrics\r\n| where Origin == \"vm.azm.ms\"\r\n| where TimeGenerated > ago(30d)\r\n    and Namespace == \"Memory\"\r\n| extend TotalMemoryGB = todouble(todynamic(Tags)[\"vm.azm.ms/memorySizeMB\"]) / 1024\r\n| extend UsedMemoryGB = todouble(Val) / 1024\r\n| extend MemoryUtilizationPercentage = (UsedMemoryGB / TotalMemoryGB) * 100\r\n| summarize AvgMemoryUtilizationPercentage = avg(MemoryUtilizationPercentage) by Computer, TotalMemoryGB, _ResourceId\r\n| project Computer, TotalMemoryGB, AvgMemoryUtilizationPercentage;\r\n\r\ncpuQuery\r\n| join kind=inner (memoryQuery) on Computer\r\n| project Computer, Total_vCPUs, CPU_Load_Percentage, TotalMemoryGB, AvgMemoryUtilizationPercentage",
        "size": 0,
        "title": "List of Under Utlilized VM",
        "showExportToExcel": true,
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "crossComponentResources": [
          "/subscriptions/4731f0c6-7bdf-4033-8383-4f2502beb9ed/resourceGroups/rg-itservices-mgmt-prod-001/providers/Microsoft.OperationalInsights/workspaces/law-itservices-prod-001"
        ]
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "uuvm"
        },
        {
          "parameterName": "selectedTab1",
          "comparison": "isEqualTo",
          "value": "prod"
        },
        {
          "parameterName": "percent",
          "comparison": "isEqualTo",
          "value": "b10"
        }
      ],
      "customWidth": "100",
      "name": "query - 90"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let cpuQuery = \r\n    InsightsMetrics\r\n    | where Origin == \"vm.azm.ms\"\r\n    | where TimeGenerated > ago(30d)\r\n        and Namespace == \"Processor\"\r\n        and Name == \"UtilizationPercentage\"\r\n    | extend CPU=tostring(todynamic(Tags)[\"vm.azm.ms/totalCpus\"])\r\n    | summarize CPU_Load_Percentage = avg(Val) by Computer, CPU, _ResourceId\r\n    | where CPU_Load_Percentage < 20\r\n    | project Computer, Total_vCPUs=CPU, CPU_Load_Percentage;\r\n\r\nlet memoryQuery = \r\nInsightsMetrics\r\n| where Origin == \"vm.azm.ms\"\r\n| where TimeGenerated > ago(30d)\r\n    and Namespace == \"Memory\"\r\n| extend TotalMemoryGB = todouble(todynamic(Tags)[\"vm.azm.ms/memorySizeMB\"]) / 1024\r\n| extend UsedMemoryGB = todouble(Val) / 1024\r\n| extend MemoryUtilizationPercentage = (UsedMemoryGB / TotalMemoryGB) * 100\r\n| summarize AvgMemoryUtilizationPercentage = avg(MemoryUtilizationPercentage) by Computer, TotalMemoryGB, _ResourceId\r\n| project Computer, TotalMemoryGB, AvgMemoryUtilizationPercentage;\r\n\r\ncpuQuery\r\n| join kind=inner (memoryQuery) on Computer\r\n| project Computer, Total_vCPUs, CPU_Load_Percentage, TotalMemoryGB, AvgMemoryUtilizationPercentage",
        "size": 0,
        "title": "List of Under Utlilized VM",
        "showExportToExcel": true,
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "crossComponentResources": [
          "/subscriptions/4731f0c6-7bdf-4033-8383-4f2502beb9ed/resourceGroups/rg-itservices-mgmt-prod-001/providers/Microsoft.OperationalInsights/workspaces/law-itservices-prod-001"
        ]
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "uuvm"
        },
        {
          "parameterName": "selectedTab1",
          "comparison": "isEqualTo",
          "value": "prod"
        },
        {
          "parameterName": "percent",
          "comparison": "isEqualTo",
          "value": "b20"
        }
      ],
      "customWidth": "100",
      "name": "query - 90 - Copy"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let cpuQuery = \r\n    InsightsMetrics\r\n    | where Origin == \"vm.azm.ms\"\r\n    | where TimeGenerated > ago(30d)\r\n        and Namespace == \"Processor\"\r\n        and Name == \"UtilizationPercentage\"\r\n    | extend CPU=tostring(todynamic(Tags)[\"vm.azm.ms/totalCpus\"])\r\n    | summarize CPU_Load_Percentage = avg(Val) by Computer, CPU, _ResourceId\r\n    | where CPU_Load_Percentage < 30\r\n    | project Computer, Total_vCPUs=CPU, CPU_Load_Percentage;\r\n\r\nlet memoryQuery = \r\nInsightsMetrics\r\n| where Origin == \"vm.azm.ms\"\r\n| where TimeGenerated > ago(30d)\r\n    and Namespace == \"Memory\"\r\n| extend TotalMemoryGB = todouble(todynamic(Tags)[\"vm.azm.ms/memorySizeMB\"]) / 1024\r\n| extend UsedMemoryGB = todouble(Val) / 1024\r\n| extend MemoryUtilizationPercentage = (UsedMemoryGB / TotalMemoryGB) * 100\r\n| summarize AvgMemoryUtilizationPercentage = avg(MemoryUtilizationPercentage) by Computer, TotalMemoryGB, _ResourceId\r\n| project Computer, TotalMemoryGB, AvgMemoryUtilizationPercentage;\r\n\r\ncpuQuery\r\n| join kind=inner (memoryQuery) on Computer\r\n| project Computer, Total_vCPUs, CPU_Load_Percentage, TotalMemoryGB, AvgMemoryUtilizationPercentage",
        "size": 0,
        "title": "List of Under Utlilized VM",
        "showExportToExcel": true,
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "crossComponentResources": [
          "/subscriptions/4731f0c6-7bdf-4033-8383-4f2502beb9ed/resourceGroups/rg-itservices-mgmt-prod-001/providers/Microsoft.OperationalInsights/workspaces/law-itservices-prod-001"
        ]
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "uuvm"
        },
        {
          "parameterName": "selectedTab1",
          "comparison": "isEqualTo",
          "value": "prod"
        },
        {
          "parameterName": "percent",
          "comparison": "isEqualTo",
          "value": "b30"
        }
      ],
      "customWidth": "100",
      "name": "query - 90 - Copy - Copy"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let cpuQuery = \r\n    InsightsMetrics\r\n    | where Origin == \"vm.azm.ms\"\r\n    | where TimeGenerated > ago(30d)\r\n        and Namespace == \"Processor\"\r\n        and Name == \"UtilizationPercentage\"\r\n    | extend CPU=tostring(todynamic(Tags)[\"vm.azm.ms/totalCpus\"])\r\n    | summarize CPU_Load_Percentage = avg(Val) by Computer, CPU, _ResourceId\r\n    | where CPU_Load_Percentage < 10\r\n    | project Computer, Total_vCPUs=CPU, CPU_Load_Percentage;\r\n\r\nlet memoryQuery = \r\nInsightsMetrics\r\n| where Origin == \"vm.azm.ms\"\r\n| where TimeGenerated > ago(30d)\r\n    and Namespace == \"Memory\"\r\n| extend TotalMemoryGB = todouble(todynamic(Tags)[\"vm.azm.ms/memorySizeMB\"]) / 1024\r\n| extend UsedMemoryGB = todouble(Val) / 1024\r\n| extend MemoryUtilizationPercentage = (UsedMemoryGB / TotalMemoryGB) * 100\r\n| summarize AvgMemoryUtilizationPercentage = avg(MemoryUtilizationPercentage) by Computer, TotalMemoryGB, _ResourceId\r\n| project Computer, TotalMemoryGB, AvgMemoryUtilizationPercentage;\r\n\r\ncpuQuery\r\n| join kind=inner (memoryQuery) on Computer\r\n| project Computer, Total_vCPUs, CPU_Load_Percentage, TotalMemoryGB, AvgMemoryUtilizationPercentage",
        "size": 0,
        "title": "30 days VM Utilzation  for Management (Servers needs to be connected with Log Analytics WorkSpace)",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "crossComponentResources": [
          "/subscriptions/37d506fc-632d-4345-a977-e98fcb80665e/resourceGroups/rg-itservices-mgmt-001/providers/Microsoft.OperationalInsights/workspaces/law-itservices-mgmt-001"
        ],
        "visualization": "tiles",
        "tileSettings": {
          "showBorder": false,
          "titleContent": {
            "columnMatch": "Computer",
            "formatter": 1
          },
          "leftContent": {
            "columnMatch": "CPU_Load_Percentage",
            "formatter": 12,
            "formatOptions": {
              "palette": "auto"
            },
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          }
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab1",
          "comparison": "isEqualTo",
          "value": "mgmt"
        },
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "uuvm"
        },
        {
          "parameterName": "percent",
          "comparison": "isEqualTo",
          "value": "b10"
        }
      ],
      "name": "query - 86"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let cpuQuery = \r\n    InsightsMetrics\r\n    | where Origin == \"vm.azm.ms\"\r\n    | where TimeGenerated > ago(30d)\r\n        and Namespace == \"Processor\"\r\n        and Name == \"UtilizationPercentage\"\r\n    | extend CPU=tostring(todynamic(Tags)[\"vm.azm.ms/totalCpus\"])\r\n    | summarize CPU_Load_Percentage = avg(Val) by Computer, CPU, _ResourceId\r\n    | where CPU_Load_Percentage < 20\r\n    | project Computer, Total_vCPUs=CPU, CPU_Load_Percentage;\r\n\r\nlet memoryQuery = \r\nInsightsMetrics\r\n| where Origin == \"vm.azm.ms\"\r\n| where TimeGenerated > ago(30d)\r\n    and Namespace == \"Memory\"\r\n| extend TotalMemoryGB = todouble(todynamic(Tags)[\"vm.azm.ms/memorySizeMB\"]) / 1024\r\n| extend UsedMemoryGB = todouble(Val) / 1024\r\n| extend MemoryUtilizationPercentage = (UsedMemoryGB / TotalMemoryGB) * 100\r\n| summarize AvgMemoryUtilizationPercentage = avg(MemoryUtilizationPercentage) by Computer, TotalMemoryGB, _ResourceId\r\n| project Computer, TotalMemoryGB, AvgMemoryUtilizationPercentage;\r\n\r\ncpuQuery\r\n| join kind=inner (memoryQuery) on Computer\r\n| project Computer, Total_vCPUs, CPU_Load_Percentage, TotalMemoryGB, AvgMemoryUtilizationPercentage",
        "size": 0,
        "title": "30 days VM Utilzation  for Management (Servers needs to be connected with Log Analytics WorkSpace)",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "crossComponentResources": [
          "/subscriptions/37d506fc-632d-4345-a977-e98fcb80665e/resourceGroups/rg-itservices-mgmt-001/providers/Microsoft.OperationalInsights/workspaces/law-itservices-mgmt-001"
        ],
        "visualization": "tiles",
        "tileSettings": {
          "showBorder": false,
          "titleContent": {
            "columnMatch": "Computer",
            "formatter": 1
          },
          "leftContent": {
            "columnMatch": "CPU_Load_Percentage",
            "formatter": 12,
            "formatOptions": {
              "palette": "auto"
            },
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          }
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab1",
          "comparison": "isEqualTo",
          "value": "mgmt"
        },
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "uuvm"
        },
        {
          "parameterName": "percent",
          "comparison": "isEqualTo",
          "value": "b20"
        }
      ],
      "name": "query - 86 - Copy"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let cpuQuery = \r\n    InsightsMetrics\r\n    | where Origin == \"vm.azm.ms\"\r\n    | where TimeGenerated > ago(30d)\r\n        and Namespace == \"Processor\"\r\n        and Name == \"UtilizationPercentage\"\r\n    | extend CPU=tostring(todynamic(Tags)[\"vm.azm.ms/totalCpus\"])\r\n    | summarize CPU_Load_Percentage = avg(Val) by Computer, CPU, _ResourceId\r\n    | where CPU_Load_Percentage < 30\r\n    | project Computer, Total_vCPUs=CPU, CPU_Load_Percentage;\r\n\r\nlet memoryQuery = \r\nInsightsMetrics\r\n| where Origin == \"vm.azm.ms\"\r\n| where TimeGenerated > ago(30d)\r\n    and Namespace == \"Memory\"\r\n| extend TotalMemoryGB = todouble(todynamic(Tags)[\"vm.azm.ms/memorySizeMB\"]) / 1024\r\n| extend UsedMemoryGB = todouble(Val) / 1024\r\n| extend MemoryUtilizationPercentage = (UsedMemoryGB / TotalMemoryGB) * 100\r\n| summarize AvgMemoryUtilizationPercentage = avg(MemoryUtilizationPercentage) by Computer, TotalMemoryGB, _ResourceId\r\n| project Computer, TotalMemoryGB, AvgMemoryUtilizationPercentage;\r\n\r\ncpuQuery\r\n| join kind=inner (memoryQuery) on Computer\r\n| project Computer, Total_vCPUs, CPU_Load_Percentage, TotalMemoryGB, AvgMemoryUtilizationPercentage",
        "size": 0,
        "title": "30 days VM Utilzation  for Management (Servers needs to be connected with Log Analytics WorkSpace)",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "crossComponentResources": [
          "/subscriptions/37d506fc-632d-4345-a977-e98fcb80665e/resourceGroups/rg-itservices-mgmt-001/providers/Microsoft.OperationalInsights/workspaces/law-itservices-mgmt-001"
        ],
        "visualization": "tiles",
        "tileSettings": {
          "showBorder": false,
          "titleContent": {
            "columnMatch": "Computer",
            "formatter": 1
          },
          "leftContent": {
            "columnMatch": "CPU_Load_Percentage",
            "formatter": 12,
            "formatOptions": {
              "palette": "auto"
            },
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          }
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab1",
          "comparison": "isEqualTo",
          "value": "mgmt"
        },
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "uuvm"
        },
        {
          "parameterName": "percent",
          "comparison": "isEqualTo",
          "value": "b30"
        }
      ],
      "name": "query - 86 - Copy - Copy"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let cpuQuery = \r\n    InsightsMetrics\r\n    | where Origin == \"vm.azm.ms\"\r\n    | where TimeGenerated > ago(30d)\r\n        and Namespace == \"Processor\"\r\n        and Name == \"UtilizationPercentage\"\r\n    | extend CPU=tostring(todynamic(Tags)[\"vm.azm.ms/totalCpus\"])\r\n    | summarize CPU_Load_Percentage = avg(Val) by Computer, CPU, _ResourceId\r\n    | where CPU_Load_Percentage < 10\r\n    | project Computer, Total_vCPUs=CPU, CPU_Load_Percentage;\r\n\r\nlet memoryQuery = \r\nInsightsMetrics\r\n| where Origin == \"vm.azm.ms\"\r\n| where TimeGenerated > ago(30d)\r\n    and Namespace == \"Memory\"\r\n| extend TotalMemoryGB = todouble(todynamic(Tags)[\"vm.azm.ms/memorySizeMB\"]) / 1024\r\n| extend UsedMemoryGB = todouble(Val) / 1024\r\n| extend MemoryUtilizationPercentage = (UsedMemoryGB / TotalMemoryGB) * 100\r\n| summarize AvgMemoryUtilizationPercentage = avg(MemoryUtilizationPercentage) by Computer, TotalMemoryGB, _ResourceId\r\n| project Computer, TotalMemoryGB, AvgMemoryUtilizationPercentage;\r\n\r\ncpuQuery\r\n| join kind=inner (memoryQuery) on Computer\r\n| project Computer, Total_vCPUs, CPU_Load_Percentage, TotalMemoryGB, AvgMemoryUtilizationPercentage",
        "size": 0,
        "title": "List of Under Utilized VM",
        "showExportToExcel": true,
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "crossComponentResources": [
          "/subscriptions/37d506fc-632d-4345-a977-e98fcb80665e/resourceGroups/rg-itservices-mgmt-001/providers/Microsoft.OperationalInsights/workspaces/law-itservices-mgmt-001"
        ]
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "uuvm"
        },
        {
          "parameterName": "selectedTab1",
          "comparison": "isEqualTo",
          "value": "mgmt"
        },
        {
          "parameterName": "percent",
          "comparison": "isEqualTo",
          "value": "b10"
        }
      ],
      "name": "query - 91"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let cpuQuery = \r\n    InsightsMetrics\r\n    | where Origin == \"vm.azm.ms\"\r\n    | where TimeGenerated > ago(30d)\r\n        and Namespace == \"Processor\"\r\n        and Name == \"UtilizationPercentage\"\r\n    | extend CPU=tostring(todynamic(Tags)[\"vm.azm.ms/totalCpus\"])\r\n    | summarize CPU_Load_Percentage = avg(Val) by Computer, CPU, _ResourceId\r\n    | where CPU_Load_Percentage < 20\r\n    | project Computer, Total_vCPUs=CPU, CPU_Load_Percentage;\r\n\r\nlet memoryQuery = \r\nInsightsMetrics\r\n| where Origin == \"vm.azm.ms\"\r\n| where TimeGenerated > ago(30d)\r\n    and Namespace == \"Memory\"\r\n| extend TotalMemoryGB = todouble(todynamic(Tags)[\"vm.azm.ms/memorySizeMB\"]) / 1024\r\n| extend UsedMemoryGB = todouble(Val) / 1024\r\n| extend MemoryUtilizationPercentage = (UsedMemoryGB / TotalMemoryGB) * 100\r\n| summarize AvgMemoryUtilizationPercentage = avg(MemoryUtilizationPercentage) by Computer, TotalMemoryGB, _ResourceId\r\n| project Computer, TotalMemoryGB, AvgMemoryUtilizationPercentage;\r\n\r\ncpuQuery\r\n| join kind=inner (memoryQuery) on Computer\r\n| project Computer, Total_vCPUs, CPU_Load_Percentage, TotalMemoryGB, AvgMemoryUtilizationPercentage",
        "size": 0,
        "title": "List of Under Utilized VM",
        "showExportToExcel": true,
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "crossComponentResources": [
          "/subscriptions/37d506fc-632d-4345-a977-e98fcb80665e/resourceGroups/rg-itservices-mgmt-001/providers/Microsoft.OperationalInsights/workspaces/law-itservices-mgmt-001"
        ]
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "uuvm"
        },
        {
          "parameterName": "selectedTab1",
          "comparison": "isEqualTo",
          "value": "mgmt"
        },
        {
          "parameterName": "percent",
          "comparison": "isEqualTo",
          "value": "b20"
        }
      ],
      "name": "query - 91 - Copy"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let cpuQuery = \r\n    InsightsMetrics\r\n    | where Origin == \"vm.azm.ms\"\r\n    | where TimeGenerated > ago(30d)\r\n        and Namespace == \"Processor\"\r\n        and Name == \"UtilizationPercentage\"\r\n    | extend CPU=tostring(todynamic(Tags)[\"vm.azm.ms/totalCpus\"])\r\n    | summarize CPU_Load_Percentage = avg(Val) by Computer, CPU, _ResourceId\r\n    | where CPU_Load_Percentage < 30\r\n    | project Computer, Total_vCPUs=CPU, CPU_Load_Percentage;\r\n\r\nlet memoryQuery = \r\nInsightsMetrics\r\n| where Origin == \"vm.azm.ms\"\r\n| where TimeGenerated > ago(30d)\r\n    and Namespace == \"Memory\"\r\n| extend TotalMemoryGB = todouble(todynamic(Tags)[\"vm.azm.ms/memorySizeMB\"]) / 1024\r\n| extend UsedMemoryGB = todouble(Val) / 1024\r\n| extend MemoryUtilizationPercentage = (UsedMemoryGB / TotalMemoryGB) * 100\r\n| summarize AvgMemoryUtilizationPercentage = avg(MemoryUtilizationPercentage) by Computer, TotalMemoryGB, _ResourceId\r\n| project Computer, TotalMemoryGB, AvgMemoryUtilizationPercentage;\r\n\r\ncpuQuery\r\n| join kind=inner (memoryQuery) on Computer\r\n| project Computer, Total_vCPUs, CPU_Load_Percentage, TotalMemoryGB, AvgMemoryUtilizationPercentage",
        "size": 0,
        "title": "List of Under Utilized VM",
        "showExportToExcel": true,
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "crossComponentResources": [
          "/subscriptions/37d506fc-632d-4345-a977-e98fcb80665e/resourceGroups/rg-itservices-mgmt-001/providers/Microsoft.OperationalInsights/workspaces/law-itservices-mgmt-001"
        ]
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "uuvm"
        },
        {
          "parameterName": "selectedTab1",
          "comparison": "isEqualTo",
          "value": "mgmt"
        },
        {
          "parameterName": "percent",
          "comparison": "isEqualTo",
          "value": "b30"
        }
      ],
      "name": "query - 91 - Copy - Copy"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let cpuQuery = \r\n    InsightsMetrics\r\n    | where Origin == \"vm.azm.ms\"\r\n    | where TimeGenerated > ago(30d)\r\n        and Namespace == \"Processor\"\r\n        and Name == \"UtilizationPercentage\"\r\n    | extend CPU=tostring(todynamic(Tags)[\"vm.azm.ms/totalCpus\"])\r\n    | summarize CPU_Load_Percentage = avg(Val) by Computer, CPU, _ResourceId\r\n    | where CPU_Load_Percentage < 10\r\n    | project Computer, Total_vCPUs=CPU, CPU_Load_Percentage;\r\n\r\nlet memoryQuery = \r\nInsightsMetrics\r\n| where Origin == \"vm.azm.ms\"\r\n| where TimeGenerated > ago(30d)\r\n    and Namespace == \"Memory\"\r\n| extend TotalMemoryGB = todouble(todynamic(Tags)[\"vm.azm.ms/memorySizeMB\"]) / 1024\r\n| extend UsedMemoryGB = todouble(Val) / 1024\r\n| extend MemoryUtilizationPercentage = (UsedMemoryGB / TotalMemoryGB) * 100\r\n| summarize AvgMemoryUtilizationPercentage = avg(MemoryUtilizationPercentage) by Computer, TotalMemoryGB, _ResourceId\r\n| project Computer, TotalMemoryGB, AvgMemoryUtilizationPercentage;\r\n\r\ncpuQuery\r\n| join kind=inner (memoryQuery) on Computer\r\n| project Computer, Total_vCPUs, CPU_Load_Percentage, TotalMemoryGB, AvgMemoryUtilizationPercentage",
        "size": 0,
        "title": "30 days VM Utilization for QA  (Servers needs to be connected with Log Analytics WorkSpace)",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "crossComponentResources": [
          "/subscriptions/c4032a93-b07a-44c5-ab52-3784af1edffd/resourceGroups/rg-itservices-mgmt-qa-001/providers/Microsoft.OperationalInsights/workspaces/law-itservices-qa-001"
        ],
        "visualization": "tiles",
        "tileSettings": {
          "showBorder": false,
          "titleContent": {
            "columnMatch": "Computer",
            "formatter": 1
          },
          "leftContent": {
            "columnMatch": "CPU_Load_Percentage",
            "formatter": 12,
            "formatOptions": {
              "palette": "auto"
            },
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          }
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab1",
          "comparison": "isEqualTo",
          "value": "qa"
        },
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "uuvm"
        },
        {
          "parameterName": "percent",
          "comparison": "isEqualTo",
          "value": "b10"
        }
      ],
      "name": "query - 87"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let cpuQuery = \r\n    InsightsMetrics\r\n    | where Origin == \"vm.azm.ms\"\r\n    | where TimeGenerated > ago(30d)\r\n        and Namespace == \"Processor\"\r\n        and Name == \"UtilizationPercentage\"\r\n    | extend CPU=tostring(todynamic(Tags)[\"vm.azm.ms/totalCpus\"])\r\n    | summarize CPU_Load_Percentage = avg(Val) by Computer, CPU, _ResourceId\r\n    | where CPU_Load_Percentage < 20\r\n    | project Computer, Total_vCPUs=CPU, CPU_Load_Percentage;\r\n\r\nlet memoryQuery = \r\nInsightsMetrics\r\n| where Origin == \"vm.azm.ms\"\r\n| where TimeGenerated > ago(30d)\r\n    and Namespace == \"Memory\"\r\n| extend TotalMemoryGB = todouble(todynamic(Tags)[\"vm.azm.ms/memorySizeMB\"]) / 1024\r\n| extend UsedMemoryGB = todouble(Val) / 1024\r\n| extend MemoryUtilizationPercentage = (UsedMemoryGB / TotalMemoryGB) * 100\r\n| summarize AvgMemoryUtilizationPercentage = avg(MemoryUtilizationPercentage) by Computer, TotalMemoryGB, _ResourceId\r\n| project Computer, TotalMemoryGB, AvgMemoryUtilizationPercentage;\r\n\r\ncpuQuery\r\n| join kind=inner (memoryQuery) on Computer\r\n| project Computer, Total_vCPUs, CPU_Load_Percentage, TotalMemoryGB, AvgMemoryUtilizationPercentage",
        "size": 0,
        "title": "30 days VM Utilization for QA  (Servers needs to be connected with Log Analytics WorkSpace)",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "crossComponentResources": [
          "/subscriptions/c4032a93-b07a-44c5-ab52-3784af1edffd/resourceGroups/rg-itservices-mgmt-qa-001/providers/Microsoft.OperationalInsights/workspaces/law-itservices-qa-001"
        ],
        "visualization": "tiles",
        "tileSettings": {
          "showBorder": false,
          "titleContent": {
            "columnMatch": "Computer",
            "formatter": 1
          },
          "leftContent": {
            "columnMatch": "CPU_Load_Percentage",
            "formatter": 12,
            "formatOptions": {
              "palette": "auto"
            },
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          }
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab1",
          "comparison": "isEqualTo",
          "value": "qa"
        },
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "uuvm"
        },
        {
          "parameterName": "percent",
          "comparison": "isEqualTo",
          "value": "b20"
        }
      ],
      "name": "query - 87 - Copy"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let cpuQuery = \r\n    InsightsMetrics\r\n    | where Origin == \"vm.azm.ms\"\r\n    | where TimeGenerated > ago(30d)\r\n        and Namespace == \"Processor\"\r\n        and Name == \"UtilizationPercentage\"\r\n    | extend CPU=tostring(todynamic(Tags)[\"vm.azm.ms/totalCpus\"])\r\n    | summarize CPU_Load_Percentage = avg(Val) by Computer, CPU, _ResourceId\r\n    | where CPU_Load_Percentage < 30\r\n    | project Computer, Total_vCPUs=CPU, CPU_Load_Percentage;\r\n\r\nlet memoryQuery = \r\nInsightsMetrics\r\n| where Origin == \"vm.azm.ms\"\r\n| where TimeGenerated > ago(30d)\r\n    and Namespace == \"Memory\"\r\n| extend TotalMemoryGB = todouble(todynamic(Tags)[\"vm.azm.ms/memorySizeMB\"]) / 1024\r\n| extend UsedMemoryGB = todouble(Val) / 1024\r\n| extend MemoryUtilizationPercentage = (UsedMemoryGB / TotalMemoryGB) * 100\r\n| summarize AvgMemoryUtilizationPercentage = avg(MemoryUtilizationPercentage) by Computer, TotalMemoryGB, _ResourceId\r\n| project Computer, TotalMemoryGB, AvgMemoryUtilizationPercentage;\r\n\r\ncpuQuery\r\n| join kind=inner (memoryQuery) on Computer\r\n| project Computer, Total_vCPUs, CPU_Load_Percentage, TotalMemoryGB, AvgMemoryUtilizationPercentage",
        "size": 0,
        "title": "30 days VM Utilization for QA  (Servers needs to be connected with Log Analytics WorkSpace)",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "crossComponentResources": [
          "/subscriptions/c4032a93-b07a-44c5-ab52-3784af1edffd/resourceGroups/rg-itservices-mgmt-qa-001/providers/Microsoft.OperationalInsights/workspaces/law-itservices-qa-001"
        ],
        "visualization": "tiles",
        "tileSettings": {
          "showBorder": false,
          "titleContent": {
            "columnMatch": "Computer",
            "formatter": 1
          },
          "leftContent": {
            "columnMatch": "CPU_Load_Percentage",
            "formatter": 12,
            "formatOptions": {
              "palette": "auto"
            },
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          }
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab1",
          "comparison": "isEqualTo",
          "value": "qa"
        },
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "uuvm"
        },
        {
          "parameterName": "percent",
          "comparison": "isEqualTo",
          "value": "b30"
        }
      ],
      "name": "query - 87 - Copy - Copy"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let cpuQuery = \r\n    InsightsMetrics\r\n    | where Origin == \"vm.azm.ms\"\r\n    | where TimeGenerated > ago(30d)\r\n        and Namespace == \"Processor\"\r\n        and Name == \"UtilizationPercentage\"\r\n    | extend CPU=tostring(todynamic(Tags)[\"vm.azm.ms/totalCpus\"])\r\n    | summarize CPU_Load_Percentage = avg(Val) by Computer, CPU, _ResourceId\r\n    | where CPU_Load_Percentage < 10\r\n    | project Computer, Total_vCPUs=CPU, CPU_Load_Percentage;\r\n\r\nlet memoryQuery = \r\nInsightsMetrics\r\n| where Origin == \"vm.azm.ms\"\r\n| where TimeGenerated > ago(30d)\r\n    and Namespace == \"Memory\"\r\n| extend TotalMemoryGB = todouble(todynamic(Tags)[\"vm.azm.ms/memorySizeMB\"]) / 1024\r\n| extend UsedMemoryGB = todouble(Val) / 1024\r\n| extend MemoryUtilizationPercentage = (UsedMemoryGB / TotalMemoryGB) * 100\r\n| summarize AvgMemoryUtilizationPercentage = avg(MemoryUtilizationPercentage) by Computer, TotalMemoryGB, _ResourceId\r\n| project Computer, TotalMemoryGB, AvgMemoryUtilizationPercentage;\r\n\r\ncpuQuery\r\n| join kind=inner (memoryQuery) on Computer\r\n| project Computer, Total_vCPUs, CPU_Load_Percentage, TotalMemoryGB, AvgMemoryUtilizationPercentage",
        "size": 0,
        "title": "List of Under Utilized VM",
        "showExportToExcel": true,
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "crossComponentResources": [
          "/subscriptions/c4032a93-b07a-44c5-ab52-3784af1edffd/resourceGroups/rg-itservices-mgmt-qa-001/providers/Microsoft.OperationalInsights/workspaces/law-itservices-qa-001"
        ]
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "uuvm"
        },
        {
          "parameterName": "selectedTab1",
          "comparison": "isEqualTo",
          "value": "qa"
        },
        {
          "parameterName": "percent",
          "comparison": "isEqualTo",
          "value": "b10"
        }
      ],
      "name": "query - 92"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let cpuQuery = \r\n    InsightsMetrics\r\n    | where Origin == \"vm.azm.ms\"\r\n    | where TimeGenerated > ago(30d)\r\n        and Namespace == \"Processor\"\r\n        and Name == \"UtilizationPercentage\"\r\n    | extend CPU=tostring(todynamic(Tags)[\"vm.azm.ms/totalCpus\"])\r\n    | summarize CPU_Load_Percentage = avg(Val) by Computer, CPU, _ResourceId\r\n    | where CPU_Load_Percentage < 20\r\n    | project Computer, Total_vCPUs=CPU, CPU_Load_Percentage;\r\n\r\nlet memoryQuery = \r\nInsightsMetrics\r\n| where Origin == \"vm.azm.ms\"\r\n| where TimeGenerated > ago(30d)\r\n    and Namespace == \"Memory\"\r\n| extend TotalMemoryGB = todouble(todynamic(Tags)[\"vm.azm.ms/memorySizeMB\"]) / 1024\r\n| extend UsedMemoryGB = todouble(Val) / 1024\r\n| extend MemoryUtilizationPercentage = (UsedMemoryGB / TotalMemoryGB) * 100\r\n| summarize AvgMemoryUtilizationPercentage = avg(MemoryUtilizationPercentage) by Computer, TotalMemoryGB, _ResourceId\r\n| project Computer, TotalMemoryGB, AvgMemoryUtilizationPercentage;\r\n\r\ncpuQuery\r\n| join kind=inner (memoryQuery) on Computer\r\n| project Computer, Total_vCPUs, CPU_Load_Percentage, TotalMemoryGB, AvgMemoryUtilizationPercentage",
        "size": 0,
        "title": "List of Under Utilized VM",
        "showExportToExcel": true,
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "crossComponentResources": [
          "/subscriptions/c4032a93-b07a-44c5-ab52-3784af1edffd/resourceGroups/rg-itservices-mgmt-qa-001/providers/Microsoft.OperationalInsights/workspaces/law-itservices-qa-001"
        ]
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "uuvm"
        },
        {
          "parameterName": "selectedTab1",
          "comparison": "isEqualTo",
          "value": "qa"
        },
        {
          "parameterName": "percent",
          "comparison": "isEqualTo",
          "value": "b20"
        }
      ],
      "name": "query - 92 - Copy"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let cpuQuery = \r\n    InsightsMetrics\r\n    | where Origin == \"vm.azm.ms\"\r\n    | where TimeGenerated > ago(30d)\r\n        and Namespace == \"Processor\"\r\n        and Name == \"UtilizationPercentage\"\r\n    | extend CPU=tostring(todynamic(Tags)[\"vm.azm.ms/totalCpus\"])\r\n    | summarize CPU_Load_Percentage = avg(Val) by Computer, CPU, _ResourceId\r\n    | where CPU_Load_Percentage < 30\r\n    | project Computer, Total_vCPUs=CPU, CPU_Load_Percentage;\r\n\r\nlet memoryQuery = \r\nInsightsMetrics\r\n| where Origin == \"vm.azm.ms\"\r\n| where TimeGenerated > ago(30d)\r\n    and Namespace == \"Memory\"\r\n| extend TotalMemoryGB = todouble(todynamic(Tags)[\"vm.azm.ms/memorySizeMB\"]) / 1024\r\n| extend UsedMemoryGB = todouble(Val) / 1024\r\n| extend MemoryUtilizationPercentage = (UsedMemoryGB / TotalMemoryGB) * 100\r\n| summarize AvgMemoryUtilizationPercentage = avg(MemoryUtilizationPercentage) by Computer, TotalMemoryGB, _ResourceId\r\n| project Computer, TotalMemoryGB, AvgMemoryUtilizationPercentage;\r\n\r\ncpuQuery\r\n| join kind=inner (memoryQuery) on Computer\r\n| project Computer, Total_vCPUs, CPU_Load_Percentage, TotalMemoryGB, AvgMemoryUtilizationPercentage",
        "size": 0,
        "title": "List of Under Utilized VM",
        "showExportToExcel": true,
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "crossComponentResources": [
          "/subscriptions/c4032a93-b07a-44c5-ab52-3784af1edffd/resourceGroups/rg-itservices-mgmt-qa-001/providers/Microsoft.OperationalInsights/workspaces/law-itservices-qa-001"
        ]
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "uuvm"
        },
        {
          "parameterName": "selectedTab1",
          "comparison": "isEqualTo",
          "value": "qa"
        },
        {
          "parameterName": "percent",
          "comparison": "isEqualTo",
          "value": "b30"
        }
      ],
      "name": "query - 92 - Copy - Copy"
    },
    {
      "type": 1,
      "content": {
        "json": "# Cost Advisory Overview"
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "ca"
      },
      "name": "text - 95"
    },
    {
      "type": 1,
      "content": {
        "json": "Azure Advisor analyzes your configurations and usage data and provides tailored, doable advice to assist you in cost-effectively using Azure resources.",
        "style": "success"
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "ca"
      },
      "name": "text - 157"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "AdvisorResources\r\n| where type == 'microsoft.advisor/recommendations'\r\n| where properties.category == 'Cost'\r\n| extend\r\n¬†¬†¬† resources = tostring(properties.resourceMetadata.resourceId),\r\n¬†¬†¬† savings = todouble(properties.extendedProperties.savingsAmount),\r\n¬†¬†¬† solution = tostring(properties.shortDescription.solution),\r\n¬†¬†¬† currency = tostring(properties.extendedProperties.savingsCurrency)\r\n| summarize\r\n¬†¬†¬† dcount(resources),\r\n¬†¬†¬† bin(sum(savings), 0.01)\r\n¬†¬†¬† by solution, currency\r\n| project solution, dcount_resources, sum_savings, currency\r\n| order by sum_savings desc",
        "size": 0,
        "title": "Cost Advisory detail",
        "showExportToExcel": true,
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "value::all"
        ]
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "ca"
      },
      "name": "query - 94"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "AdvisorResources|¬†where¬†type¬†==¬†'microsoft.advisor/recommendations'|¬†where¬†properties.category¬†==¬†'Cost'|¬†extend¬†¬†¬†¬†resources¬†=¬†tostring(properties.resourceMetadata.resourceId),¬†¬†¬†¬†savings¬†=¬†todouble(properties.extendedProperties.savingsAmount),¬†¬†¬†¬†solution¬†=¬†tostring(properties.shortDescription.solution),¬†¬†¬†¬†currency¬†=¬†tostring(properties.extendedProperties.savingsCurrency)|¬†project¬†solution,¬†resources,¬†savings,currency|¬†order¬†by¬†solution",
        "size": 0,
        "title": "Detailed Cost Advisory",
        "showExportToExcel": true,
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "value::all"
        ]
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "ca"
      },
      "name": "query - 97"
    },
    {
      "type": 1,
      "content": {
        "json": "# Orphan API Connection"
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "op"
        },
        {
          "parameterName": "selectedTab2",
          "comparison": "isEqualTo",
          "value": "oapi"
        }
      ],
      "name": "text - 98"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "resources¬†|¬†where¬†type¬†=~¬†'Microsoft.Web/connections'|project¬†id¬†|join¬†kind=¬†leftouter¬†(¬†resources¬†|¬†where¬†type¬†==¬†'microsoft.logic/workflows'|extend¬†propertiesJson=parse_json(properties)|extend¬†ConJson=propertiesJson[\"parameters\"][\"$connections\"][\"value\"]¬†|mvexpand¬†Conn=ConJson¬†|where¬†notnull(Conn)|extend¬†connectionId=extract(\"\\\"connectionId\\\":\\\"(.*)\\\"\",1,tostring(Conn))¬†|project¬†connectionId¬†)¬†on¬†$left.id==$right.connectionId",
        "size": 0,
        "title": "API connection Details",
        "showExportToExcel": true,
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "value::all"
        ]
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "op"
        },
        {
          "parameterName": "selectedTab2",
          "comparison": "isEqualTo",
          "value": "oapi"
        }
      ],
      "name": "query - 99"
    },
    {
      "type": 1,
      "content": {
        "json": "# Orphaned Unused Web API connection & Gateways¬†"
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "op"
        },
        {
          "parameterName": "selectedTab2",
          "comparison": "isEqualTo",
          "value": "ouwebapi"
        }
      ],
      "name": "text - 100"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "resources|¬†where¬†type¬†=~¬†'Microsoft.Web/connections'|¬†extend¬†GatewayName=iff(isnotempty(todynamic(properties)[\"parameterValues\"]),todynamic(properties)[\"parameterValues\"][\"gateway\"][\"name\"]¬†,todynamic(properties)[\"parameterValueSet\"][\"values\"][\"gateway\"][\"value\"][\"name\"])|project¬†API_id=id¬†,API_Name=name,GatewayName,API_resourceGroup=resourceGroup|join¬†kind=¬†leftouter(resources|¬†where¬†type¬†==¬†'microsoft.logic/workflows'|extend¬†propertiesJson=parse_json(properties)|extend¬†ConJson=propertiesJson[\"parameters\"][\"$connections\"][\"value\"]|mvexpand¬†Conn=ConJson|where¬†¬†¬†notnull(Conn)|extend¬†connectionId=extract(\"\\\"connectionId\\\":\\\"(.*?)\\\"\",1,tostring(Conn))|project¬†connectionId,LogicApp_id=id,LogicApp_resourceGroup=resourceGroup,LogicApp_Name=name)¬†¬†¬†on¬†¬†$left.API_id==$right.connectionId|project¬†API_Name¬†,API_resourceGroup,GatewayName,Used_in_LogicApp¬†=iff(isnotempty(LogicApp_id),¬†\"Yes\",\"No\")¬†¬†,LogicApp_resourceGroup,LogicApp_Name",
        "size": 0,
        "title": "Unused Web API connection & Gateways¬† Details",
        "showExportToExcel": true,
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "value::all"
        ]
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "op"
        },
        {
          "parameterName": "selectedTab2",
          "comparison": "isEqualTo",
          "value": "ouwebapi"
        }
      ],
      "name": "query - 101"
    },
    {
      "type": 1,
      "content": {
        "json": "# Reservation"
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "res"
        },
        {
          "parameterName": "selectedTabr",
          "comparison": "isEqualTo",
          "value": "red"
        }
      ],
      "name": "text - 124"
    },
    {
      "type": 11,
      "content": {
        "version": "LinkItem/1.0",
        "style": "nav",
        "links": [
          {
            "id": "7d7c6306-7830-4ab9-a109-90adb03630a1",
            "cellValue": "selectedTabr",
            "linkTarget": "parameter",
            "linkLabel": "Reserved VM Details",
            "subTarget": "red",
            "style": "link"
          },
          {
            "id": "784b9469-781f-4998-89b5-c4eb5aed71bd",
            "cellValue": "selectedTabr",
            "linkTarget": "parameter",
            "linkLabel": "Non-Reserved VM Details",
            "subTarget": "nred",
            "style": "link"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "res"
      },
      "name": "links - 163"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "externaldata(ReservationName: string, ReservationId: string, ResourceName: string, ResourceId: string, ResourceType: string, SKU: string, ResourceLocation: string, Tags: string, ResourceGroup: string, ResourceGroupId: string, Subscription: string, SubscriptionId: string, Cost: string, CostUSD: string, ChargeType: string, Currency: string)[@'https://stgusea1finops001.blob.core.windows.net/reservationvm/CostManagement_Tenant%20Root%20Group_2023-07-10-1688989303676.csv?sp=r&st=2023-07-10T11:49:25Z&se=2023-11-29T19:49:25Z&spr=https&sv=2022-11-02&sr=b&sig=aGji4OieE%2FoBxdPlX27NkmeYtlrF4X%2FYKGutTUzsDKc%3D'] with (ignoreFirstRecord=true)",
        "size": 0,
        "title": "VM Reservation details",
        "timeContext": {
          "durationMs": 86400000
        },
        "showExportToExcel": true,
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "crossComponentResources": [
          "/subscriptions/0b451dfd-c31e-4bee-8355-dea2782ecb11/resourceGroups/rg-itservices-finOps-dev-002/providers/Microsoft.OperationalInsights/workspaces/law-finops-001"
        ],
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "Group",
              "formatter": 1
            }
          ],
          "hierarchySettings": {
            "treeType": 1,
            "groupBy": [
              "ResourceGroup"
            ]
          }
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "res"
        },
        {
          "parameterName": "selectedTabr",
          "comparison": "isEqualTo",
          "value": "red"
        }
      ],
      "name": "query - 177"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "externaldata(ResourceGroupName: string, VMname: string, Subscription: string)[@'https://stgusea1finops001.blob.core.windows.net/nonreservedvm/non-reservedvmlatest.csv?sp=r&st=2023-07-25T10:11:59Z&se=2024-02-21T18:11:59Z&spr=https&sv=2022-11-02&sr=b&sig=cuDN2BwgsdiWaMPgTB2oitig04E7Wlu1NznIzt%2B%2Bipo%3D'] with (ignoreFirstRecord=true)",
        "size": 0,
        "title": "Non-reserved VM",
        "timeContext": {
          "durationMs": 86400000
        },
        "showExportToExcel": true,
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "crossComponentResources": [
          "/subscriptions/0b451dfd-c31e-4bee-8355-dea2782ecb11/resourceGroups/rg-itservices-finOps-dev-002/providers/Microsoft.OperationalInsights/workspaces/law-finops-001"
        ],
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "Group",
              "formatter": 1
            }
          ],
          "hierarchySettings": {
            "treeType": 1,
            "groupBy": [
              "ResourceGroupName"
            ]
          }
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "res"
        },
        {
          "parameterName": "selectedTabr",
          "comparison": "isEqualTo",
          "value": "nred"
        }
      ],
      "name": "query - 164"
    },
    {
      "type": 11,
      "content": {
        "version": "LinkItem/1.0",
        "style": "tabs",
        "links": [
          {
            "id": "09e34bad-e0cc-4256-8338-62e2554a040c",
            "cellValue": "sand",
            "linkTarget": "parameter",
            "linkLabel": ">50Days",
            "subTarget": "50",
            "preText": "",
            "style": "link"
          },
          {
            "id": "f40e74e9-b217-475d-aeb6-dd19b847ffc1",
            "cellValue": "sand",
            "linkTarget": "parameter",
            "linkLabel": ">100Days",
            "subTarget": "100",
            "preText": "",
            "style": "link"
          },
          {
            "id": "bf504db3-f38d-4833-9fb7-c8acab0dd996",
            "cellValue": "sand",
            "linkTarget": "parameter",
            "linkLabel": ">500Days",
            "subTarget": "500",
            "preText": "",
            "style": "link"
          },
          {
            "id": "9cc39c06-7c8c-4aaf-8eab-856b85ffc491",
            "cellValue": "sand",
            "linkTarget": "parameter",
            "linkLabel": ">1000Days",
            "subTarget": "1000",
            "preText": "",
            "style": "link"
          },
          {
            "id": "9e114bdc-3a0b-4455-a655-224f518d8525",
            "cellValue": "sand",
            "linkTarget": "parameter",
            "linkLabel": "All details",
            "subTarget": "all",
            "preText": "",
            "style": "link"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "bil"
      },
      "name": "links - 131"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let data =externaldata ( Resource_ID:string,  name:string ,CREATED_date:string ,Days:int,Resource_TYPE:string, subscription_NAME:string)['https://stgusea1finops001.blob.core.windows.net/creationdate/Resource_created2023-04-11-083824.csv?sp=r&st=2023-07-10T13:04:21Z&se=2023-11-16T21:04:21Z&spr=https&sv=2022-11-02&sr=b&sig=0t32%2FlA1L4QJIPpSH9K9tAlJ9k5MWLEzWZ8S10TE2T0%3D'] with (ignoreFirstRecord=true);\r\n['data']\r\n| where Days > 100\r\n| summarize count() by Resource_TYPE",
        "size": 0,
        "title": "Resource Type Count",
        "timeContext": {
          "durationMs": 86400000
        },
        "showExportToExcel": true,
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "crossComponentResources": [
          "/subscriptions/0b451dfd-c31e-4bee-8355-dea2782ecb11/resourceGroups/rg-itservices-finOps-dev-002/providers/Microsoft.OperationalInsights/workspaces/law-finops-001"
        ],
        "visualization": "piechart",
        "chartSettings": {
          "yAxis": [
            "count_"
          ],
          "group": "Resource_TYPE",
          "createOtherGroup": null,
          "showMetrics": false,
          "showLegend": true
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "bil"
        },
        {
          "parameterName": "sand",
          "comparison": "isEqualTo",
          "value": "100"
        }
      ],
      "name": "query - 129 - Copy"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let data =externaldata ( Resource_ID:string,  name:string ,CREATED_date:string ,Days:int,Resource_TYPE:string, subscription_NAME:string)['https://stgusea1finops001.blob.core.windows.net/creationdate/Resource_created2023-04-11-083824.csv?sp=r&st=2023-07-10T13:04:21Z&se=2023-11-16T21:04:21Z&spr=https&sv=2022-11-02&sr=b&sig=0t32%2FlA1L4QJIPpSH9K9tAlJ9k5MWLEzWZ8S10TE2T0%3D'] with (ignoreFirstRecord=true);\r\n['data']\r\n| where Days > 50\r\n| summarize count() by Resource_TYPE",
        "size": 0,
        "title": "Resource Type Count",
        "timeContext": {
          "durationMs": 86400000
        },
        "showExportToExcel": true,
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "crossComponentResources": [
          "/subscriptions/0b451dfd-c31e-4bee-8355-dea2782ecb11/resourceGroups/rg-itservices-finOps-dev-002/providers/Microsoft.OperationalInsights/workspaces/law-finops-001"
        ],
        "visualization": "piechart",
        "chartSettings": {
          "group": "Resource_TYPE",
          "createOtherGroup": null,
          "showMetrics": false,
          "showLegend": true
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "bil"
        },
        {
          "parameterName": "sand",
          "comparison": "isEqualTo",
          "value": "50"
        }
      ],
      "name": "query - 129 - Copy - Copy"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let data =externaldata ( Resource_ID:string,  name:string ,CREATED_date:string ,Days:int,Resource_TYPE:string, subscription_NAME:string)['https://stgusea1finops001.blob.core.windows.net/creationdate/Resource_created2023-04-11-083824.csv?sp=r&st=2023-07-10T13:04:21Z&se=2023-11-16T21:04:21Z&spr=https&sv=2022-11-02&sr=b&sig=0t32%2FlA1L4QJIPpSH9K9tAlJ9k5MWLEzWZ8S10TE2T0%3D'] with (ignoreFirstRecord=true);\r\n['data']\r\n| where Days > 500\r\n| summarize count() by Resource_TYPE",
        "size": 0,
        "title": "Resource Type Count",
        "timeContext": {
          "durationMs": 86400000
        },
        "showExportToExcel": true,
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "crossComponentResources": [
          "/subscriptions/0b451dfd-c31e-4bee-8355-dea2782ecb11/resourceGroups/rg-itservices-finOps-dev-002/providers/Microsoft.OperationalInsights/workspaces/law-finops-001"
        ],
        "visualization": "piechart",
        "chartSettings": {
          "group": "Resource_TYPE",
          "createOtherGroup": null,
          "showMetrics": false,
          "showLegend": true
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "bil"
        },
        {
          "parameterName": "sand",
          "comparison": "isEqualTo",
          "value": "500"
        }
      ],
      "name": "query - 129 - Copy - Copy - Copy"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let data =externaldata ( Resource_ID:string,  name:string ,CREATED_date:string ,Days:int,Resource_TYPE:string, subscription_NAME:string)['https://stgusea1finops001.blob.core.windows.net/creationdate/Resource_created2023-04-11-083824.csv?sp=r&st=2023-07-10T13:04:21Z&se=2023-11-16T21:04:21Z&spr=https&sv=2022-11-02&sr=b&sig=0t32%2FlA1L4QJIPpSH9K9tAlJ9k5MWLEzWZ8S10TE2T0%3D'] with (ignoreFirstRecord=true);\r\n['data']\r\n| where Days > 1000\r\n| summarize count() by Resource_TYPE",
        "size": 0,
        "title": "Resource Type Count",
        "timeContext": {
          "durationMs": 86400000
        },
        "showExportToExcel": true,
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "crossComponentResources": [
          "/subscriptions/0b451dfd-c31e-4bee-8355-dea2782ecb11/resourceGroups/rg-itservices-finOps-dev-002/providers/Microsoft.OperationalInsights/workspaces/law-finops-001"
        ],
        "visualization": "piechart",
        "chartSettings": {
          "group": "Resource_TYPE",
          "createOtherGroup": null,
          "showMetrics": false,
          "showLegend": true
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "bil"
        },
        {
          "parameterName": "sand",
          "comparison": "isEqualTo",
          "value": "1000"
        }
      ],
      "name": "query - 129 - Copy - Copy - Copy - Copy"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let data =externaldata ( Resource_ID:string,  name:string ,CREATED_date:string ,Days:int,Resource_TYPE:string, subscription_NAME:string)['https://stgusea1finops001.blob.core.windows.net/creationdate/Resource_created2023-04-11-083824.csv?sp=r&st=2023-07-10T13:04:21Z&se=2023-11-16T21:04:21Z&spr=https&sv=2022-11-02&sr=b&sig=0t32%2FlA1L4QJIPpSH9K9tAlJ9k5MWLEzWZ8S10TE2T0%3D'] with (ignoreFirstRecord=true);\r\n['data']\r\n| summarize count() by Resource_TYPE\r\n",
        "size": 0,
        "title": "Resource Type Count",
        "timeContext": {
          "durationMs": 86400000
        },
        "showExportToExcel": true,
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "crossComponentResources": [
          "/subscriptions/0b451dfd-c31e-4bee-8355-dea2782ecb11/resourceGroups/rg-itservices-finOps-dev-002/providers/Microsoft.OperationalInsights/workspaces/law-finops-001"
        ],
        "visualization": "piechart",
        "chartSettings": {
          "group": "Resource_TYPE",
          "createOtherGroup": null,
          "showMetrics": false,
          "showLegend": true
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "bil"
        },
        {
          "parameterName": "sand",
          "comparison": "isEqualTo",
          "value": "all"
        }
      ],
      "name": "query - 129 - Copy - Copy - Copy - Copy - Copy"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let data =externaldata ( Resource_ID:string,  name:string ,CREATED_date:string ,Days:int,Resource_TYPE:string, subscription_NAME:string)['https://stgusea1finops001.blob.core.windows.net/creationdate/Resource_created2023-04-11-083824.csv?sp=r&st=2023-07-10T13:04:21Z&se=2023-11-16T21:04:21Z&spr=https&sv=2022-11-02&sr=b&sig=0t32%2FlA1L4QJIPpSH9K9tAlJ9k5MWLEzWZ8S10TE2T0%3D'] with (ignoreFirstRecord=true);\r\n['data']\r\n| where Days > 100",
        "size": 0,
        "title": "Creation date for sandbox resources",
        "timeContext": {
          "durationMs": 86400000
        },
        "showExportToExcel": true,
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "crossComponentResources": [
          "/subscriptions/0b451dfd-c31e-4bee-8355-dea2782ecb11/resourceGroups/rg-itservices-finOps-dev-002/providers/Microsoft.OperationalInsights/workspaces/law-finops-001"
        ],
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "Group",
              "formatter": 1
            }
          ],
          "hierarchySettings": {
            "treeType": 1,
            "groupBy": [
              "Resource_TYPE"
            ]
          }
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "bil"
        },
        {
          "parameterName": "sand",
          "comparison": "isEqualTo",
          "value": "100"
        }
      ],
      "name": "query - 129"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let data =externaldata ( Resource_ID:string,  name:string ,CREATED_date:string ,Days:int,Resource_TYPE:string, subscription_NAME:string)['https://stgusea1finops001.blob.core.windows.net/creationdate/Resource_created2023-04-11-083824.csv?sp=r&st=2023-07-10T13:04:21Z&se=2023-11-16T21:04:21Z&spr=https&sv=2022-11-02&sr=b&sig=0t32%2FlA1L4QJIPpSH9K9tAlJ9k5MWLEzWZ8S10TE2T0%3D'] with (ignoreFirstRecord=true);\r\n['data']\r\n| where Days > 50",
        "size": 0,
        "title": "Creation date for sandbox resources",
        "timeContext": {
          "durationMs": 86400000
        },
        "showExportToExcel": true,
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "crossComponentResources": [
          "/subscriptions/0b451dfd-c31e-4bee-8355-dea2782ecb11/resourceGroups/rg-itservices-finOps-dev-002/providers/Microsoft.OperationalInsights/workspaces/law-finops-001"
        ],
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "Group",
              "formatter": 1
            }
          ],
          "hierarchySettings": {
            "treeType": 1,
            "groupBy": [
              "Resource_TYPE"
            ]
          }
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "bil"
        },
        {
          "parameterName": "sand",
          "comparison": "isEqualTo",
          "value": "50"
        }
      ],
      "name": "query - 129 - Copy"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let data =externaldata ( Resource_ID:string,  name:string ,CREATED_date:string ,Days:int,Resource_TYPE:string, subscription_NAME:string)['https://stgusea1finops001.blob.core.windows.net/creationdate/Resource_created2023-04-11-083824.csv?sp=r&st=2023-07-10T13:04:21Z&se=2023-11-16T21:04:21Z&spr=https&sv=2022-11-02&sr=b&sig=0t32%2FlA1L4QJIPpSH9K9tAlJ9k5MWLEzWZ8S10TE2T0%3D'] with (ignoreFirstRecord=true);\r\n['data']\r\n| where Days > 500",
        "size": 0,
        "title": "Creation date for sandbox resources",
        "timeContext": {
          "durationMs": 86400000
        },
        "showExportToExcel": true,
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "crossComponentResources": [
          "/subscriptions/0b451dfd-c31e-4bee-8355-dea2782ecb11/resourceGroups/rg-itservices-finOps-dev-002/providers/Microsoft.OperationalInsights/workspaces/law-finops-001"
        ],
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "Group",
              "formatter": 1
            }
          ],
          "hierarchySettings": {
            "treeType": 1,
            "groupBy": [
              "Resource_TYPE"
            ]
          }
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "bil"
        },
        {
          "parameterName": "sand",
          "comparison": "isEqualTo",
          "value": "500"
        }
      ],
      "name": "query - 129 - Copy - Copy"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let data =externaldata ( Resource_ID:string,  name:string ,CREATED_date:string ,Days:int,Resource_TYPE:string, subscription_NAME:string)['https://stgusea1finops001.blob.core.windows.net/creationdate/Resource_created2023-04-11-083824.csv?sp=r&st=2023-07-10T13:04:21Z&se=2023-11-16T21:04:21Z&spr=https&sv=2022-11-02&sr=b&sig=0t32%2FlA1L4QJIPpSH9K9tAlJ9k5MWLEzWZ8S10TE2T0%3D'] with (ignoreFirstRecord=true);\r\n['data']\r\n| where Days > 1000",
        "size": 0,
        "title": "Creation date for sandbox resources",
        "timeContext": {
          "durationMs": 86400000
        },
        "showExportToExcel": true,
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "crossComponentResources": [
          "/subscriptions/0b451dfd-c31e-4bee-8355-dea2782ecb11/resourceGroups/rg-itservices-finOps-dev-002/providers/Microsoft.OperationalInsights/workspaces/law-finops-001"
        ],
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "Group",
              "formatter": 1
            }
          ],
          "hierarchySettings": {
            "treeType": 1,
            "groupBy": [
              "Resource_TYPE"
            ]
          }
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "bil"
        },
        {
          "parameterName": "sand",
          "comparison": "isEqualTo",
          "value": "1000"
        }
      ],
      "name": "query - 129 - Copy - Copy - Copy"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let data =externaldata ( Resource_ID:string,  name:string ,CREATED_date:string ,Days:int,Resource_TYPE:string, subscription_NAME:string)['https://stgusea1finops001.blob.core.windows.net/creationdate/Resource_created2023-04-11-083824.csv?sp=r&st=2023-07-10T13:04:21Z&se=2023-11-16T21:04:21Z&spr=https&sv=2022-11-02&sr=b&sig=0t32%2FlA1L4QJIPpSH9K9tAlJ9k5MWLEzWZ8S10TE2T0%3D'] with (ignoreFirstRecord=true);\r\n['data']\r\n",
        "size": 0,
        "title": "Creation date for sandbox resources",
        "timeContext": {
          "durationMs": 86400000
        },
        "showExportToExcel": true,
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "crossComponentResources": [
          "/subscriptions/0b451dfd-c31e-4bee-8355-dea2782ecb11/resourceGroups/rg-itservices-finOps-dev-002/providers/Microsoft.OperationalInsights/workspaces/law-finops-001"
        ],
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "Group",
              "formatter": 1
            }
          ],
          "hierarchySettings": {
            "treeType": 1,
            "groupBy": [
              "Resource_TYPE"
            ]
          }
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "bil"
        },
        {
          "parameterName": "sand",
          "comparison": "isEqualTo",
          "value": "all"
        }
      ],
      "name": "query - 129 - Copy - Copy - Copy - Copy"
    },
    {
      "type": 11,
      "content": {
        "version": "LinkItem/1.0",
        "style": "tabs",
        "links": [
          {
            "id": "c74b0c2e-19d9-4389-8ca8-8b0608244e3c",
            "cellValue": "selTabts",
            "linkTarget": "parameter",
            "linkLabel": "Missing Tags",
            "subTarget": "mt",
            "style": "link"
          },
          {
            "id": "edeca8be-c31e-454a-82dc-d67ca5a60525",
            "cellValue": "selTabts",
            "linkTarget": "parameter",
            "linkLabel": "Security Score",
            "subTarget": "sec",
            "style": "link"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "tag"
      },
      "name": "links - 158"
    },
    {
      "type": 1,
      "content": {
        "json": "# Missing Tags",
        "style": "warning"
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "tag"
        },
        {
          "parameterName": "selTabts",
          "comparison": "isEqualTo",
          "value": "mt"
        }
      ],
      "name": "text - 124 - Copy"
    },
    {
      "type": 11,
      "content": {
        "version": "LinkItem/1.0",
        "style": "nav",
        "links": [
          {
            "id": "ae7eee6f-f588-49ad-afd4-36f220f58df8",
            "cellValue": "selectedTab3",
            "linkTarget": "parameter",
            "linkLabel": "CostCenterGLAccount Tag",
            "subTarget": "costcenter",
            "style": "primary"
          },
          {
            "id": "fd0cdd9e-c912-4f26-a454-e4f98f4f9fe7",
            "cellValue": "selectedTab3",
            "linkTarget": "parameter",
            "linkLabel": "OrganizationName Tag",
            "subTarget": "orgname",
            "style": "primary"
          },
          {
            "id": "dab8a011-2d5a-41db-9fef-518dc1609a04",
            "cellValue": "selectedTab3",
            "linkTarget": "parameter",
            "linkLabel": "dataOwner Tag",
            "subTarget": "dataowner",
            "style": "primary"
          },
          {
            "id": "33c045b4-d1fa-491d-a19c-72e7bfaed7eb",
            "cellValue": "selectedTab3",
            "linkTarget": "parameter",
            "linkLabel": "Environment Tag",
            "subTarget": "env",
            "style": "primary"
          }
        ]
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "tag"
        },
        {
          "parameterName": "selTabts",
          "comparison": "isEqualTo",
          "value": "mt"
        }
      ],
      "name": "links - 169"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "resources | project name,['type'],resourceGroup,subscriptionId,['tags'],location,tostring(['tags'].CostCenterGLAccount)\r\n| where isempty(tags_CostCenterGLAccount)",
        "size": 0,
        "title": "Resources with missing Cost Center Tag",
        "showExportToExcel": true,
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "value::all"
        ],
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "Group",
              "formatter": 1
            },
            {
              "columnMatch": "tags",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "warning",
                    "text": "{0}{1}"
                  }
                ]
              }
            }
          ],
          "rowLimit": 500,
          "hierarchySettings": {
            "treeType": 1,
            "groupBy": [
              "type"
            ]
          }
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "tag"
        },
        {
          "parameterName": "selectedTab3",
          "comparison": "isEqualTo",
          "value": "costcenter"
        },
        {
          "parameterName": "selTabts",
          "comparison": "isEqualTo",
          "value": "mt"
        }
      ],
      "name": "query - 163"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "resources | project name,['type'],resourceGroup,subscriptionId,['tags'],location,tostring(['tags'].OrganizationName)\r\n| where isempty(tags_OrganizationName)",
        "size": 0,
        "title": "Resources with missing Organization Name Tag",
        "showExportToExcel": true,
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "value::all"
        ],
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "Group",
              "formatter": 1
            },
            {
              "columnMatch": "tags",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "warning",
                    "text": "{0}{1}"
                  }
                ]
              }
            }
          ],
          "rowLimit": 500,
          "hierarchySettings": {
            "treeType": 1,
            "groupBy": [
              "type"
            ]
          }
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "tag"
        },
        {
          "parameterName": "selectedTab3",
          "comparison": "isEqualTo",
          "value": "orgname"
        },
        {
          "parameterName": "selTabts",
          "comparison": "isEqualTo",
          "value": "mt"
        }
      ],
      "name": "query - 163 - Copy"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "resources | project name,['type'],resourceGroup,subscriptionId,['tags'],location,tostring(['tags'].dataOwner)\r\n| where isempty(tags_dataOwner)",
        "size": 0,
        "title": "Resources with missing Data OwnerTag",
        "showExportToExcel": true,
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "value::all"
        ],
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "Group",
              "formatter": 1
            },
            {
              "columnMatch": "tags",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "warning",
                    "text": "{0}{1}"
                  }
                ]
              }
            }
          ],
          "rowLimit": 500,
          "hierarchySettings": {
            "treeType": 1,
            "groupBy": [
              "type"
            ]
          }
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "tag"
        },
        {
          "parameterName": "selectedTab3",
          "comparison": "isEqualTo",
          "value": "dataowner"
        },
        {
          "parameterName": "selTabts",
          "comparison": "isEqualTo",
          "value": "mt"
        }
      ],
      "name": "query - 163 - Copy - Copy"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "resources | project name,['type'],resourceGroup,subscriptionId,['tags'],location,tostring(['tags'].Environment)\r\n| where isempty(tags_Environment)",
        "size": 0,
        "title": "Resources with missing Environment Tag",
        "showExportToExcel": true,
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "value::all"
        ],
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "Group",
              "formatter": 1
            },
            {
              "columnMatch": "tags",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "warning",
                    "text": "{0}{1}"
                  }
                ]
              }
            }
          ],
          "rowLimit": 500,
          "hierarchySettings": {
            "treeType": 1,
            "groupBy": [
              "type"
            ]
          }
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "tag"
        },
        {
          "parameterName": "selectedTab3",
          "comparison": "isEqualTo",
          "value": "env"
        },
        {
          "parameterName": "selTabts",
          "comparison": "isEqualTo",
          "value": "mt"
        }
      ],
      "name": "query - 163 - Copy - Copy - Copy"
    },
    {
      "type": 1,
      "content": {
        "json": "# Secure Score",
        "style": "warning"
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "tag"
        },
        {
          "parameterName": "selTabts",
          "comparison": "isEqualTo",
          "value": "sec"
        }
      ],
      "name": "text - 124 - Copy - Copy - Copy"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "130c9526-412f-4215-8a41-0e5a7cded33d",
            "version": "KqlParameterItem/1.0",
            "name": "Subscriptions",
            "type": 6,
            "isRequired": true,
            "typeSettings": {
              "additionalResourceOptions": [],
              "includeAll": true
            },
            "timeContext": {
              "durationMs": 86400000
            },
            "value": "/subscriptions/926bc7a0-cdbd-4ade-847b-b91d02f07c66"
          }
        ],
        "style": "pills",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces"
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "tag"
        },
        {
          "parameterName": "selTabts",
          "comparison": "isEqualTo",
          "value": "sec"
        }
      ],
      "name": "parameters - 161"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "SecurityResources \r\n| where type == 'microsoft.security/securescores' \r\n| extend current = properties.score.current, max = todouble(properties.score.max)\r\n| project subscriptionId, current, max, percentage = ((current / max)*100)",
        "size": 0,
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscriptions}"
        ],
        "visualization": "tiles",
        "tileSettings": {
          "titleContent": {
            "formatter": 1
          },
          "leftContent": {
            "columnMatch": "current",
            "formatter": 12,
            "formatOptions": {
              "palette": "auto"
            },
            "numberFormat": {
              "unit": 17,
              "options": {
                "style": "decimal",
                "maximumFractionDigits": 2,
                "maximumSignificantDigits": 3
              }
            }
          },
          "showBorder": false
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "tag"
        },
        {
          "parameterName": "selTabts",
          "comparison": "isEqualTo",
          "value": "sec"
        }
      ],
      "customWidth": "50",
      "name": "query - 162"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "SecurityResources \r\n| where type == 'microsoft.security/securescores/securescorecontrols'\r\n| extend SecureControl = properties.displayName, unhealthy = properties.unhealthyResourceCount, currentscore = properties.score.current, maxscore = properties.score.max\r\n| project SecureControl , unhealthy, currentscore, maxscore",
        "size": 0,
        "title": "Secure Score Details",
        "showExportToExcel": true,
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscriptions}"
        ]
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "tag"
        },
        {
          "parameterName": "selTabts",
          "comparison": "isEqualTo",
          "value": "sec"
        }
      ],
      "customWidth": "50",
      "name": "query - 170"
    },
    {
      "type": 11,
      "content": {
        "version": "LinkItem/1.0",
        "style": "tabs",
        "links": [
          {
            "id": "99fa7388-32f8-458e-8c51-3f3a4d526280",
            "cellValue": "selectedTab1",
            "linkTarget": "parameter",
            "linkLabel": "Log Analytics Workspace Retention",
            "subTarget": "law",
            "style": "primary"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "ret"
      },
      "name": "links - 173"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "where type =~ 'microsoft.operationalinsights/workspaces'\r\n//| where 'ABCLAV001, CONA-NonProd, CONA-Prod, cmlaceix4nzyprxwe' has name\r\n| extend \r\n  state = trim(' ', tostring(properties.provisioningState)),\r\n  sku = trim(' ', tostring(properties.sku.name)),\r\n  skuUpdate = trim(' ', tostring(properties.sku.lastSkuUpdate)),\r\n  retentionDays = trim(' ', tostring(properties.retentionInDays)),\r\n  dailyquotaGB  = trim(' ', tostring(properties.workspaceCapping.dailyQuotaGb))\r\n| extend dailyquotaGB = iif(dailyquotaGB !=-1.0, dailyquotaGB,\"--\")\r\n| project ['Workspace']=id, Name=name, ['Resource Group']=strcat(\"/subscriptions/\", subscriptionId, \"/resourceGroups/\", resourceGroup), ['Location']=location, ['Retention (days)']=retentionDays, ['Daily Cap (GB)']=dailyquotaGB, ['Licence']=sku, Subscription=strcat(\"/subscriptions/\", subscriptionId)\r\n|order by ['Retention (days)'] desc",
        "size": 0,
        "title": "LAW retention details",
        "showExportToExcel": true,
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "value::all"
        ]
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "ret"
        },
        {
          "parameterName": "selectedTab1",
          "comparison": "isEqualTo",
          "value": "law"
        }
      ],
      "name": "query - 174"
    },
    {
      "type": 11,
      "content": {
        "version": "LinkItem/1.0",
        "style": "tabs",
        "links": [
          {
            "id": "36c54a30-0e0d-45f3-86ce-25dca71ff828",
            "cellValue": "selectedTab4",
            "linkTarget": "parameter",
            "linkLabel": "Non HDD Snap Shot",
            "subTarget": "nhss",
            "preText": "Snap Shot drives",
            "style": "link"
          },
          {
            "id": "0126208a-3257-4238-b534-c9078d58b968",
            "cellValue": "selectedTab4",
            "linkTarget": "parameter",
            "linkLabel": "Azure App Service",
            "subTarget": "aas",
            "style": "link"
          },
          {
            "id": "b25358ea-5019-4064-a7ca-404a284d9ab9",
            "cellValue": "selectedTab4",
            "linkTarget": "parameter",
            "linkLabel": "Azure Kubernetes Service",
            "subTarget": "aks",
            "style": "link"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "srt"
      },
      "name": "links - Compute"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "// Run query to see results.\r\nresources\r\n| where type =~ 'microsoft.compute/snapshots'\r\n| extend skuName=tostring(sku.name)\r\n| extend accountType=case(skuName =~ 'Standard_LRS', 'Standard HDD',\r\n                          skuName =~ 'StandardSSD_LRS', 'Standard SSD',\r\n                          skuName =~ 'UltraSSD_LRS', 'Ultra Disk',\r\n                          skuName =~ 'Premium_LRS', 'Premium SSD',\r\n                          skuName =~ 'Standard_ZRS', 'Zone-redundant',\r\n                          skuName)\r\n| extend provisioningState=tostring(properties.provisioningState)\r\n| extend diskState=tostring(properties.diskState)\r\n| extend architecture=iff(tostring(properties.supportedCapabilities.architecture) =~ 'Arm64', 'Arm64', 'x64')\r\n| extend securityTypeString=tostring(properties.securityProfile.securityType)\r\n| extend securityType=case(securityTypeString =~ 'Standard', 'Standard',\r\n                          securityTypeString =~ 'TrustedLaunch', 'Trusted launch',\r\n                          securityTypeString startswith 'ConfidentialVm', 'Confidential',\r\n                          'Standard')\r\n| extend timeCreated=tostring(properties.timeCreated)\r\n| extend sizeProperty=tostring(properties.diskSizeGB)\r\n| extend size=iff(isempty(sizeProperty), '-', sizeProperty)\r\n| extend source=tostring(coalesce(properties.creationData.imageReference.id, properties.creationData.sourceUri, properties.creationData.sourceResourceId))\r\n| extend sourceSplit=split(source, '/')\r\n| extend sourceDisk=coalesce(sourceSplit[(-1)], '-')\r\n| extend snapshotType=iff(properties.incremental == false, 'Full', 'Incremental')\r\n| project \r\n    name, \r\n    id, \r\n    subscriptionId, \r\n    resourceGroup, \r\n    location, \r\n    edgeZone = iff(tostring(extendedLocation.type) =~ 'EdgeZone', tostring(extendedLocation.name), '-'),\r\n    type, \r\n    kind, \r\n    tags, \r\n    tenantId, \r\n    accountType, \r\n    provisioningState, \r\n    diskState, \r\n    timeCreated, \r\n    size, \r\n    sourceDisk, \r\n    snapshotType,\r\n    architecture,\r\n    securityType\r\n| extend subscriptionDisplayName=case(subscriptionId =~ '759b9007-97f8-4a5c-abff-224a1c0b26f1','Base Infrastructure',subscriptionId =~ 'd52c0874-ca55-4589-aa7f-2f11578b682d','CONA POC',subscriptionId =~ 'cfb9b711-3cb0-4df5-8a7c-98908bec6460','Digital_Non-Prod',subscriptionId =~ '594cf22d-3d0a-4ed4-903c-a632f451ef49','Digital_Production',subscriptionId =~ '3a962b01-218b-4afe-aaa6-aa403d44d61c','Infra_Shared',subscriptionId =~ 'b2726899-59de-4003-a879-4f4ef953091e','Innovation',subscriptionId =~ '1a2682bd-5893-481c-9f97-6a1d8ba4548e','IoT_Non-Prod',subscriptionId =~ '5b0deea6-1712-4138-bfd9-9574042858e1','IoT_Production',subscriptionId =~ 'c66f7a35-98f3-4c27-8875-8e3f426d52f7','Network',subscriptionId =~ '5d26aadf-bc83-45db-908e-d9f69c2d27b9','Non-Prod',subscriptionId =~ 'cd05aef1-6ad1-4425-bebc-9a3d1614a666','PerfTest',subscriptionId =~ '3a8d651a-33d8-46be-89b8-8cf0436d27dd','Production',subscriptionId =~ '7ca714c2-b83a-45af-a886-f90f8da6e367','Production-DR',subscriptionId =~ '5cb66768-10e7-414c-8f0a-b258679f25d3','Restricted_Non-Prod',subscriptionId =~ 'a96e49c9-c03d-4ead-adc8-069ffcbc3b29','Sandbox',subscriptionId =~ '7def3fc3-ae86-4ac6-8738-49141d3f0e5e','UnitedPOC',subscriptionId)\r\n| where (type !~ ('astronomer.astro/organizations'))\r\n| where (type !~ ('dell.storage/filesystems'))\r\n| where (type !~ ('informatica.datamanagement/organizations'))\r\n| where (type !~ ('paloaltonetworks.cloudngfw/globalrulestacks'))\r\n| where (type !~ ('solarwinds.observability/organizations'))\r\n| where (type !~ ('microsoft.azureactivedirectory/ciamdirectories'))\r\n| where (type !~ ('microsoft.agfoodplatform/farmbeats'))\r\n| where (type !~ ('microsoft.anybuild/clusters'))\r\n| where (type !~ ('microsoft.cdn/profiles/customdomains'))\r\n| where (type !~ ('microsoft.cdn/profiles/afdendpoints'))\r\n| where (type !~ ('microsoft.cdn/profiles/origingroups/origins'))\r\n| where (type !~ ('microsoft.cdn/profiles/origingroups'))\r\n| where (type !~ ('microsoft.cdn/profiles/afdendpoints/routes'))\r\n| where (type !~ ('microsoft.cdn/profiles/rulesets/rules'))\r\n| where (type !~ ('microsoft.cdn/profiles/rulesets'))\r\n| where (type !~ ('microsoft.cdn/profiles/secrets'))\r\n| where (type !~ ('microsoft.cdn/profiles/securitypolicies'))\r\n| where (type !~ ('microsoft.cloudtest/accounts'))\r\n| where (type !~ ('microsoft.cloudtest/hostedpools'))\r\n| where (type !~ ('microsoft.cloudtest/images'))\r\n| where (type !~ ('microsoft.cloudtest/pools'))\r\n| where (type !~ ('microsoft.codesigning/codesigningaccounts'))\r\n| where (type !~ ('microsoft.kubernetesconfiguration/extensions'))\r\n| where (type !~ ('microsoft.containerservice/managedclusters/microsoft.kubernetesconfiguration/extensions'))\r\n| where (type !~ ('microsoft.kubernetes/connectedclusters/microsoft.kubernetesconfiguration/namespaces'))\r\n| where (type !~ ('microsoft.containerservice/managedclusters/microsoft.kubernetesconfiguration/namespaces'))\r\n| where (type !~ ('microsoft.kubernetes/connectedclusters/microsoft.kubernetesconfiguration/fluxconfigurations'))\r\n| where (type !~ ('microsoft.containerservice/managedclusters/microsoft.kubernetesconfiguration/fluxconfigurations'))\r\n| where (type !~ ('microsoft.portalservices/extensions/deployments'))\r\n| where (type !~ ('microsoft.portalservices/extensions'))\r\n| where (type !~ ('microsoft.portalservices/extensions/slots'))\r\n| where (type !~ ('microsoft.portalservices/extensions/versions'))\r\n| where (type !~ ('microsoft.azuredatatransfer/connections'))\r\n| where (type !~ ('microsoft.azuredatatransfer/connections/flows'))\r\n| where (type !~ ('microsoft.azuredatatransfer/pipelines'))\r\n| where (type !~ ('microsoft.databasewatcher/watchers'))\r\n| where (type !~ ('microsoft.datacollaboration/workspaces'))\r\n| where (type !~ ('microsoft.deviceregistry/devices'))\r\n| where (type !~ ('microsoft.hdinsight/clusterpools/clusters'))\r\n| where (type !~ ('microsoft.hdinsight/clusterpools'))\r\n| where (type !~ ('microsoft.healthmodel/healthmodels'))\r\n| where (type !~ ('microsoft.hybridcompute/machinesesu'))\r\n| where (type !~ ('microsoft.network/virtualhubs')) or ((kind =~ ('routeserver')))\r\n| where (type !~ ('microsoft.metaverse/metaverses'))\r\n| where (type !~ ('microsoft.modsimworkbench/workbenches/chambers'))\r\n| where (type !~ ('microsoft.modsimworkbench/workbenches/chambers/connectors'))\r\n| where (type !~ ('microsoft.modsimworkbench/workbenches/chambers/files'))\r\n| where (type !~ ('microsoft.modsimworkbench/workbenches/chambers/filerequests'))\r\n| where (type !~ ('microsoft.modsimworkbench/workbenches/chambers/licenses'))\r\n| where (type !~ ('microsoft.modsimworkbench/workbenches/chambers/storages'))\r\n| where (type !~ ('microsoft.modsimworkbench/workbenches/chambers/workloads'))\r\n| where (type !~ ('microsoft.modsimworkbench/workbenches/sharedstorages'))\r\n| where (type !~ ('microsoft.modsimworkbench/workbenches'))\r\n| where (type !~ ('microsoft.insights/diagnosticsettings'))\r\n| where not((type =~ ('microsoft.network/serviceendpointpolicies')) and ((kind =~ ('internal'))))\r\n| where (type !~ ('microsoft.openlogisticsplatform/workspaces'))\r\n| where (type !~ ('microsoft.scom/managedinstances'))\r\n| where (type !~ ('microsoft.orbital/edgesites'))\r\n| where (type !~ ('microsoft.orbital/groundstations'))\r\n| where (type !~ ('microsoft.orbital/l2connections'))\r\n| where (type !~ ('microsoft.recommendationsservice/accounts/modeling'))\r\n| where (type !~ ('microsoft.recommendationsservice/accounts/serviceendpoints'))\r\n| where (type !~ ('microsoft.recoveryservicesbvtd/vaults'))\r\n| where (type !~ ('microsoft.recoveryservicesbvtd2/vaults'))\r\n| where (type !~ ('microsoft.recoveryservicesintd/vaults'))\r\n| where (type !~ ('microsoft.recoveryservicesintd2/vaults'))\r\n| where (type !~ ('microsoft.deploymentmanager/rollouts'))\r\n| where (type !~ ('microsoft.datareplication/replicationvaults'))\r\n| where (type !~ ('microsoft.storage/storagetasks'))\r\n| where not((type =~ ('microsoft.synapse/workspaces/sqlpools')) and ((kind =~ ('v3'))))\r\n| where (type !~ ('microsoft.mission/catalogs'))\r\n| where (type !~ ('microsoft.mission/communities'))\r\n| where (type !~ ('microsoft.mission/virtualenclaves/endpoints'))\r\n| where (type !~ ('microsoft.mission/externalconnections'))\r\n| where (type !~ ('microsoft.mission/internalconnections'))\r\n| where (type !~ ('microsoft.mission/virtualenclaves'))\r\n| where (type !~ ('microsoft.mission/virtualenclaves/workloads'))\r\n| where (type !~ ('microsoft.windowspushnotificationservices/registrations'))\r\n| where (type !~ ('microsoft.manufacturingplatform/manufacturingdataservices'))\r\n| where not((type =~ ('microsoft.sql/servers/databases')) and ((kind in~ ('system','v2.0,system','v12.0,system','v12.0,user,datawarehouse,gen2,analytics'))))\r\n| where not((type =~ ('microsoft.sql/servers')) and ((kind =~ ('v12.0,analytics'))))\r\n| where (accountType !~ ('Standard HDD'))\r\n| project name,timeCreated,accountType, subscriptionDisplayName,resourceGroup,size,id,type,kind,location,subscriptionId,tags\r\n| sort by (tolower(tostring(name))) asc",
        "size": 0,
        "title": "Snapshot with non HDD type: To optimize cost keep Snapshot Storage Type HDD",
        "showExportToExcel": true,
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "value::all"
        ]
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "srt"
        },
        {
          "parameterName": "selectedTab4",
          "comparison": "isEqualTo",
          "value": "nhss"
        }
      ],
      "name": "query - Non HDD Snap Shots"
    },
    {
      "type": 1,
      "content": {
        "json": "# Azure App Service\r\n## Save with Premium v3 reserved instances\r\nWhen you commit to an Azure App Service Premium v3 reserved instance you can save money. The reservation discount is applied automatically to the number of running instances that match the reservation scope and attributes - you don't need to assign a reservation to a specific instance to get the discounts.\r\n\r\n## Determine the right reserved instance size before you buy\r\nBefore you buy a reservation, you should determine the size of the Premium v3 reserved instance that you need. The following sections will help you determine the right Premium v3 reserved instance size.\r\n\r\n## Use Autoscale appropriately\r\nAutoscale can be used to provision resources for when they're needed or on demand, which allows you to minimize costs when your environment is idle.\r\n",
        "style": "upsell"
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab4",
          "comparison": "isEqualTo",
          "value": "aas"
        },
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "srt"
        }
      ],
      "name": "text - App Service"
    },
    {
      "type": 1,
      "content": {
        "json": "# Azure Kubernetes Service\r\n-Enable cluster autoscaler to automatically adjust the number of agent nodes in response to resource constraints\r\n\r\n-Consider using Azure Spot VMs for workloads that can handle interruptions, early terminations, or evictions. For example, workloads such as batch processing jobs, development and testing environments, and large compute workloads may be good candidates to be scheduled on a spot node pool.\r\n\r\n-Utilize the Horizontal pod autoscaler to adjust the number of pods in a deployment depending on CPU utilization or other select metrics.\r\n\r\n-Use the Start/Stop feature in Azure Kubernetes Services (AKS).\r\n\r\n",
        "style": "upsell"
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "srt"
        },
        {
          "parameterName": "selectedTab4",
          "comparison": "isEqualTo",
          "value": "aks"
        }
      ],
      "name": "text - AKS"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "",
        "size": 0,
        "timeContext": {
          "durationMs": 86400000
        },
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces"
      },
      "conditionalVisibility": {
        "parameterName": "SelectedTab",
        "comparison": "isEqualTo",
        "value": "regs"
      },
      "name": "query - 175"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "ddc21a11-ffe9-4204-a812-3981a06d7095",
            "version": "KqlParameterItem/1.0",
            "name": "Subscription",
            "label": "Sunscription Name",
            "type": 6,
            "isRequired": true,
            "typeSettings": {
              "additionalResourceOptions": [
                "value::1"
              ],
              "includeAll": true,
              "showDefault": false
            },
            "timeContext": {
              "durationMs": 86400000
            },
            "defaultValue": "value::1"
          }
        ],
        "style": "pills",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces"
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "cinfo"
      },
      "name": "parameters - 173"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "3f1afc3d-a5c4-4bca-9cfa-64301bbb3161",
            "version": "KqlParameterItem/1.0",
            "name": "RG_Filter",
            "label": "Filter By",
            "type": 2,
            "typeSettings": {
              "additionalResourceOptions": []
            },
            "jsonData": "[\r\n    { \"value\":\"Resource Group\",\"selected\":\"true\"},\r\n    { \"value\":\"Tags\" }\r\n]",
            "timeContext": {
              "durationMs": 86400000
            }
          }
        ],
        "style": "pills",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces"
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "cinfo"
      },
      "name": "parameters - 176"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "crossComponentResources": [
          "{Subscriptions}"
        ],
        "parameters": [
          {
            "id": "9d715fec-eabd-4433-89ae-0dae0c3b187a",
            "version": "KqlParameterItem/1.0",
            "name": "ResourceGroup",
            "label": "Resource Group",
            "type": 2,
            "isRequired": true,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "resourceContainers | where type == 'microsoft.resources/subscriptions/resourcegroups'\r\n| project resourceGroup\r\n| sort by resourceGroup asc",
            "crossComponentResources": [
              "{Subscriptions}"
            ],
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ]
            },
            "timeContext": {
              "durationMs": 86400000
            },
            "defaultValue": "value::all",
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          },
          {
            "id": "83ea348a-69aa-4253-817f-f77d21bfd8eb",
            "version": "KqlParameterItem/1.0",
            "name": "TagName",
            "label": "Tag Name",
            "type": 2,
            "isRequired": true,
            "query": "Resources\r\n| where tags != '' and tags != '[]'\r\n| mvexpand tags\r\n| extend tagName = tostring(bag_keys(tags)[0])\r\n| distinct tagName\r\n| sort by tagName asc",
            "crossComponentResources": [
              "{Subscriptions}"
            ],
            "typeSettings": {
              "additionalResourceOptions": []
            },
            "timeContext": {
              "durationMs": 86400000
            },
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources",
            "value": null
          },
          {
            "id": "7f5306f5-2294-4736-b89b-c7bdb975ca7a",
            "version": "KqlParameterItem/1.0",
            "name": "TagValue",
            "label": "Tag Value",
            "type": 2,
            "isRequired": true,
            "query": "Resources\r\n| mvexpand tags\r\n| extend tagName = tostring(bag_keys(tags)[0])\r\n| extend tagValue = tostring(tags[tagName])\r\n| where tags != '' and tags != '[]' and tostring(bag_keys(tags)[0]) == '{TagName}'\r\n| distinct tagValue\r\n| sort by tagValue asc",
            "crossComponentResources": [
              "{Subscriptions}"
            ],
            "typeSettings": {
              "additionalResourceOptions": []
            },
            "timeContext": {
              "durationMs": 86400000
            },
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources",
            "value": null
          }
        ],
        "style": "pills",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources"
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "cinfo"
      },
      "name": "parameters - 177"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "{\"version\":\"ARMEndpoint/1.0\",\"data\":\"{\\r\\n\\t\\\"type\\\": \\\"Usage\\\",\\r\\n\\t\\\"timeframe\\\": \\\"TheLastBillingMonth\\\",\\r\\n\\t\\\"dataset\\\": {\\r\\n\\t\\t\\\"granularity\\\": \\\"None\\\",\\r\\n\\t\\t\\\"filter\\\": {\\r\\n\\t\\t\\t\\t\\t\\\"dimensions\\\": {\\r\\n\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"resourceType\\\",\\r\\n\\t\\t\\t\\t\\t\\t\\\"operator\\\": \\\"In\\\",\\r\\n\\t\\t\\t\\t\\t\\t\\\"values\\\": [\\r\\n\\t\\t\\t\\t\\t\\t\\t\\\"microsoft.compute/disks\\\",\\r\\n\\t\\t\\t\\t\\t\\t\\t\\\"microsoft.network/applicationgateways\\\",\\r\\n\\t\\t\\t\\t\\t\\t\\t\\\"microsoft.network/loadbalancers\\\",\\r\\n\\t\\t\\t\\t\\t\\t\\t\\\"microsoft.network/publicIPAddresses\\\",\\r\\n\\t\\t\\t\\t\\t\\t\\t\\\"microsoft.Compute/VirtualMachines\\\"\\r\\n\\t\\t\\t\\t\\t\\t]\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t},\\r\\n\\t\\t\\\"aggregation\\\": {\\r\\n\\t\\t\\t\\\"totalCost\\\": {\\r\\n\\t\\t\\t\\t\\\"name\\\": \\\"PreTaxCost\\\",\\r\\n\\t\\t\\t\\t\\\"function\\\": \\\"Sum\\\"\\r\\n\\t\\t\\t}\\r\\n\\t\\t},\\r\\n\\t\\t\\\"grouping\\\": [\\r\\n\\t\\t\\t{\\r\\n\\t\\t\\t\\t\\\"type\\\": \\\"Dimension\\\",\\r\\n\\t\\t\\t\\t\\\"name\\\": \\\"ResourceId\\\"\\r\\n\\t\\t\\t}\\r\\n\\t\\t]\\r\\n\\t}\\r\\n}\",\"headers\":[],\"method\":\"POST\",\"path\":\"/subscriptions/{Subscription:id}/providers/Microsoft.CostManagement/query?\",\"urlParams\":[{\"key\":\"api-version\",\"value\":\"2019-11-01\"}],\"batchDisabled\":false,\"transformers\":[{\"type\":\"jsonpath\",\"settings\":{\"tablePath\":\"$.properties\",\"columns\":[]}}]}",
        "size": 0,
        "title": "Get Cost Idle Resources",
        "showExportToExcel": true,
        "queryType": 12,
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "Group",
              "formatter": 1
            }
          ],
          "rowLimit": 10000
        }
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "cinfo"
      },
      "name": "query - 174"
    },
    {
      "type": 11,
      "content": {
        "version": "LinkItem/1.0",
        "style": "tabs",
        "links": [
          {
            "id": "5265491c-f82e-4ee9-9787-ddfdefb85f9d",
            "cellValue": "selectedTab2",
            "linkTarget": "parameter",
            "linkLabel": "Inactive Resources",
            "subTarget": "incr",
            "style": "link"
          },
          {
            "id": "5badff83-2bf1-425e-bf82-d40f6071f90c",
            "cellValue": "selectedTab2",
            "linkTarget": "parameter",
            "linkLabel": "Policy Optimizations",
            "subTarget": "polo",
            "style": "link"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "bkp"
      },
      "name": "links - 204 Backup"
    },
    {
      "type": 1,
      "content": {
        "json": "Below are the backup instances which do not have a successful recovery point in the selected time range. You can save on costs by unprotecting decommissioned machines. [Learn More](https://aka.ms/AzureBackupReportDeletedResourcesView)\r\n\r\nShowing results for Time Range: Last 7 days"
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "bkp"
        },
        {
          "parameterName": "selectedTab2",
          "comparison": "isEqualTo",
          "value": "incr"
        }
      ],
      "name": "text - 206"
    },
    {
      "type": 11,
      "content": {
        "version": "LinkItem/1.0",
        "style": "tabs",
        "links": [
          {
            "id": "c886a5ba-3a9b-46ed-bbba-ce45bf91f7b7",
            "cellValue": "selectedTab3",
            "linkTarget": "parameter",
            "linkLabel": "Retention Optimizations",
            "subTarget": "reto",
            "style": "link"
          },
          {
            "id": "1b32a1ca-9e39-434e-9b5d-16b081bc1b11",
            "cellValue": "selectedTab3",
            "linkTarget": "parameter",
            "linkLabel": "Backup Schedule Optimizations",
            "subTarget": "bso",
            "style": "link"
          }
        ]
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "bkp"
        },
        {
          "parameterName": "selectedTab2",
          "comparison": "isEqualTo",
          "value": "polo"
        }
      ],
      "name": "links - 205 Policy_Optimizations"
    },
    {
      "type": 1,
      "content": {
        "json": "Explore cost-saving opportunities by identifying items with backup retained for longer duration by your organization. [Learn More](https://aka.ms/AzureBackupReportLargeRetentionView)\r\n\r\nUse the below filters to identify backup items with retentions larger than the specified values. For the database workloads, retention duration of the full backups is considered. [Learn More](https://aka.ms/AzureBackupReportLargeRetentionView2)\r\n\r\n## Note:\r\n- For backup instances which are using the vault-standard tier, the below grid takes into consideration the retention duration in the vault-standard tier. For backup instances which are not using the vault tier (for example, items protected by Azure Disk Backup solution), the below grid takes into consideration the snapshot tier retention.\r\n"
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "bkp"
        },
        {
          "parameterName": "selectedTab3",
          "comparison": "isEqualTo",
          "value": "reto"
        },
        {
          "parameterName": "selectedTab2",
          "comparison": "isEqualTo",
          "value": "polo"
        }
      ],
      "name": "text - 207"
    },
    {
      "type": 1,
      "content": {
        "json": "Databases configured for daily full backup\r\n\r\nUsing daily differential backups with weekly full backups is often more cost-effective than using daily full backups. [Learn More](https://aka.ms/AzureBackupReportDailyFullBackupView)"
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "bkp"
        },
        {
          "parameterName": "selectedTab2",
          "comparison": "isEqualTo",
          "value": "polo"
        },
        {
          "parameterName": "selectedTab3",
          "comparison": "isEqualTo",
          "value": "bso"
        }
      ],
      "name": "text - 208"
    }
  ],
  "fallbackResourceIds": [
    "azure monitor"
  ],
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}
